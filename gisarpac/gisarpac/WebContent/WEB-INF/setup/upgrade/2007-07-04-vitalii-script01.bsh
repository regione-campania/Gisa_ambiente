import java.sql.*;
import org.aspcfs.modules.admin.base.Permission;
import org.aspcfs.modules.admin.base.PermissionList;
import org.aspcfs.modules.admin.base.PermissionCategory;
import org.aspcfs.modules.base.Constants;
import org.aspcfs.modules.base.ModuleFieldCategoryLink;
import org.aspcfs.utils.Dictionary;

// Using the constant categoryId from permissions.xml, get the database id for
// this module.  This allows for translated permission categories to be used...

  // Load the dictionary for localization
  String fs = System.getProperty("file.separator") ;
  Dictionary dictionary = new Dictionary(languagePath, "en_US");
  if (systemLanguage != null) {
    if (!"en_US".equals(locale)) {
      //Override the text with a selected language
      dictionary.load(languagePath, locale);
    }
  }
  
  // Load permission category for later use
  PermissionCategory permissionCategory = new PermissionCategory(db, PermissionCategory.lookupId(db, PermissionCategory.PERMISSION_CAT_SALES));

  // See if permission already exists
  int existingId = Permission.lookupId(db, "sales-leads-opportunities");
    
  if (existingId == -1) {

      level = PermissionList.retrieveMaxLevel(db, permissionCategory.getId())  + 10;
      print("New level to insert: " + level);

      // Insert a new permission so that user roles can access folders
      Permission permission = new Permission();
      permission.setCategoryId(permissionCategory.getId());
      permission.setName("sales-leads-opportunities");
      permission.setDescription("Leads Opportunities");
      permission.setView(true);
      permission.setAdd(true);
      permission.setEdit(true);
      permission.setDelete(true);
      permission.setPermissionLevel(level);
      permission.setEnabled(true);
      permission.setActive(true);
      permission.setViewpoints(false);
      permission.insert(db);
      print("Leads Opportunities Permissions added.");
  } else {
      print("Leads Opportunities Permissions already exist.");
  }