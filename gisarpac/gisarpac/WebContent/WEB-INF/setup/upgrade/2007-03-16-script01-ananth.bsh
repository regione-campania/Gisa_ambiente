/*
  Upgrade script that adds a primary key to an existing database table.
*/

import java.net.URL;
import java.sql.*;
import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;

import org.aspcfs.apps.transfer.reader.cfsdatabasereader.PropertyMapList;
import org.aspcfs.utils.XMLUtils;
import org.aspcfs.utils.DatabaseSchemaUtils;

URL mapFile = new URL(prefsURL.toString() + "cfs/transfer/import-mappings.xml");
if ("file".equals(mapFile.getProtocol())) {
  File file = new File(mapFile.getPath());
  if (!file.exists()) {
    mapFile = new URL(prefsURL.toString() + "import-mappings.xml");
  }
}

PropertyMapList mappings = null;
ArrayList modules = new ArrayList();
try {
  mappings = new PropertyMapList(mapFile, modules);
} catch (Exception e) {
  e.printStackTrace(System.out);
}
print("Object Mappings loaded successfully....");

HashMap primaryKeys = new HashMap();
primaryKeys.put("customFieldData", "data_id"); //custom_field_data
primaryKeys.put("fileItemVersion", "version_id"); //project_files_version
primaryKeys.put("fileDownloadLog", "download_id"); //project_files_download     
primaryKeys.put("actionStepAccountTypes", "id"); //action_step_account_types
primaryKeys.put("contactTypeLevels", "id"); //contact_type_levels
primaryKeys.put("opportunityComponentLevels", "id"); //opportunity_component_levels
           
DatabaseSchemaUtils.addPrimaryKey(db, mappings, primaryKeys);
