/*
  This is a beanshell script that performs maintenance on a given database 
  connection (db) from ant upgradedb
  
  Service Contracts module
*/
import java.sql.*;
import org.aspcfs.modules.admin.base.Permission;
import org.aspcfs.modules.admin.base.PermissionCategory;

String module = "Service Contracts";
int level = 933;
boolean hasFolders = false;
boolean hasLookups = true;
boolean hasViewpoints = false;
boolean hasCategories = false;
boolean hasScheduledEvents = false;
boolean hasObjectEvents = false;
boolean hasReports = false;

print("Adding " + module + " module if it doesn't exist");

//Check and insert a module
boolean isNew = false;
int moduleId = -1;
st = db.createStatement();
rs = st.executeQuery(
  "SELECT category_id " +
  "FROM permission_category " +
  "WHERE category = '" + module + "'");
if (rs.next()) {
  moduleId = rs.getInt("category_id");
}
rs.close();
st.close();
//Insert the category if needed
if (moduleId == -1) {
  print("Category not found, inserting...");
  isNew = true;
  PermissionCategory thisCategory = new PermissionCategory();
  thisCategory.setCategory(module);
  thisCategory.setDescription(null);
  thisCategory.setLevel(level);
  thisCategory.setEnabled(true);
  thisCategory.setActive(true);
  thisCategory.setFolders(hasFolders);
  thisCategory.setLookups(hasLookups);
  thisCategory.setViewpoints(hasViewpoints);
  thisCategory.setCategories(hasCategories);
  thisCategory.setScheduledEvents(hasScheduledEvents);
  thisCategory.setObjectEvents(hasObjectEvents);
  thisCategory.setReports(hasReports);
  thisCategory.insert(db);
  moduleId = thisCategory.getId();
  
  print("Inserting new lookup tables...");
  if (1 == 1) {
    PreparedStatement pst = db.prepareStatement(
      "INSERT INTO lookup_lists_lookup " +
      "(module_id, category_id, lookup_id, level, table_name, class_name, description) " +
      "VALUES (?, ?, ?, ?, ?, ?, ?) ");
    pst.setInt(1, moduleId);
    pst.setInt(2, 130041100);
    pst.setInt(3, 130041305);
    pst.setInt(4, 10);
    pst.setString(5, "lookup_sc_category");
    pst.setString(6, "lookupList");
    pst.setString(7, "Service Contract Category");
    pst.executeUpdate();
    pst.close();
  }
  if (1 == 1) {
    PreparedStatement pst = db.prepareStatement(
      "INSERT INTO lookup_lists_lookup " +
      "(module_id, category_id, lookup_id, level, table_name, class_name, description) " +
      "VALUES (?, ?, ?, ?, ?, ?, ?) ");
    pst.setInt(1, moduleId);
    pst.setInt(2, 130041100);
    pst.setInt(3, 130041306);
    pst.setInt(4, 10);
    pst.setString(5, "lookup_sc_type");
    pst.setString(6, "lookupList");
    pst.setString(7, "Service Contract Type");
    pst.executeUpdate();
    pst.close();
  }
  if (1 == 1) {
    PreparedStatement pst = db.prepareStatement(
      "INSERT INTO lookup_lists_lookup " +
      "(module_id, category_id, lookup_id, level, table_name, class_name, description) " +
      "VALUES (?, ?, ?, ?, ?, ?, ?) ");
    pst.setInt(1, moduleId);
    pst.setInt(2, 130041100);
    pst.setInt(3, 116041409);
    pst.setInt(4, 10);
    pst.setString(5, "lookup_response_model");
    pst.setString(6, "lookupList");
    pst.setString(7, "Response Time Model");
    pst.executeUpdate();
    pst.close();
  }
  if (1 == 1) {
    PreparedStatement pst = db.prepareStatement(
      "INSERT INTO lookup_lists_lookup " +
      "(module_id, category_id, lookup_id, level, table_name, class_name, description) " +
      "VALUES (?, ?, ?, ?, ?, ?, ?) ");
    pst.setInt(1, moduleId);
    pst.setInt(2, 130041100);
    pst.setInt(3, 116041410);
    pst.setInt(4, 10);
    pst.setString(5, "lookup_phone_model");
    pst.setString(6, "lookupList");
    pst.setString(7, "Phone Service Model");
    pst.executeUpdate();
    pst.close();
  }
  if (1 == 1) {
    PreparedStatement pst = db.prepareStatement(
      "INSERT INTO lookup_lists_lookup " +
      "(module_id, category_id, lookup_id, level, table_name, class_name, description) " +
      "VALUES (?, ?, ?, ?, ?, ?, ?) ");
    pst.setInt(1, moduleId);
    pst.setInt(2, 130041100);
    pst.setInt(3, 116041411);
    pst.setInt(4, 10);
    pst.setString(5, "lookup_onsite_model");
    pst.setString(6, "lookupList");
    pst.setString(7, "Onsite Service Model");
    pst.executeUpdate();
    pst.close();
  }
  if (1 == 1) {
    PreparedStatement pst = db.prepareStatement(
      "INSERT INTO lookup_lists_lookup " +
      "(module_id, category_id, lookup_id, level, table_name, class_name, description) " +
      "VALUES (?, ?, ?, ?, ?, ?, ?) ");
    pst.setInt(1, moduleId);
    pst.setInt(2, 130041100);
    pst.setInt(3, 116041412);
    pst.setInt(4, 10);
    pst.setString(5, "lookup_email_model");
    pst.setString(6, "lookupList");
    pst.setString(7, "Email Service Model");
    pst.executeUpdate();
    pst.close();
  }
  if (1 == 1) {
    PreparedStatement pst = db.prepareStatement(
      "INSERT INTO lookup_lists_lookup " +
      "(module_id, category_id, lookup_id, level, table_name, class_name, description) " +
      "VALUES (?, ?, ?, ?, ?, ?, ?) ");
    pst.setInt(1, moduleId);
    pst.setInt(2, 130041100);
    pst.setInt(3, 308041546);
    pst.setInt(4, 10);
    pst.setString(5, "lookup_hours_reason");
    pst.setString(6, "lookupList");
    pst.setString(7, "Contract Hours Adjustment Reason");
    pst.executeUpdate();
    pst.close();
  }
}

print("Finished");
