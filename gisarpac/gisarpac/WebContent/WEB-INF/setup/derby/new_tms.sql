-- ----------------------------------------------------------------------------
--  Apache Derby Table Creation
--
--  @author     Andrei I. Holub
--  @created    August 31, 2006
--  @version    $Id:$
-- ----------------------------------------------------------------------------

-- REQUIRES: new_product.sql
-- REQUIRES: new_project.sql
 
CREATE TABLE ticket_level (
  code INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  description VARCHAR(300) NOT NULL UNIQUE,
  default_item CHAR(1) DEFAULT '0',
  "level" INT DEFAULT 0,
  enabled CHAR(1) DEFAULT '1',
  entered TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  modified TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE ticket_severity (
  code INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY
  ,description VARCHAR(300) NOT NULL UNIQUE
  ,style CLOB NOT NULL DEFAULT ''
  ,default_item CHAR(1) DEFAULT '0'
  ,"level" INTEGER DEFAULT 0
  ,enabled CHAR(1) DEFAULT '1'
  ,entered TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
  ,modified TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE lookup_ticketsource (
  code INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY
  ,description VARCHAR(300) NOT NULL UNIQUE
  ,default_item CHAR(1) DEFAULT '0'
  ,"level" INTEGER DEFAULT 0
  ,enabled CHAR(1) DEFAULT '1'
  ,entered TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
  ,modified TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE lookup_ticket_status (
  code INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY
  ,description VARCHAR(300) NOT NULL UNIQUE
  ,default_item CHAR(1) DEFAULT '0'
  ,"level" INTEGER DEFAULT 0
  ,enabled CHAR(1) DEFAULT '1'
  ,entered TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
  ,modified TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE ticket_priority (
  code INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY
  ,description VARCHAR(300) NOT NULL UNIQUE
  ,style CLOB NOT NULL DEFAULT '' 
  ,default_item CHAR(1) DEFAULT '0'
  ,"level" INTEGER DEFAULT 0
  ,enabled CHAR(1) DEFAULT '1'
  ,entered TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
  ,modified TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE lookup_ticket_escalation(
  code INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY
  ,description VARCHAR(300) NOT NULL UNIQUE
  ,default_item CHAR(1) DEFAULT '0'
  ,"level" INTEGER DEFAULT 0
  ,enabled CHAR(1) DEFAULT '1'
  ,entered TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
  ,modified TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE ticket_category ( 
  id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY
  ,cat_level int  NOT NULL DEFAULT 0 
  ,parent_cat_code int NOT NULL DEFAULT 0
  ,description VARCHAR(300) NOT NULL 
  ,full_description CLOB NOT NULL DEFAULT ''
  ,default_item CHAR(1) DEFAULT '0'
  ,"level" INTEGER DEFAULT 0
  ,enabled CHAR(1) DEFAULT '1'
  ,site_id INTEGER REFERENCES lookup_site_id(code)
  ,entered TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
  ,modified TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE ticket_category_draft (
  id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  link_id INT DEFAULT -1,
  cat_level int  NOT NULL DEFAULT 0,
  parent_cat_code int NOT NULL DEFAULT 0,
  description VARCHAR(300) NOT NULL,
  full_description CLOB NOT NULL DEFAULT '',
  default_item CHAR(1) DEFAULT '0',
  "level" INTEGER DEFAULT 0,
  enabled CHAR(1) DEFAULT '1',
  site_id INTEGER REFERENCES lookup_site_id(code),
  entered TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  modified TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- Ticket Category Draft Assignment table
CREATE TABLE ticket_category_draft_assignment (
  map_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  category_id INTEGER NOT NULL REFERENCES ticket_category_draft(id),
  department_id INTEGER REFERENCES lookup_department(code),
  assigned_to INTEGER REFERENCES "access"(user_id),
  group_id INTEGER REFERENCES user_group(group_id)
);

-- Ticket Category Assignment table
CREATE TABLE ticket_category_assignment (
  map_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  category_id INTEGER NOT NULL REFERENCES ticket_category(id),
  department_id INTEGER REFERENCES lookup_department(code),
  assigned_to INTEGER REFERENCES "access"(user_id),
  group_id INTEGER REFERENCES user_group(group_id)
);

CREATE TABLE ticket (
  ticketid INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  org_id INT REFERENCES organization, 
  contact_id INT REFERENCES contact, 
  problem CLOB NOT NULL,
  entered TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  enteredby INT NOT NULL REFERENCES "access"(user_id),
  modified TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  modifiedby INT NOT NULL REFERENCES "access"(user_id),
  closed TIMESTAMP,
  pri_code INT REFERENCES ticket_priority(code), 
  level_code INT REFERENCES ticket_level(code),
  department_code INT REFERENCES lookup_department,
  source_code INT REFERENCES lookup_ticketsource(code), 
  cat_code INT REFERENCES ticket_category(id),
  subcat_code1 INT REFERENCES ticket_category(id),
  subcat_code2 INT REFERENCES ticket_category(id),
  subcat_code3 INT REFERENCES ticket_category(id),
  assigned_to INT REFERENCES "access",
  "comment" CLOB,
  solution CLOB,
  scode INT REFERENCES ticket_severity(code),
  critical TIMESTAMP,
  notified TIMESTAMP,
  custom_data CLOB,
  location VARCHAR(256),
  assigned_date TIMESTAMP,
  est_resolution_date TIMESTAMP,
  resolution_date TIMESTAMP,
  cause CLOB,
  link_contract_id INTEGER REFERENCES service_contract(contract_id),
  link_asset_id INTEGER REFERENCES asset(asset_id),
  product_id INTEGER REFERENCES product_catalog(product_id)
  -- DO NOT PUT ANY MORE FIELDS IN THIS TABLE HERE
  -- THEY MUST BE APPENDED to new_tms_append_fields.sql because of referential
  -- integrity
);

CREATE INDEX ticket_cidx ON ticket (assigned_to, closed);
CREATE INDEX ticketlist_entered ON ticket (entered);
-- CREATE INDEX ticket_problem_idx ON ticket (problem);
-- CREATE INDEX ticket_comment_idx ON ticket ("comment");
-- CREATE INDEX ticket_solution_idx ON ticket (solution);

CREATE TABLE project_ticket_count (
  project_id INT UNIQUE NOT NULL REFERENCES projects(project_id),
  key_count INT NOT NULL DEFAULT 0
);

CREATE TABLE ticketlog (
  id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY
  ,ticketid INT REFERENCES ticket(ticketid)
  ,assigned_to INT REFERENCES "access"(user_id)
  ,"comment" CLOB
  ,closed CHAR(1)
  ,pri_code INT REFERENCES ticket_priority(code)
  ,level_code INT 
  ,department_code INT REFERENCES lookup_department(code)
  ,cat_code INT
  ,scode INT REFERENCES ticket_severity(code)
  ,entered TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
  ,enteredby INT NOT NULL REFERENCES "access"(user_id)
  ,modified TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
  ,modifiedby INT NOT NULL REFERENCES "access"(user_id)
  -- DO NOT PUT ANY MORE FIELDS IN THIS TABLE HERE
  -- THEY MUST BE APPENDED to new_tms_append_fields.sql because of referential
  -- integrity
);

CREATE TABLE ticket_csstm_form(
  form_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  link_ticket_id INT REFERENCES ticket(ticketid), 
  phone_response_time VARCHAR(10),
  engineer_response_time VARCHAR(10),
  follow_up_required CHAR(1) DEFAULT '0',
  follow_up_description VARCHAR(2048),
  alert_date TIMESTAMP,
  entered TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  enteredby INT NOT NULL REFERENCES "access"(user_id),
  modified TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  modifiedby INT NOT NULL REFERENCES "access"(user_id),
  enabled CHAR(1) DEFAULT '1',
  travel_towards_sc CHAR(1) DEFAULT '1',
  labor_towards_sc CHAR(1) DEFAULT '1',
  alert_date_timezone VARCHAR(255)
);

CREATE TABLE ticket_activity_item(
  item_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  link_form_id INT REFERENCES ticket_csstm_form(form_id),
  activity_date TIMESTAMP,
  description CLOB,
  travel_hours INT,
  travel_minutes INT,
  labor_hours INT,
  labor_minutes INT,
  activity_date_timezone VARCHAR(255)
);

CREATE TABLE ticket_sun_form(
  form_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  link_ticket_id INT REFERENCES ticket(ticketid), 
  description_of_service CLOB,
  entered TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  enteredby INT NOT NULL REFERENCES "access"(user_id),
  modified TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  modifiedby INT NOT NULL REFERENCES "access"(user_id),
  enabled CHAR(1) DEFAULT '1'
);

CREATE TABLE trouble_asset_replacement(
  replacement_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  link_form_id INT REFERENCES ticket_sun_form(form_id),
  part_number VARCHAR(256),
  part_description CLOB
);

CREATE TABLE ticketlink_project (
  ticket_id INT NOT NULL REFERENCES ticket(ticketid),
  project_id INT NOT NULL REFERENCES projects(project_id)
);

CREATE INDEX ticketlink_project_idx ON ticketlink_project(ticket_id);

-- Ticket Cause lookup
CREATE TABLE lookup_ticket_cause (
  code INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
  description VARCHAR(300) NOT NULL,
  default_item CHAR(1) DEFAULT '0',
  "level" INTEGER DEFAULT 0,
  enabled CHAR(1) DEFAULT '1',
  entered TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  modified TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- Ticket Resolution lookup
CREATE TABLE lookup_ticket_resolution (
  code INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
  description VARCHAR(300) NOT NULL,
  default_item CHAR(1) DEFAULT '0',
  "level" INTEGER DEFAULT 0,
  enabled CHAR(1) DEFAULT '1',
  entered TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  modified TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

--Ticket Defect table
CREATE TABLE ticket_defect (
  defect_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  title VARCHAR(255) NOT NULL,
  description CLOB,
  start_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  end_date TIMESTAMP,
  enabled CHAR(1) NOT NULL DEFAULT '1',
  trashed_date TIMESTAMP,
  site_id INT REFERENCES lookup_site_id(code)  
);

-- Ticket State lookup
CREATE TABLE lookup_ticket_state (
  code INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
  description VARCHAR(300) NOT NULL,
  default_item CHAR(1) DEFAULT '0',
  "level" INTEGER DEFAULT 0,
  enabled CHAR(1) DEFAULT '1',
  entered TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  modified TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

