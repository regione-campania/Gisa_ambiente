--
-- PostgreSQL database dump
--

-- Dumped from database version 15.1
-- Dumped by pg_dump version 15.3

-- Started on 2023-08-01 08:15:32

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- TOC entry 13 (class 2615 OID 16388)
-- Name: anagrafica; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA anagrafica;


ALTER SCHEMA anagrafica OWNER TO postgres;

--
-- TOC entry 14 (class 2615 OID 16389)
-- Name: giava; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA giava;


ALTER SCHEMA giava OWNER TO postgres;

--
-- TOC entry 15 (class 2615 OID 16390)
-- Name: gucl; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA gucl;


ALTER SCHEMA gucl OWNER TO postgres;

--
-- TOC entry 16 (class 2615 OID 16391)
-- Name: preaccettazione; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA preaccettazione;


ALTER SCHEMA preaccettazione OWNER TO postgres;

--
-- TOC entry 17 (class 2615 OID 16392)
-- Name: public_functions; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA public_functions;


ALTER SCHEMA public_functions OWNER TO postgres;

--
-- TOC entry 2 (class 3079 OID 16393)
-- Name: dblink; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS dblink WITH SCHEMA public;


--
-- TOC entry 7432 (class 0 OID 0)
-- Dependencies: 2
-- Name: EXTENSION dblink; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION dblink IS 'connect to other PostgreSQL databases from within a database';


--
-- TOC entry 3 (class 3079 OID 16439)
-- Name: hstore; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS hstore WITH SCHEMA public;


--
-- TOC entry 7433 (class 0 OID 0)
-- Dependencies: 3
-- Name: EXTENSION hstore; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION hstore IS 'data type for storing sets of (key, value) pairs';


--
-- TOC entry 4 (class 3079 OID 16567)
-- Name: pg_buffercache; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pg_buffercache WITH SCHEMA public;


--
-- TOC entry 7434 (class 0 OID 0)
-- Dependencies: 4
-- Name: EXTENSION pg_buffercache; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pg_buffercache IS 'examine the shared buffer cache';


--
-- TOC entry 5 (class 3079 OID 16573)
-- Name: pg_prewarm; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pg_prewarm WITH SCHEMA public;


--
-- TOC entry 7435 (class 0 OID 0)
-- Dependencies: 5
-- Name: EXTENSION pg_prewarm; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pg_prewarm IS 'prewarm relation data';


--
-- TOC entry 6 (class 3079 OID 16577)
-- Name: pgstattuple; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pgstattuple WITH SCHEMA public;


--
-- TOC entry 7436 (class 0 OID 0)
-- Dependencies: 6
-- Name: EXTENSION pgstattuple; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pgstattuple IS 'show tuple-level statistics';


--
-- TOC entry 7 (class 3079 OID 16587)
-- Name: tablefunc; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS tablefunc WITH SCHEMA public;


--
-- TOC entry 7437 (class 0 OID 0)
-- Dependencies: 7
-- Name: EXTENSION tablefunc; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION tablefunc IS 'functions that manipulate whole tables, including crosstab';


--
-- TOC entry 8 (class 3079 OID 16608)
-- Name: unaccent; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS unaccent WITH SCHEMA public;


--
-- TOC entry 7438 (class 0 OID 0)
-- Dependencies: 8
-- Name: EXTENSION unaccent; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION unaccent IS 'text search dictionary that removes accents';


--
-- TOC entry 1797 (class 1247 OID 16617)
-- Name: categorizzazzione_osa; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.categorizzazzione_osa AS (
	tipo_operatore integer,
	punteggio integer,
	categoria_rischio integer,
	intervallo_mesi integer,
	data_controllo timestamp without time zone,
	data_prossimo_controllo timestamp without time zone
);


ALTER TYPE public.categorizzazzione_osa OWNER TO postgres;

--
-- TOC entry 2723 (class 1247 OID 21876)
-- Name: utente; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.utente AS (
	username_ character varying,
	user_id integer,
	username character varying,
	password character varying,
	contact_id integer,
	role_id integer,
	manager_id integer,
	startofday integer,
	endofday integer,
	locale character varying,
	timezone character varying,
	last_ip character varying,
	last_login timestamp without time zone,
	enteredby integer,
	entered timestamp without time zone,
	modifiedby integer,
	modified timestamp without time zone,
	expires timestamp without time zone,
	alias integer,
	assistant integer,
	enabled boolean,
	currency character varying,
	language character varying,
	webdav_password character varying,
	hidden boolean,
	site_id integer,
	allow_webdav_access boolean,
	allow_httpapi_access boolean,
	role_id_old text,
	roleid_old integer,
	last_interaction_time timestamp without time zone,
	action character varying,
	command character varying,
	object_id integer,
	table_name character varying,
	asl_old integer,
	access_position_lat double precision,
	access_position_lon double precision,
	access_position_err text,
	trashed_date timestamp without time zone,
	in_dpat boolean,
	in_nucleo_ispettivo boolean,
	in_access boolean,
	codice_suap text,
	note_hd text,
	data_scadenza date,
	pec_suap text,
	callback_suap text,
	id_struttura_asl_complessa integer,
	callback_suap_ko text
);


ALTER TYPE public.utente OWNER TO postgres;

--
-- TOC entry 1800 (class 1247 OID 16620)
-- Name: ws_endpoint_info_object; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.ws_endpoint_info_object AS (
	id integer,
	id_endpoint integer,
	ambiente text,
	url text,
	username text,
	password text,
	ruolo text,
	ruolo_codice text,
	ruolo_valore_codice text,
	xmlns text,
	prefisso_username_password text,
	suffisso_autenticazione text
);


ALTER TYPE public.ws_endpoint_info_object OWNER TO postgres;

--
-- TOC entry 1803 (class 1247 OID 16623)
-- Name: ws_servizio_info_object; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.ws_servizio_info_object AS (
	nome_servizio text,
	nome_oggetto text,
	nome_campo text,
	obbligatorio_campo boolean
);


ALTER TYPE public.ws_servizio_info_object OWNER TO postgres;

--
-- TOC entry 905 (class 1255 OID 16624)
-- Name: genera_numero_registrazione(integer); Type: FUNCTION; Schema: anagrafica; Owner: postgres
--

CREATE FUNCTION anagrafica.genera_numero_registrazione(_idstabilimento integer) RETURNS text
    LANGUAGE plpgsql STRICT
    AS $$
DECLARE
_numRegistrazione text ;
_idIndirizzo integer;
_idComune integer;
_idProvincia integer;
_codComune text;
_codProvincia text;
_progressivo integer;

BEGIN

_progressivo = 0;
_idIndirizzo := -1;

-- sede operativa
select relsi.id_indirizzo into _idIndirizzo from anagrafica.rel_stabilimenti_indirizzi relsi where relsi.id_stabilimento = _idStabilimento and relsi.data_scadenza is null and relsi.data_cancellazione is null;
raise info 'CERCO ID INDIRIZZO SEDE OPERATIVA: %', _idIndirizzo;

-- sede legale
IF _idIndirizzo<0 THEN
select relii.id_indirizzo into _idIndirizzo from 
anagrafica.stabilimenti s
join anagrafica.rel_imprese_stabilimenti relis on relis.id_stabilimento = s.id and relis.data_cancellazione is null and relis.data_scadenza is null
join anagrafica.imprese i on i.id = relis.id_impresa and i.data_cancellazione is null
join anagrafica.rel_imprese_indirizzi relii on relii.id_impresa = i.id and relii.data_cancellazione is null and relii.data_scadenza is null 
where s.id = _idStabilimento;
raise info 'CERCO ID INDIRIZZO SEDE LEGALE: %', _idIndirizzo;
END IF;

-- residenza
IF _idIndirizzo<0 THEN
select relsfi.id_indirizzo  into _idIndirizzo from 
anagrafica.stabilimenti s
join anagrafica.rel_imprese_stabilimenti relis on relis.id_stabilimento = s.id and relis.data_cancellazione is null and relis.data_scadenza is null
join anagrafica.imprese i on i.id = relis.id_impresa and i.data_cancellazione is null
join anagrafica.rel_imprese_soggetti_fisici relisf on relisf.id_impresa = i.id and relisf.data_cancellazione is null and relisf.data_scadenza is null
join anagrafica.soggetti_fisici sf on sf.id = relisf.id_soggetto_fisico and sf.data_cancellazione is null
join anagrafica.rel_soggetti_fisici_indirizzi relsfi on relsfi.id_soggetto_fisico = sf.id and relsfi.data_cancellazione is null and relsfi.data_scadenza is null 
where s.id = _idStabilimento;
raise info 'CERCO ID INDIRIZZO RESIDENZA: %', _idIndirizzo;
END IF;

IF _idIndirizzo>0 THEN
-- se ho trovato un indirizzo, recupero i codici di comune e provincia
select comune into _idComune from anagrafica.indirizzi where id = _idIndirizzo;
select id_provincia into _idProvincia from anagrafica.comuni where id = _idComune;
select cod_comune into _codComune from anagrafica.comuni where id = _idComune;
select cod_provincia into _codProvincia from anagrafica.lookup_province where code = _idProvincia;
ELSE
-- altrimenti uso codici di default
_codComune := '000';
_codProvincia := 'ND';
END IF;
raise info 'COD COMUNE: %', _codComune;
raise info 'COD PROVINCIA: %', _codProvincia;

-- calcolo il progressivo per quei codici
select COALESCE(max(progressivo), 0) into _progressivo from anagrafica.progressivi_comune_provincia where cod_comune = _codComune and cod_provincia = _codProvincia;
_progressivo = _progressivo+1;
insert into anagrafica.progressivi_comune_provincia(progressivo, cod_comune, cod_provincia) values (_progressivo, _codComune, _codProvincia);

raise info 'PROGRESSIVO: %', _progressivo;

_numRegistrazione := 'U020' || 'N' || _codComune || _codProvincia || lpad(_progressivo||'', 6, '0');
raise info 'NUM REGISTRAZIONE: %', _numRegistrazione;

return _numRegistrazione ;
END;
$$;


ALTER FUNCTION anagrafica.genera_numero_registrazione(_idstabilimento integer) OWNER TO postgres;

--
-- TOC entry 906 (class 1255 OID 16625)
-- Name: genera_numero_registrazione(text, text); Type: FUNCTION; Schema: anagrafica; Owner: postgres
--

CREATE FUNCTION anagrafica.genera_numero_registrazione(_codcomune text, _codprovincia text) RETURNS text
    LANGUAGE plpgsql STRICT
    AS $$
DECLARE
_numRegistrazione text ;
_progressivo integer;

BEGIN

_progressivo = 0;

-- calcolo il progressivo per quei codici
select COALESCE(max(progressivo), 0) into _progressivo from anagrafica.progressivi_comune_provincia where cod_comune = _codComune and cod_provincia = _codProvincia;
_progressivo = _progressivo+1;
insert into anagrafica.progressivi_comune_provincia(progressivo, cod_comune, cod_provincia) values (_progressivo, _codComune, _codProvincia);

raise info 'PROGRESSIVO: %', _progressivo;

_numRegistrazione := 'U020' || _codComune || _codProvincia || lpad(_progressivo||'', 6, '0');
raise info 'NUM REGISTRAZIONE: %', _numRegistrazione;

return _numRegistrazione ;
END;
$$;


ALTER FUNCTION anagrafica.genera_numero_registrazione(_codcomune text, _codprovincia text) OWNER TO postgres;

--
-- TOC entry 907 (class 1255 OID 16626)
-- Name: get_checklist_by_idlinea(integer); Type: FUNCTION; Schema: giava; Owner: postgres
--

CREATE FUNCTION giava.get_checklist_by_idlinea(_id_linea_ml integer) RETURNS TABLE(code integer, description text, short_description character varying, enabled boolean, versione double precision, num_chk integer)
    LANGUAGE plpgsql
    AS $$
DECLARE

	linea_categorizzabile boolean;
	conta_res integer;
BEGIN
	linea_categorizzabile := (select categorizzabili from master_list_flag_linee_attivita  where id_linea = _id_linea_ml);

	if linea_categorizzabile then

		conta_res := (select count(*) 
				from lookup_org_catrischio c
				left join rel_checklist_sorv_ml rel on rel.id_checklist = c.code
				where c.enabled and rel.enabled and rel.id_linea = _id_linea_ml);
				
		if conta_res > 0 then
			
			RETURN QUERY
				select c.code, c.versione_alfonso, c.short_description, c.enabled, c.versione, c.num_chk
				from lookup_org_catrischio c
				left join rel_checklist_sorv_ml rel on rel.id_checklist = c.code
				where c.enabled and rel.enabled and rel.id_linea = _id_linea_ml;
		else
			RETURN QUERY
			     select -1, '', ''::character varying, false, -1::double precision, -1 from lookup_org_catrischio limit 1;

		end if;
	else 
		return; 
	end if;

   END;
$$;


ALTER FUNCTION giava.get_checklist_by_idlinea(_id_linea_ml integer) OWNER TO postgres;

--
-- TOC entry 908 (class 1255 OID 16627)
-- Name: get_info_masterlist(integer, text); Type: FUNCTION; Schema: giava; Owner: postgres
--

CREATE FUNCTION giava.get_info_masterlist(_riferimento_id integer DEFAULT NULL::integer, _riferimento_id_nome_tab text DEFAULT NULL::text) RETURNS TABLE(riferimento_id integer, riferimento_id_nome_tab text, codice_univoco text, id_norma integer, codice_norma text, id_macroarea integer, macroarea text, codice_macroarea text, id_aggregazione integer, aggregazione text, codice_aggregazione text, id_linea integer, attivita text, codice_attivita text, mobile boolean, fisso boolean, apicoltura boolean, registrabili boolean, riconoscibili boolean, sintesis boolean, bdu boolean, vam boolean, no_scia boolean, categorizzabili boolean, rev integer, categoria_rischio_default integer)
    LANGUAGE plpgsql
    AS $_$
DECLARE
	query_check int;
	check_linee_nc int;
	check_linee_az int;
BEGIN
	
	-- se richiamo la funzione con parametri verifico se c'è corrispondenza con la ML10 e se non si tratta di linee NO-SCIA NON CATEGORIZZABILI GESTITE IN ALTRI STABILIMENTI
	IF ($1 is not null and $2 is not null) then

		check_linee_nc := (select count(*) from ricerche_anagrafiche_old_materializzata m where m.riferimento_id = _riferimento_id and m.riferimento_id_nome_tab = _riferimento_id_nome_tab and concat_ws('-', m.codice_macroarea, m.codice_aggregazione, m.codice_attivita) in 
				  ('TAV-TAV-X','ONPA-ONPA-X','PSB-PSB-X','AQRE-AQRE-AQRE','MOLLBAN-MOLLBAN-MOLLBAN','OAB-OAB-X','OFA-OFA-X','IUV-CF-CF','IUV-ZDC-ZDC'));
	        raise info 'totali linee no scie %', check_linee_nc;
		check_linee_az := (select count(*) from ricerche_anagrafiche_old_materializzata m where m.tipologia_operatore = 2 and m.riferimento_id = _riferimento_id 
				   and m.riferimento_id_nome_tab = _riferimento_id_nome_tab);
		raise info 'totali linee aziende zootecniche %', check_linee_az;
		query_check:= (select count(*) from ricerche_anagrafiche_old_materializzata r 
                       join master_list_flag_linee_attivita m on m.id_linea = r.id_attivita
                       where r.riferimento_id = _riferimento_id
                       and   r.riferimento_id_nome_tab = _riferimento_id_nome_tab);
                 RAISE NOTICE 'Eseguo query di controllo. Totale valori di match:%', query_check; 
	-- chiamo la dbi senza parametri
	ELSE
		FOR  	 
			riferimento_id, riferimento_id_nome_tab, codice_univoco, id_norma, codice_norma, id_macroarea, macroarea, codice_macroarea, id_aggregazione, aggregazione, codice_aggregazione, id_linea, attivita, codice_attivita, mobile, fisso, apicoltura, 
			registrabili, riconoscibili, sintesis, bdu, vam, no_scia, categorizzabili, rev, categoria_rischio_default
in
			select distinct -1 as riferimento_id, '' as riferimento_id_nome_tab, m.codice_univoco, 
			--se si gestrà il codice norma nella tabella materializzata delle linee si potrà rimuovere il left join con le norme..
			l.id_norma, l.codice_norma, l.id_macroarea, l.macroarea, l.codice_macroarea, l.id_aggregazione, l.aggregazione, l.codice_aggregazione,l.id_nuova_linea_attivita as id_linea, l.attivita, l.codice_attivita, 
			m.mobile, m.fisso, m.apicoltura, m.registrabili, m.riconoscibili, m.sintesis, m.bdu, m.vam, m.no_scia, m.categorizzabili, m.rev, m.categoria_rischio_default
			from master_list_flag_linee_attivita m 
			join ml8_linee_attivita_nuove_materializzata l on l.id_nuova_linea_attivita = m.id_linea and l.livello=3
			where 1=1 and m.rev=10
			--and ( _codice_univoco is null or m.codice_univoco = _codice_univoco)
		LOOP
			RETURN NEXT;
		END LOOP;
		RETURN;

	END IF; 
	
	IF (query_check > 0) then --c'è corrispondenza con ML
		RAISE INFO 'Entro nel ciclo di corrispondenza ML';
		FOR  	 
			riferimento_id, riferimento_id_nome_tab, codice_univoco, id_norma, codice_norma, id_macroarea, macroarea, codice_macroarea, id_aggregazione, aggregazione, codice_aggregazione, id_linea, attivita, codice_attivita, mobile, fisso, apicoltura, 
			registrabili, riconoscibili, sintesis, bdu, vam, no_scia, categorizzabili, rev, categoria_rischio_default
		in
			select distinct r.riferimento_id, r.riferimento_id_nome_tab, m.codice_univoco, 
			l.id_norma, l.codice_norma, l.id_macroarea, l.macroarea, l.codice_macroarea, l.id_aggregazione, l.aggregazione, l.codice_aggregazione,l.id_nuova_linea_attivita as id_linea, l.attivita, l.codice_attivita, 
			m.mobile, m.fisso, m.apicoltura, m.registrabili, m.riconoscibili, m.sintesis, m.bdu, m.vam, m.no_scia, m.categorizzabili, m.rev, m.categoria_rischio_default
			from ricerche_anagrafiche_old_materializzata r -- partiamo da tutti gli stabilimenti
			left join master_list_flag_linee_attivita m on m.id_linea = r.id_attivita --and m.rev=10 -- considero l'ultima revisione??Si deve togliere la rev.10?--
			--(r.id_attivita=m.id_linea) non si può usare il join sugli id perchè non tutti hanno un idlinea riconducibile alla tabella di linee 
			left join ml8_linee_attivita_nuove_materializzata l on l.id_nuova_linea_attivita = m.id_linea and l.livello=3 -- si considerano le linee complete di attivita
			where 1=1
			and (_riferimento_id  is null or r.riferimento_id = _riferimento_id)
			and (_riferimento_id_nome_tab is null or r.riferimento_id_nome_tab = _riferimento_id_nome_tab)
		LOOP
			RETURN NEXT;
		END LOOP;
		RETURN;	

		
	ELSIF (check_linee_nc = 0 and check_linee_az = 0) THEN --restituisci tutto se non si tratta di no-scia nè di aziende zootecniche
		RAISE INFO 'Entro nel ciclo di MANCATA corrispondenza ML E di assenza di linee no-scia per cui restituisco tutti i record';
		FOR  	 
			riferimento_id, riferimento_id_nome_tab, codice_univoco, id_norma, codice_norma, id_macroarea, macroarea, codice_macroarea, id_aggregazione, aggregazione, codice_aggregazione, id_linea, attivita, codice_attivita, mobile, fisso, apicoltura, 
			registrabili, riconoscibili, sintesis, bdu, vam, no_scia, categorizzabili, rev, categoria_rischio_default
		in
			select distinct -1 as riferimento_id, '' as riferimento_id_nome_tab, m.codice_univoco, 
			--se si gestrà il codice norma nella tabella materializzata delle linee si potrà rimuovere il left join con le norme..
			l.id_norma, l.codice_norma, l.id_macroarea, l.macroarea, l.codice_macroarea, l.id_aggregazione, l.aggregazione, l.codice_aggregazione,l.id_nuova_linea_attivita as id_linea, l.attivita, l.codice_attivita, 
			m.mobile, m.fisso, m.apicoltura, m.registrabili, m.riconoscibili, m.sintesis, m.bdu, m.vam, m.no_scia, m.categorizzabili, m.rev, m.categoria_rischio_default
			from master_list_flag_linee_attivita m 
			join ml8_linee_attivita_nuove_materializzata l on l.id_nuova_linea_attivita = m.id_linea and l.livello=3
			where 1=1 --and m.rev=10 (si deve togliere il riferimento alla ml10??)
			--and ( _codice_univoco is null or m.codice_univoco = _codice_univoco)
						
		LOOP
			RETURN NEXT;
		END LOOP;
		RETURN;	
		
	ELSIF (check_linee_az > 0) THEN
		RETURN QUERY SELECT -1, null, null, -1, null, -1, null, null, -1, null, null, -1, null, null, false, false, false,
		false, false, false, false, false, false,true, -1, -1;

	ELSE 
		RAISE INFO 'Entro nel ciclo di linee no-scia per cui non restituisco alcun record';
		RETURN;

	end if;
	
 END;
$_$;


ALTER FUNCTION giava.get_info_masterlist(_riferimento_id integer, _riferimento_id_nome_tab text) OWNER TO postgres;

--
-- TOC entry 909 (class 1255 OID 16629)
-- Name: aggiorna_coordinate_stabilimento(integer, text, text, double precision, double precision); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.aggiorna_coordinate_stabilimento(_riferimento_id integer, _riferimento_id_nome text, _riferimento_id_nome_tab text, _latitudine double precision, _longitudine double precision) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
DECLARE

	_id_sede_operativa integer;

BEGIN
	select id_sede_operativa into _id_sede_operativa
		from ricerche_anagrafiche_old_materializzata 
			where riferimento_id = _riferimento_id and 
			      riferimento_id_nome = _riferimento_id_nome and 
			      riferimento_id_nome_tab = _riferimento_id_nome_tab limit 1;	

	--"opu_indirizzo" per "opu_stabilimento", "suap_ric_scia_stabilimento" e "apicoltura_imprese"
	IF _riferimento_id_nome_tab = 'opu_stabilimento' or _riferimento_id_nome_tab = 'suap_ric_scia_stabilimento' or _riferimento_id_nome_tab = 'apicoltura_imprese' THEN
		update opu_indirizzo 
			set latitudine = _latitudine,
			    longitudine = _longitudine
			where id = _id_sede_operativa;
			
		update ricerche_anagrafiche_old_materializzata 
			set latitudine_stab = _latitudine, longitudine_stab = _longitudine
			where riferimento_id = _riferimento_id and riferimento_id_nome ilike _riferimento_id_nome and riferimento_id_nome_tab ilike _riferimento_id_nome_tab;
			
	END IF;

	--"organization_address" per "organization"	
	IF _riferimento_id_nome_tab = 'organization' THEN
		update organization_address
			set latitude = _latitudine,
			    longitude = _longitudine
			where address_id = _id_sede_operativa;

		update ricerche_anagrafiche_old_materializzata 
			set latitudine_stab = _latitudine, longitudine_stab = _longitudine
			where riferimento_id = _riferimento_id and riferimento_id_nome ilike _riferimento_id_nome and riferimento_id_nome_tab ilike _riferimento_id_nome_tab;

	END IF;
	
	--"anagrafica.indirizzi" per "stabilimenti"
	IF _riferimento_id_nome_tab = 'stabilimenti' THEN
		update anagrafica.indirizzi 
			set latitudine = _latitudine,
			    longitudine = _longitudine
			where id = _id_sede_operativa;

		update ricerche_anagrafiche_old_materializzata 
			set latitudine_stab = _latitudine, longitudine_stab = _longitudine
			where riferimento_id = _riferimento_id and riferimento_id_nome ilike _riferimento_id_nome and riferimento_id_nome_tab ilike _riferimento_id_nome_tab;
			
	END IF;
	
	--"sintesis_indirizzo" per "sintesis_stabilimento"
	IF _riferimento_id_nome_tab = 'sintesis_stabilimento' THEN
		update sintesis_indirizzo
			set latitudine = _latitudine,
			    longitudine = _longitudine
			where id = _id_sede_operativa;

		update ricerche_anagrafiche_old_materializzata 
			set latitudine_stab = _latitudine, longitudine_stab = _longitudine
			where riferimento_id = _riferimento_id and riferimento_id_nome ilike _riferimento_id_nome and riferimento_id_nome_tab ilike _riferimento_id_nome_tab;
	END IF;

	return true ;
	
END;
$$;


ALTER FUNCTION preaccettazione.aggiorna_coordinate_stabilimento(_riferimento_id integer, _riferimento_id_nome text, _riferimento_id_nome_tab text, _latitudine double precision, _longitudine double precision) OWNER TO postgres;

--
-- TOC entry 910 (class 1255 OID 16630)
-- Name: annulla_preaccettazione(integer, integer); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.annulla_preaccettazione(_id integer, _idutente integer) RETURNS TABLE(_idout integer)
    LANGUAGE plpgsql
    AS $$
DECLARE

	_stato integer;

BEGIN
	select id_stato into _stato from preaccettazione.vw_ultimo_stato where id_preaccettazione = _id;

	IF _stato <> 4 THEN
		return query
		insert into preaccettazione.stati_preaccettazione(id_preaccettazione, id_stato, entered, enteredby) 
		values (_id,4,now(),_idutente) returning id;
	ELSE
			
	return query
	select 4 as id_s from preaccettazione.vw_ultimo_stato limit 1;
	
	END IF;

	
END;
$$;


ALTER FUNCTION preaccettazione.annulla_preaccettazione(_id integer, _idutente integer) OWNER TO postgres;

--
-- TOC entry 911 (class 1255 OID 16631)
-- Name: associa_campione_a_preaccettazione(integer, integer, text, text, text); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.associa_campione_a_preaccettazione(_id_campione integer, _userid integer, _codice_preaccettazione text, _ip_chiamante text DEFAULT NULL::text, _user_agent_chiamante text DEFAULT NULL::text) RETURNS TABLE(_idrel integer)
    LANGUAGE plpgsql
    AS $$
DECLARE

	_stato integer;
	id_stato_preacc integer;
	id_preacc integer;
	_lda_riferimento_id integer;
	_lda_riferimento_id_nome text;
	_lda_riferimento_id_nome_tab text;
	_lda_id_linea integer;
	_tipologia_operatore integer;

BEGIN

	select sp.id_stato into _stato from preaccettazione.stati_preaccettazione sp join 
					 preaccettazione.codici_preaccettazione cp on sp.id_preaccettazione = cp.id
		where concat(cp.prefix,cp.anno,cp.progres) like _codice_preaccettazione order by sp.id_stato desc limit 1;

	select id into id_preacc from preaccettazione.codici_preaccettazione
			where concat(prefix,anno,progres) like _codice_preaccettazione;

	IF _stato = 1 THEN

		--mi salvo tutte le informazioni relative alla linea con queste 5 select ( dati che andrò ad inserire nella tabella associazione_preaccettazione_entita)
		select ap.lda_riferimento_id into _lda_riferimento_id
		   from preaccettazione.stati_preaccettazione sp
			join preaccettazione.associazione_preaccettazione_entita ap on sp.id = ap.id_stati 
				where sp.id_preaccettazione = id_preacc;

		select ap.lda_riferimento_id_nome into _lda_riferimento_id_nome
		   from preaccettazione.stati_preaccettazione sp
			join preaccettazione.associazione_preaccettazione_entita ap on sp.id = ap.id_stati 
				where sp.id_preaccettazione = id_preacc;
		
		select ap.lda_riferimento_id_nome_tab into _lda_riferimento_id_nome_tab 
		   from preaccettazione.stati_preaccettazione sp
			join preaccettazione.associazione_preaccettazione_entita ap on sp.id = ap.id_stati 
				where sp.id_preaccettazione = id_preacc;

		select ap.lda_id_linea into _lda_id_linea
		   from preaccettazione.stati_preaccettazione sp
			join preaccettazione.associazione_preaccettazione_entita ap on sp.id = ap.id_stati 
				where sp.id_preaccettazione = id_preacc;

		select ap.tipologia_operatore into _tipologia_operatore
		   from preaccettazione.stati_preaccettazione sp
			join preaccettazione.associazione_preaccettazione_entita ap on sp.id = ap.id_stati 
				where sp.id_preaccettazione = id_preacc;

		insert into preaccettazione.stati_preaccettazione(id_preaccettazione,id_stato,entered,enteredby,ip_chiamante,user_agent_chiamante)
			values(id_preacc,2,now(),_userid,_ip_chiamante,_user_agent_chiamante) returning id into id_stato_preacc;

		insert into preaccettazione.associazione_preaccettazione_entita(
				id_stati,
				tipo_entita,
				riferimento_entita,
				lda_riferimento_id,
				lda_riferimento_id_nome,
				lda_riferimento_id_nome_tab,
				lda_id_linea,
				tipologia_operatore,
				entered,
				enteredby)
			values(id_stato_preacc,'C',
			       _id_campione::character varying,
			       _lda_riferimento_id,
			       _lda_riferimento_id_nome,
			       _lda_riferimento_id_nome_tab,
			       _lda_id_linea,
			       _tipologia_operatore,
			       now(),
			       _userid);

		return query
		select id from preaccettazione.codici_preaccettazione where id = id_preacc;
	END IF;
	
END;
$$;


ALTER FUNCTION preaccettazione.associa_campione_a_preaccettazione(_id_campione integer, _userid integer, _codice_preaccettazione text, _ip_chiamante text, _user_agent_chiamante text) OWNER TO postgres;

--
-- TOC entry 912 (class 1255 OID 16632)
-- Name: cancella_preaccettazione(integer, integer, integer); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.cancella_preaccettazione(_id_campione integer, _idutente integer, _cancella integer) RETURNS TABLE(esito_cancellazione integer, errore_cancellazione text)
    LANGUAGE plpgsql
    AS $$
DECLARE

	temp_id_preacc integer;
	temp_stato_preacc integer;
	messaggio text;

BEGIN
	
	--recupero codice preaccettazione da campione
	select sp.id_preaccettazione into temp_id_preacc from preaccettazione.stati_preaccettazione sp 
	      join preaccettazione.associazione_preaccettazione_entita ape on sp.id = ape.id_stati
	      where ape.riferimento_entita like _id_campione::character varying and ape.tipo_entita like 'C';

	--recupero lo stato del codice di preaccettazione
	select id_stato into temp_stato_preacc from preaccettazione.vw_ultimo_stato where id_preaccettazione = temp_id_preacc;

	--0;CODICE PREACCETTAZIONE GENERATO
	--1;CODICE PREACCETTAZIONE ASSOCIATO ALL OSA
	--2;CODICE PREACCETTAZIONE ASSOCIATO AL CAMPIONE
	--3;CODICE PREACCETTAZIONE LETTO DA LABORATORIO
	--4;CODICE PREACCETTAZIONE ANNULLATO
	--5;RISULTATO RICEVUTO

	IF temp_stato_preacc = 3 or temp_stato_preacc = 5 THEN

		messaggio := concat('Cancellazione non eseguibile: la cancellazione non e'' eseguibile perche'' coinvolge un campione (', _id_campione,') il cui questito diagnostico e'' stato gia'' letto dal laboratorio di destinazione e/o con esito ricevuto.');
		return query
		select 1, messaggio from preaccettazione.lookup_stati_pa  limit 1;
		
	ELSE
		IF _cancella = 1 and temp_stato_preacc <> 4 THEN
			insert into preaccettazione.stati_preaccettazione(id_preaccettazione, id_stato, entered, enteredby, note_hd) 
			values (temp_id_preacc,4,now(),_idutente,'preaccettazione cancellata a seguito di cancellazione campione da gisa');
		END IF;
				
		messaggio :='';
		return query
		select 0, messaggio from preaccettazione.lookup_stati_pa  limit 1;
		
	END IF;
		
END;
$$;


ALTER FUNCTION preaccettazione.cancella_preaccettazione(_id_campione integer, _idutente integer, _cancella integer) OWNER TO postgres;

--
-- TOC entry 913 (class 1255 OID 16633)
-- Name: dbi_get_all_stabilimenti_gis(text, double precision, double precision, double precision, timestamp without time zone, timestamp without time zone, boolean); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.dbi_get_all_stabilimenti_gis(_norma text, _latitudine_cerchio double precision DEFAULT NULL::double precision, _longitudine_cerchio double precision DEFAULT NULL::double precision, _raggio_km_cerchio double precision DEFAULT NULL::double precision, _data_inizio timestamp without time zone DEFAULT NULL::timestamp without time zone, _data_fine timestamp without time zone DEFAULT NULL::timestamp without time zone, ischeckdate boolean DEFAULT NULL::boolean) RETURNS TABLE(ragione_sociale character varying, id_asl integer, asl character varying, soggetto character varying, codice_fiscale character varying, codice character varying, partita_iva character varying, comune character varying, provincia character varying, indirizzo character varying, latitudine double precision, longitudine double precision, codice_fiscale_rappresentante text, nominativo_rappresentante text, categoria_rischio integer, riferimento_id integer, riferimento_id_nome text, riferimento_id_nome_col text, riferimento_id_nome_tab text, stato_stab text, tipo_operatore text)
    LANGUAGE plpgsql
    AS $_$
DECLARE

_prefix text := $$ SELECT distinct  
	       ricerche_anagrafiche_old_materializzata.ragione_sociale  , 
	       ricerche_anagrafiche_old_materializzata.asl_rif as id_asl, 
	       ricerche_anagrafiche_old_materializzata.asl,
	       ricerche_anagrafiche_old_materializzata.norma::character varying soggetto,
	       ricerche_anagrafiche_old_materializzata.codice_fiscale::character varying,
	       COALESCE(NULLIF(trim(ricerche_anagrafiche_old_materializzata.num_riconoscimento),''),
			NULLIF(trim(ricerche_anagrafiche_old_materializzata.n_reg),''))::character varying as codice,
	       ricerche_anagrafiche_old_materializzata.partita_iva::character varying, 
	       ricerche_anagrafiche_old_materializzata.comune , 
	       ricerche_anagrafiche_old_materializzata.provincia_stab provincia, 
	       ricerche_anagrafiche_old_materializzata.indirizzo,
	       ricerche_anagrafiche_old_materializzata.latitudine_stab latitudine, 
	       ricerche_anagrafiche_old_materializzata.longitudine_stab longitudine,
	       ricerche_anagrafiche_old_materializzata.codice_fiscale_rappresentante::text,
	       ricerche_anagrafiche_old_materializzata.nominativo_rappresentante,
	       ricerche_anagrafiche_old_materializzata.categoria_rischio,
	       ricerche_anagrafiche_old_materializzata.riferimento_id,
	       ricerche_anagrafiche_old_materializzata.riferimento_id_nome,
	       ricerche_anagrafiche_old_materializzata.riferimento_id_nome_col,
	       ricerche_anagrafiche_old_materializzata.riferimento_id_nome_tab,
	       ricerche_anagrafiche_old_materializzata.stato,
	       string_agg(ricerche_anagrafiche_old_materializzata.macroarea, ',') tipo_operatore
	       
	  FROM ricerche_anagrafiche_old_materializzata
$$;

_join_norma text := $$
	inner join opu_lookup_norme_master_list ln on ln.code=id_norma
$$;

_where_cond_base text := $$
	WHERE 
	ricerche_anagrafiche_old_materializzata.riferimento_id_nome_tab not ilike 'suap_ric_scia_stabilimento' 
	AND concat(ricerche_anagrafiche_old_materializzata.codice_macroarea,
		   ricerche_anagrafiche_old_materializzata.codice_aggregazione,
		   ricerche_anagrafiche_old_materializzata.codice_attivita) not ilike 'oproprx'
	AND (( point(latitudine_stab, longitudine_stab) <@> point(%s, %s)) * 1609.34::double precision) * 0.001  < %s	
	AND
	(ricerche_anagrafiche_old_materializzata.data_inizio_attivita is null
	 OR ricerche_anagrafiche_old_materializzata.data_inizio_attivita BETWEEN '%s' AND '%s')
$$;

_suffix_filtro_norma text := $$
	AND ln.enabled
	AND trim(ln.codice_norma)='%s'
$$;

_suffix_group_by text := $$
	GROUP BY ricerche_anagrafiche_old_materializzata.ragione_sociale, 
	       id_asl, 
	       ricerche_anagrafiche_old_materializzata.asl,
	       soggetto,
	       ricerche_anagrafiche_old_materializzata.codice_fiscale::character varying,
	       codice,
	       ricerche_anagrafiche_old_materializzata.partita_iva::character varying, 
	       ricerche_anagrafiche_old_materializzata.comune , 
	       provincia, 
	       ricerche_anagrafiche_old_materializzata.indirizzo,
	       latitudine, 
	       longitudine,
	       ricerche_anagrafiche_old_materializzata.codice_fiscale_rappresentante::text,
	       ricerche_anagrafiche_old_materializzata.nominativo_rappresentante,
	       ricerche_anagrafiche_old_materializzata.categoria_rischio,
	       ricerche_anagrafiche_old_materializzata.riferimento_id,
	       ricerche_anagrafiche_old_materializzata.riferimento_id_nome,
	       ricerche_anagrafiche_old_materializzata.riferimento_id_nome_col,
	       ricerche_anagrafiche_old_materializzata.riferimento_id_nome_tab,
	       ricerche_anagrafiche_old_materializzata.stato
$$;

_qry text;
_qry_final text;

BEGIN

IF _norma = '-1' THEN
	_qry := concat(_prefix,_where_cond_base,_suffix_group_by);
	_qry_final := format(_qry, _latitudine_cerchio, _longitudine_cerchio, _raggio_km_cerchio, _data_inizio, _data_fine);
END IF;

IF _norma <> '-1' THEN
	_qry := concat(_prefix, _join_norma, _where_cond_base, _suffix_filtro_norma,_suffix_group_by);
	_qry_final := format(_qry, _latitudine_cerchio,  _longitudine_cerchio, _raggio_km_cerchio, _data_inizio, _data_fine, _norma);
END IF;

raise WARNING 'dbi (preaccettazione.dbi_get_all_stabilimenti_gis) : %',_qry_final;

return query
	EXECUTE  _qry_final;
 
END;

$_$;


ALTER FUNCTION preaccettazione.dbi_get_all_stabilimenti_gis(_norma text, _latitudine_cerchio double precision, _longitudine_cerchio double precision, _raggio_km_cerchio double precision, _data_inizio timestamp without time zone, _data_fine timestamp without time zone, ischeckdate boolean) OWNER TO postgres;

--
-- TOC entry 914 (class 1255 OID 16635)
-- Name: dbi_get_all_stabilimenti_gis_cu_cmp(text, double precision, double precision, double precision); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.dbi_get_all_stabilimenti_gis_cu_cmp(_norma text, _latitudine_cerchio double precision DEFAULT NULL::double precision, _longitudine_cerchio double precision DEFAULT NULL::double precision, _raggio_km_cerchio double precision DEFAULT NULL::double precision) RETURNS TABLE(ragione_sociale character varying, id_asl integer, asl character varying, soggetto character varying, codice_fiscale character varying, codice character varying, partita_iva character varying, comune character varying, provincia character varying, indirizzo character varying, latitudine double precision, longitudine double precision, codice_fiscale_rappresentante text, nominativo_rappresentante text, "ùcategoria_rischio" integer, riferimento_id integer, riferimento_id_nome text, riferimento_id_nome_col text, riferimento_id_nome_tab text, stato_stab text, tipo_operatore text)
    LANGUAGE plpgsql
    AS $_$
DECLARE

_prefix text := $$ SELECT distinct  
	       ricerche_anagrafiche_old_materializzata.ragione_sociale  , 
	       ricerche_anagrafiche_old_materializzata.asl_rif as id_asl, 
	       ricerche_anagrafiche_old_materializzata.asl,
	       ricerche_anagrafiche_old_materializzata.norma::character varying soggetto,
	       ricerche_anagrafiche_old_materializzata.codice_fiscale::character varying,
	       COALESCE(NULLIF(trim(ricerche_anagrafiche_old_materializzata.num_riconoscimento),''),
			NULLIF(trim(ricerche_anagrafiche_old_materializzata.n_reg),''))::character varying as codice,
	       ricerche_anagrafiche_old_materializzata.partita_iva::character varying, 
	       ricerche_anagrafiche_old_materializzata.comune , 
	       ricerche_anagrafiche_old_materializzata.provincia_stab provincia, 
	       ricerche_anagrafiche_old_materializzata.indirizzo,
	       ricerche_anagrafiche_old_materializzata.latitudine_stab latitudine, 
	       ricerche_anagrafiche_old_materializzata.longitudine_stab longitudine,
	       ricerche_anagrafiche_old_materializzata.codice_fiscale_rappresentante::text,
	       ricerche_anagrafiche_old_materializzata.nominativo_rappresentante,
	       ricerche_anagrafiche_old_materializzata.categoria_rischio,
	       ricerche_anagrafiche_old_materializzata.riferimento_id,
	       ricerche_anagrafiche_old_materializzata.riferimento_id_nome,
	       ricerche_anagrafiche_old_materializzata.riferimento_id_nome_col,
	       ricerche_anagrafiche_old_materializzata.riferimento_id_nome_tab,
	       ricerche_anagrafiche_old_materializzata.stato,
	       string_agg(ricerche_anagrafiche_old_materializzata.macroarea, ',') tipo_operatore
	       
	  FROM ricerche_anagrafiche_old_materializzata
$$;

_join_norma text := $$
	inner join opu_lookup_norme_master_list ln on ln.code=id_norma
$$;

_where_cond_base text := $$
	WHERE 
	ricerche_anagrafiche_old_materializzata.riferimento_id_nome_tab not ilike 'suap_ric_scia_stabilimento' 
	AND concat(ricerche_anagrafiche_old_materializzata.codice_macroarea,
		   ricerche_anagrafiche_old_materializzata.codice_aggregazione,
		   ricerche_anagrafiche_old_materializzata.codice_attivita) not ilike 'oproprx'
	AND (( point(latitudine_stab, longitudine_stab) <@> point(%s, %s)) * 1609.34::double precision) * 0.001  < %s	
$$;

_suffix_filtro_norma text := $$
	AND ln.enabled
	AND trim(ln.codice_norma)='%s'
$$;

_suffix_group_by text := $$
	GROUP BY ricerche_anagrafiche_old_materializzata.ragione_sociale, 
	       id_asl, 
	       ricerche_anagrafiche_old_materializzata.asl,
	       soggetto,
	       ricerche_anagrafiche_old_materializzata.codice_fiscale::character varying,
	       codice,
	       ricerche_anagrafiche_old_materializzata.partita_iva::character varying, 
	       ricerche_anagrafiche_old_materializzata.comune , 
	       provincia, 
	       ricerche_anagrafiche_old_materializzata.indirizzo,
	       latitudine, 
	       longitudine,
	       ricerche_anagrafiche_old_materializzata.codice_fiscale_rappresentante::text,
	       ricerche_anagrafiche_old_materializzata.nominativo_rappresentante,
	       ricerche_anagrafiche_old_materializzata.categoria_rischio,
	       ricerche_anagrafiche_old_materializzata.riferimento_id,
	       ricerche_anagrafiche_old_materializzata.riferimento_id_nome,
	       ricerche_anagrafiche_old_materializzata.riferimento_id_nome_col,
	       ricerche_anagrafiche_old_materializzata.riferimento_id_nome_tab,
	       ricerche_anagrafiche_old_materializzata.stato
$$;

_qry text;
_qry_final text;

BEGIN

IF _norma = '-1' THEN
	_qry := concat(_prefix,_where_cond_base,_suffix_group_by);
	_qry_final := format(_qry, _latitudine_cerchio, _longitudine_cerchio, _raggio_km_cerchio);
END IF;

IF _norma <> '-1' THEN
	_qry := concat(_prefix, _join_norma, _where_cond_base, _suffix_filtro_norma,_suffix_group_by);
	_qry_final := format(_qry, _latitudine_cerchio,  _longitudine_cerchio, _raggio_km_cerchio, _norma);
END IF;

raise WARNING 'dbi (preaccettazione.dbi_get_all_stabilimenti_gis_cu_cmp) : %',_qry_final;

return query
	EXECUTE  _qry_final;
 
END;

$_$;


ALTER FUNCTION preaccettazione.dbi_get_all_stabilimenti_gis_cu_cmp(_norma text, _latitudine_cerchio double precision, _longitudine_cerchio double precision, _raggio_km_cerchio double precision) OWNER TO postgres;

--
-- TOC entry 915 (class 1255 OID 16636)
-- Name: dbi_get_campioni_da_stabilimento(integer, text, text, timestamp without time zone, timestamp without time zone); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.dbi_get_campioni_da_stabilimento(_riferimento_id integer, _riferimento_id_nome text, _riferimento_id_nome_tab text, _data_inizio timestamp without time zone DEFAULT NULL::timestamp without time zone, _data_fine timestamp without time zone DEFAULT NULL::timestamp without time zone) RETURNS TABLE(id_cu character varying, motivo character varying, data_operazione text, attivita text)
    LANGUAGE plpgsql
    AS $_$
DECLARE

_prefix text := $$
	
	select distinct tcmp.id_controllo_ufficiale,
	coalesce(lpm.description, lti.description)  AS motivo,
	to_char(tcmp.assigned_date, 'YYYY-MM-DD'),
	ram.attivita
	from  ricerche_anagrafiche_old_materializzata ram
		join preaccettazione.vw_ticket_cmp  tcmp on tcmp.%s = ram.riferimento_id 
								and ram.riferimento_id_nome_tab = '%s' 
								and ram.riferimento_id_nome = '%s'	
								and ram.riferimento_id = %s
$$;

_join_tab_linee text := $$
		left join linee_attivita_controlli_ufficiali lacu on lacu.id_controllo_ufficiale::character varying = tcmp.id_controllo_ufficiale 
					and lacu.id_linea_attivita = ram.id_linea 
					and lacu.trashed_date is null
$$;

_join_tab text := $$	
		left join lookup_tipo_ispezione lti on lti.code = tcmp.motivazione_campione 
		left join lookup_piano_monitoraggio lpm on lpm.code = tcmp.motivazione_piano_campione
$$;

_suffix text := $$
	where (tcmp.assigned_date  BETWEEN '%s' AND '%s') 
	       and (ram.riferimento_id = ram.id_linea or lacu.id_linea_attivita is not null )
	order by to_char(tcmp.assigned_date, 'YYYY-MM-DD') desc
$$;

_query text;
_query_final text;

BEGIN

IF _riferimento_id_nome_tab = 'organization' THEN

	_query := concat(_prefix, _join_tab_linee, _join_tab, _suffix);
	_query_final := format(_query, 'org_id', _riferimento_id_nome_tab, _riferimento_id_nome, _riferimento_id, _data_inizio, _data_fine);

	
END IF;

IF _riferimento_id_nome_tab = 'opu_stabilimento' THEN

	_query := concat(_prefix, _join_tab_linee, _join_tab, _suffix);
	_query_final := format(_query,'id_stabilimento', _riferimento_id_nome_tab, _riferimento_id_nome, _riferimento_id, _data_inizio, _data_fine);

		
END IF;

IF _riferimento_id_nome_tab = 'apicoltura_imprese' THEN
	
	_query := concat(_prefix, _join_tab, _suffix);
	_query_final := format(_query, 'id_apiario', _riferimento_id_nome_tab, _riferimento_id_nome, _riferimento_id, _data_inizio, _data_fine);

 
END IF;

IF _riferimento_id_nome_tab = 'stabilimenti' THEN

	_query := concat(_prefix, _join_tab_linee, _join_tab, _suffix);
	_query_final := format(_query, 'alt_id', _riferimento_id_nome_tab, _riferimento_id_nome, _riferimento_id, _data_inizio, _data_fine);

	
END IF;

IF _riferimento_id_nome_tab = 'sintesis_stabilimento' THEN

	_query := concat(_prefix, _join_tab_linee, _join_tab, _suffix);
	_query_final := format(_query, 'alt_id', _riferimento_id_nome_tab, _riferimento_id_nome, _riferimento_id, _data_inizio, _data_fine);
		
END IF;

IF _riferimento_id_nome_tab = 'suap_ric_scia_stabilimento' THEN

	_query := concat(_prefix, _join_tab_linee, _join_tab, _suffix);
	_query_final := format(_query, 'alt_id', _riferimento_id_nome_tab, _riferimento_id_nome, _data_inizio, _data_fine);
		
END IF;

raise WARNING 'dbi: %', _query_final;
return query
		execute _query_final;


END;

$_$;


ALTER FUNCTION preaccettazione.dbi_get_campioni_da_stabilimento(_riferimento_id integer, _riferimento_id_nome text, _riferimento_id_nome_tab text, _data_inizio timestamp without time zone, _data_fine timestamp without time zone) OWNER TO postgres;

--
-- TOC entry 916 (class 1255 OID 16637)
-- Name: dbi_get_controlli_ufficiali_da_stabilimento(integer, text, text, timestamp without time zone, timestamp without time zone); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.dbi_get_controlli_ufficiali_da_stabilimento(_riferimento_id integer, _riferimento_id_nome text, _riferimento_id_nome_tab text, _data_inizio timestamp without time zone DEFAULT NULL::timestamp without time zone, _data_fine timestamp without time zone DEFAULT NULL::timestamp without time zone) RETURNS TABLE(id_cu character varying, motivo character varying, data_operazione text, attivita text)
    LANGUAGE plpgsql
    AS $_$
DECLARE

_prefix text := $$
	
	select distinct tcu.id_controllo_ufficiale,
	coalesce(lpm.description, lti.description)  AS motivo,
	to_char(tcu.assigned_date, 'YYYY-MM-DD'),
	ram.attivita
	from  ricerche_anagrafiche_old_materializzata ram
		join preaccettazione.vw_ticket_cu  tcu on tcu.%s = ram.riferimento_id 
								and ram.riferimento_id_nome_tab = '%s' 
								and ram.riferimento_id_nome = '%s'	
								and ram.riferimento_id = %s	
$$;

_join_tab_linee text := $$
		left join linee_attivita_controlli_ufficiali lacu on lacu.id_controllo_ufficiale = tcu.ticketid 
					and lacu.id_linea_attivita = ram.id_linea
					and lacu.trashed_date is null
$$;

_join_tab text := $$
		join tipocontrolloufficialeimprese tcui on tcui.idcontrollo::character varying = tcu.id_controllo_ufficiale
		left join lookup_tipo_ispezione lti on lti.code = tcui.tipoispezione 
		left join lookup_piano_monitoraggio lpm on lpm.code = tcui.pianomonitoraggio
$$;

_suffix text := $$
	where (tcu.assigned_date  BETWEEN '%s' AND '%s') 
		and (tcui.tipoispezione <> -1 or tcui.pianomonitoraggio <> -1)
		and tcu.provvedimenti_prescrittivi = 4
		and (ram.riferimento_id = ram.id_linea or lacu.id_linea_attivita is not null ) 
	order by to_char(tcu.assigned_date, 'YYYY-MM-DD') desc 
$$;

_query text;
_query_final text;

BEGIN

IF _riferimento_id_nome_tab = 'organization' THEN

	_query := concat(_prefix, _join_tab_linee, _join_tab, _suffix);
	_query_final := format(_query, 'org_id', _riferimento_id_nome_tab, _riferimento_id_nome, _riferimento_id, _data_inizio, _data_fine);

	
END IF;

IF _riferimento_id_nome_tab = 'opu_stabilimento' THEN

	_query := concat(_prefix, _join_tab_linee, _join_tab, _suffix);
	_query_final := format(_query,'id_stabilimento', _riferimento_id_nome_tab, _riferimento_id_nome, _riferimento_id, _data_inizio, _data_fine);

		
END IF;

IF _riferimento_id_nome_tab = 'apicoltura_imprese' THEN
	
	_query := concat(_prefix, _join_tab, _suffix);
	_query_final := format(_query, 'id_apiario', _riferimento_id_nome_tab, _riferimento_id_nome, _riferimento_id, _data_inizio, _data_fine);

 
END IF;

IF _riferimento_id_nome_tab = 'stabilimenti' THEN

	_query := concat(_prefix, _join_tab_linee, _join_tab, _suffix);
	_query_final := format(_query, 'alt_id', _riferimento_id_nome_tab, _riferimento_id_nome, _riferimento_id, _data_inizio, _data_fine);

	
END IF;

IF _riferimento_id_nome_tab = 'sintesis_stabilimento' THEN

	_query := concat(_prefix, _join_tab_linee, _join_tab, _suffix);
	_query_final := format(_query, 'alt_id', _riferimento_id_nome_tab, _riferimento_id_nome, _riferimento_id, _data_inizio, _data_fine);
		
END IF;

IF _riferimento_id_nome_tab = 'suap_ric_scia_stabilimento' THEN

	_query := concat(_prefix, _join_tab_linee, _join_tab, _suffix);
	_query_final := format(_query, 'alt_id', _riferimento_id_nome_tab, _riferimento_id_nome, _riferimento_id,_data_inizio, _data_fine);
		
END IF;

raise WARNING 'dbi: %', _query_final;
return query
		execute _query_final;


END;

$_$;


ALTER FUNCTION preaccettazione.dbi_get_controlli_ufficiali_da_stabilimento(_riferimento_id integer, _riferimento_id_nome text, _riferimento_id_nome_tab text, _data_inizio timestamp without time zone, _data_fine timestamp without time zone) OWNER TO postgres;

--
-- TOC entry 917 (class 1255 OID 16638)
-- Name: dbi_get_stabilimenti_campioni_gis(text, double precision, double precision, double precision, timestamp without time zone, timestamp without time zone, boolean); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.dbi_get_stabilimenti_campioni_gis(_norma text, _latitudine_cerchio double precision DEFAULT NULL::double precision, _longitudine_cerchio double precision DEFAULT NULL::double precision, _raggio_km_cerchio double precision DEFAULT NULL::double precision, _data_inizio timestamp without time zone DEFAULT NULL::timestamp without time zone, _data_fine timestamp without time zone DEFAULT NULL::timestamp without time zone, ischeckdate boolean DEFAULT NULL::boolean) RETURNS TABLE(tick integer, ragione_sociale character varying, id_asl integer, asl character varying, soggetto character varying, codice_fiscale character varying, codice character varying, partita_iva character varying, comune character varying, provincia character varying, indirizzo character varying, latitudine double precision, longitudine double precision, codice_fiscale_rappresentante text, nominativo_rappresentante text, categoria_rischio integer, riferimento_id integer, riferimento_id_nome text, riferimento_id_nome_col text, riferimento_id_nome_tab text, stato_stab text, tipo_operatore text, ticketid integer, assigned_date timestamp without time zone, tipologia integer, provvedimenti_prescrittivi integer)
    LANGUAGE plpgsql
    AS $_$
DECLARE

_dbi_cerca_stab text := $$ 
preaccettazione.dbi_get_all_stabilimenti_gis_cu_cmp('%s', %s , %s, %s)
$$;

_query text := $$
select 
distinct on (tmp.riferimento_id, tmp.riferimento_id_nome, tmp.riferimento_id_nome_tab) tmp.ticketid as tick, 
tmp.* from
(
select ram.*, t.ticketid, t.assigned_date, t.tipologia, t.provvedimenti_prescrittivi  
	from %s ram
		join preaccettazione.vw_ticket_cmp  t on (t.org_id = ram.riferimento_id and ram.riferimento_id_nome_tab = 'organization')
		
union
select ram.*, t.ticketid, t.assigned_date, t.tipologia, t.provvedimenti_prescrittivi  
	from %s ram
		join preaccettazione.vw_ticket_cmp  t on (t.id_stabilimento = ram.riferimento_id and ram.riferimento_id_nome_tab = 'opu_stabilimento') 
		
union
select ram.*, t.ticketid, t.assigned_date, t.tipologia, t.provvedimenti_prescrittivi  
	from %s ram
		join preaccettazione.vw_ticket_cmp  t on (t.id_apiario = ram.riferimento_id and ram.riferimento_id_nome_tab = 'apicoltura_imprese') 
		
union
select ram.*, t.ticketid, t.assigned_date, t.tipologia, t.provvedimenti_prescrittivi  
	from %s ram
		join preaccettazione.vw_ticket_cmp  t on (t.alt_id = ram.riferimento_id and ram.riferimento_id_nome_tab = 'sintesis_stabilimento') 

union
select ram.*, t.ticketid, t.assigned_date, t.tipologia, t.provvedimenti_prescrittivi  
	from %s ram
		join preaccettazione.vw_ticket_cmp  t on (t.alt_id = ram.riferimento_id and ram.riferimento_id_nome_tab = 'suap_ric_scia_stabilimento') 

union
select ram.*, t.ticketid, t.assigned_date, t.tipologia, t.provvedimenti_prescrittivi  
	from %s ram
		join preaccettazione.vw_ticket_cmp  t on (t.alt_id = ram.riferimento_id and ram.riferimento_id_nome_tab = 'stabilimenti') 
		
) tmp where tmp.assigned_date BETWEEN '%s' AND '%s'
ORDER BY tmp.riferimento_id, tmp.riferimento_id_nome, tmp.riferimento_id_nome_tab, tmp.assigned_date DESC NULLS LAST

$$;

_qry_final text;

BEGIN

_dbi_cerca_stab := format(_dbi_cerca_stab, _norma, _latitudine_cerchio, _longitudine_cerchio, _raggio_km_cerchio);

raise WARNING 'dbi (preaccettazione.dbi_get_all_stabilimenti_gis_cu_cmp) : %',_dbi_cerca_stab;

_qry_final:=format(_query, _dbi_cerca_stab, _dbi_cerca_stab, _dbi_cerca_stab, _dbi_cerca_stab, _dbi_cerca_stab, _dbi_cerca_stab, _data_inizio, _data_fine);


raise WARNING 'query final (preaccettazione.dbi_get_stabilimenti_campioni_gis) : %',_qry_final;

 return query
    EXECUTE  _qry_final;
 
END;

$_$;


ALTER FUNCTION preaccettazione.dbi_get_stabilimenti_campioni_gis(_norma text, _latitudine_cerchio double precision, _longitudine_cerchio double precision, _raggio_km_cerchio double precision, _data_inizio timestamp without time zone, _data_fine timestamp without time zone, ischeckdate boolean) OWNER TO postgres;

--
-- TOC entry 918 (class 1255 OID 16639)
-- Name: dbi_get_stabilimenti_categorizzati_gis(text, double precision, double precision, double precision, timestamp without time zone, timestamp without time zone, boolean); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.dbi_get_stabilimenti_categorizzati_gis(_norma text, _latitudine_cerchio double precision DEFAULT NULL::double precision, _longitudine_cerchio double precision DEFAULT NULL::double precision, _raggio_km_cerchio double precision DEFAULT NULL::double precision, _data_inizio timestamp without time zone DEFAULT NULL::timestamp without time zone, _data_fine timestamp without time zone DEFAULT NULL::timestamp without time zone, ischeckdate boolean DEFAULT NULL::boolean) RETURNS TABLE(tick integer, ragione_sociale character varying, id_asl integer, asl character varying, soggetto character varying, codice_fiscale character varying, codice character varying, partita_iva character varying, comune character varying, provincia character varying, indirizzo character varying, latitudine double precision, longitudine double precision, codice_fiscale_rappresentante text, nominativo_rappresentante text, categoria_rischio integer, riferimento_id integer, riferimento_id_nome text, riferimento_id_nome_col text, riferimento_id_nome_tab text, stato_stab text, tipo_operatore text, ticketid integer, assigned_date timestamp without time zone, tipologia integer, provvedimenti_prescrittivi integer)
    LANGUAGE plpgsql
    AS $_$
DECLARE

_dbi_cerca_stab text := $$ 
preaccettazione.dbi_get_all_stabilimenti_gis('%s', %s , %s, %s, '%s', '%s', '%s')
$$;

_query text := $$
select 
distinct on (tmp.riferimento_id, tmp.riferimento_id_nome, tmp.riferimento_id_nome_tab) tmp.ticketid as tick, 
tmp.* from
(
select ram.*, t.ticketid, t.assigned_date, t.tipologia, t.provvedimenti_prescrittivi  
	from %s ram
		join preaccettazione.vw_ticket_controllo_sorveglianza  t on (t.org_id = ram.riferimento_id and ram.riferimento_id_nome_tab = 'organization') 
union
select ram.*, t.ticketid, t.assigned_date, t.tipologia, t.provvedimenti_prescrittivi  
	from %s ram
		join preaccettazione.vw_ticket_controllo_sorveglianza  t on (t.id_stabilimento = ram.riferimento_id and ram.riferimento_id_nome_tab = 'opu_stabilimento') 
union
select ram.*, t.ticketid, t.assigned_date, t.tipologia, t.provvedimenti_prescrittivi  
	from %s ram
		join preaccettazione.vw_ticket_controllo_sorveglianza  t on (t.id_apiario = ram.riferimento_id and ram.riferimento_id_nome_tab = 'apicoltura_imprese') 
		
union
select ram.*, t.ticketid, t.assigned_date, t.tipologia, t.provvedimenti_prescrittivi  
	from %s ram
		join preaccettazione.vw_ticket_controllo_sorveglianza  t on (t.alt_id = ram.riferimento_id and ram.riferimento_id_nome_tab = 'sintesis_stabilimento') 

union
select ram.*, t.ticketid, t.assigned_date, t.tipologia, t.provvedimenti_prescrittivi  
	from %s ram
		join preaccettazione.vw_ticket_controllo_sorveglianza  t on (t.alt_id = ram.riferimento_id and ram.riferimento_id_nome_tab = 'suap_ric_scia_stabilimento') 

union
select ram.*, t.ticketid, t.assigned_date, t.tipologia, t.provvedimenti_prescrittivi  
	from %s ram
		join preaccettazione.vw_ticket_controllo_sorveglianza  t on (t.alt_id = ram.riferimento_id and ram.riferimento_id_nome_tab = 'stabilimenti') 
) tmp 
where tmp.categoria_rischio is not null 
ORDER BY tmp.riferimento_id, tmp.riferimento_id_nome, tmp.riferimento_id_nome_tab, tmp.assigned_date DESC NULLS LAST

$$;

_qry_final text;

BEGIN

_dbi_cerca_stab := format(_dbi_cerca_stab, _norma, _latitudine_cerchio, _longitudine_cerchio, _raggio_km_cerchio, _data_inizio, _data_fine, ischeckdate);

raise WARNING 'dbi (preaccettazione.dbi_get_all_stabilimenti_gis) : %',_dbi_cerca_stab;

_qry_final:=format(_query, _dbi_cerca_stab, _dbi_cerca_stab, _dbi_cerca_stab, _dbi_cerca_stab, _dbi_cerca_stab, _dbi_cerca_stab);

raise WARNING 'query final (preaccettazione.dbi_get_stabilimenti_categorizzati_gis) : %',_qry_final;

 return query
    EXECUTE  _qry_final;
 
END;

$_$;


ALTER FUNCTION preaccettazione.dbi_get_stabilimenti_categorizzati_gis(_norma text, _latitudine_cerchio double precision, _longitudine_cerchio double precision, _raggio_km_cerchio double precision, _data_inizio timestamp without time zone, _data_fine timestamp without time zone, ischeckdate boolean) OWNER TO postgres;

--
-- TOC entry 919 (class 1255 OID 16640)
-- Name: dbi_get_stabilimenti_controlli_gis(text, double precision, double precision, double precision, timestamp without time zone, timestamp without time zone, boolean); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.dbi_get_stabilimenti_controlli_gis(_norma text, _latitudine_cerchio double precision DEFAULT NULL::double precision, _longitudine_cerchio double precision DEFAULT NULL::double precision, _raggio_km_cerchio double precision DEFAULT NULL::double precision, _data_inizio timestamp without time zone DEFAULT NULL::timestamp without time zone, _data_fine timestamp without time zone DEFAULT NULL::timestamp without time zone, ischeckdate boolean DEFAULT NULL::boolean) RETURNS TABLE(tick integer, ragione_sociale character varying, id_asl integer, asl character varying, soggetto character varying, codice_fiscale character varying, codice character varying, partita_iva character varying, comune character varying, provincia character varying, indirizzo character varying, latitudine double precision, longitudine double precision, codice_fiscale_rappresentante text, nominativo_rappresentante text, categoria_rischio integer, riferimento_id integer, riferimento_id_nome text, riferimento_id_nome_col text, riferimento_id_nome_tab text, stato_stab text, tipo_operatore text, ticketid integer, assigned_date timestamp without time zone, tipologia integer, provvedimenti_prescrittivi integer)
    LANGUAGE plpgsql
    AS $_$
DECLARE

_dbi_cerca_stab text := $$ 
preaccettazione.dbi_get_all_stabilimenti_gis_cu_cmp('%s', %s , %s, %s)
$$;

_query text := $$
select 
distinct on (tmp.riferimento_id, tmp.riferimento_id_nome, tmp.riferimento_id_nome_tab) tmp.ticketid as tick, 
tmp.* from
(
select ram.*, t.ticketid, t.assigned_date, t.tipologia, t.provvedimenti_prescrittivi  
	from %s ram
		join preaccettazione.vw_ticket_cu_ispezione_semplice  t on (t.org_id = ram.riferimento_id and ram.riferimento_id_nome_tab = 'organization')
union
select ram.*, t.ticketid, t.assigned_date, t.tipologia, t.provvedimenti_prescrittivi  
	from %s ram
		join preaccettazione.vw_ticket_cu_ispezione_semplice  t on (t.id_stabilimento = ram.riferimento_id and ram.riferimento_id_nome_tab = 'opu_stabilimento') 
union
select ram.*, t.ticketid, t.assigned_date, t.tipologia, t.provvedimenti_prescrittivi  
	from %s ram
		join preaccettazione.vw_ticket_cu_ispezione_semplice  t on (t.id_apiario = ram.riferimento_id and ram.riferimento_id_nome_tab = 'apicoltura_imprese') 
		
union
select ram.*, t.ticketid, t.assigned_date, t.tipologia, t.provvedimenti_prescrittivi  
	from %s ram
		join preaccettazione.vw_ticket_cu_ispezione_semplice  t on (t.alt_id = ram.riferimento_id and ram.riferimento_id_nome_tab = 'sintesis_stabilimento') 

union
select ram.*, t.ticketid, t.assigned_date, t.tipologia, t.provvedimenti_prescrittivi  
	from %s ram
		join preaccettazione.vw_ticket_cu_ispezione_semplice  t on (t.alt_id = ram.riferimento_id and ram.riferimento_id_nome_tab = 'suap_ric_scia_stabilimento') 

union
select ram.*, t.ticketid, t.assigned_date, t.tipologia, t.provvedimenti_prescrittivi  
	from %s ram
		join preaccettazione.vw_ticket_cu_ispezione_semplice  t on (t.alt_id = ram.riferimento_id and ram.riferimento_id_nome_tab = 'stabilimenti') 
) tmp where tmp.assigned_date BETWEEN '%s' AND '%s'
ORDER BY tmp.riferimento_id, tmp.riferimento_id_nome, tmp.riferimento_id_nome_tab, tmp.assigned_date DESC NULLS LAST

$$;

_qry_final text;

BEGIN

_dbi_cerca_stab := format(_dbi_cerca_stab, _norma, _latitudine_cerchio, _longitudine_cerchio, _raggio_km_cerchio);

raise WARNING 'dbi (preaccettazione.dbi_get_all_stabilimenti_gis_cu_cmp) : %',_dbi_cerca_stab;

_qry_final:=format(_query, _dbi_cerca_stab, _dbi_cerca_stab, _dbi_cerca_stab, _dbi_cerca_stab, _dbi_cerca_stab, _dbi_cerca_stab, _data_inizio, _data_fine);


raise WARNING 'query final (preaccettazione.dbi_get_stabilimenti_controlli_gis) : %',_qry_final;

 return query
    EXECUTE  _qry_final;
 
END;

$_$;


ALTER FUNCTION preaccettazione.dbi_get_stabilimenti_controlli_gis(_norma text, _latitudine_cerchio double precision, _longitudine_cerchio double precision, _raggio_km_cerchio double precision, _data_inizio timestamp without time zone, _data_fine timestamp without time zone, ischeckdate boolean) OWNER TO postgres;

--
-- TOC entry 920 (class 1255 OID 16641)
-- Name: dbi_get_stabilimenti_ex_ante_gis(text, double precision, double precision, double precision, timestamp without time zone, timestamp without time zone, boolean); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.dbi_get_stabilimenti_ex_ante_gis(_norma text, _latitudine_cerchio double precision DEFAULT NULL::double precision, _longitudine_cerchio double precision DEFAULT NULL::double precision, _raggio_km_cerchio double precision DEFAULT NULL::double precision, _data_inizio timestamp without time zone DEFAULT NULL::timestamp without time zone, _data_fine timestamp without time zone DEFAULT NULL::timestamp without time zone, ischeckdate boolean DEFAULT NULL::boolean) RETURNS TABLE(tick integer, ragione_sociale character varying, id_asl integer, asl character varying, soggetto character varying, codice_fiscale character varying, codice character varying, partita_iva character varying, comune character varying, provincia character varying, indirizzo character varying, latitudine double precision, longitudine double precision, codice_fiscale_rappresentante text, nominativo_rappresentante text, categoria_rischio integer, riferimento_id integer, riferimento_id_nome text, riferimento_id_nome_col text, riferimento_id_nome_tab text, stato_stab text, tipo_operatore text, ticketid integer, assigned_date timestamp without time zone, tipologia integer, provvedimenti_prescrittivi integer)
    LANGUAGE plpgsql
    AS $_$
DECLARE

_dbi_cerca_stab text := $$ 
preaccettazione.dbi_get_all_stabilimenti_gis('%s', %s , %s, %s, '%s', '%s', '%s')
$$;

_query text := $$

select 
distinct on (tmp.riferimento_id, tmp.riferimento_id_nome, tmp.riferimento_id_nome_tab) tmp.ticketid as tick, 
tmp.* from
(
select ram.*, t.ticketid, t.assigned_date, t.tipologia, t.provvedimenti_prescrittivi  
	from %s ram
		left join preaccettazione.vw_ticket_cu  t on (t.org_id = ram.riferimento_id and ram.riferimento_id_nome_tab = 'organization') 
		where ram.riferimento_id_nome_tab = 'organization' and ram.riferimento_id_nome = 'orgId' and ram.riferimento_id NOT IN
		(select ram2.riferimento_id from %s ram2
		 join preaccettazione.vw_ticket_controllo_sorveglianza  t2 on (t2.org_id = ram2.riferimento_id and ram2.riferimento_id_nome_tab = 'organization'))
	
union
select ram.*, t.ticketid, t.assigned_date, t.tipologia, t.provvedimenti_prescrittivi  
	from %s ram
		left join preaccettazione.vw_ticket_cu  t on (t.id_stabilimento = ram.riferimento_id and ram.riferimento_id_nome_tab = 'opu_stabilimento')
		where ram.riferimento_id_nome_tab = 'opu_stabilimento' and ram.riferimento_id_nome = 'stabId' and ram.riferimento_id NOT IN
		(select ram2.riferimento_id from %s ram2
		 join preaccettazione.vw_ticket_controllo_sorveglianza  t2 on (t2.id_stabilimento = ram2.riferimento_id and ram2.riferimento_id_nome_tab = 'opu_stabilimento'))
union
select ram.*, t.ticketid, t.assigned_date, t.tipologia, t.provvedimenti_prescrittivi  
	from %s ram
		left join preaccettazione.vw_ticket_cu  t on (t.id_apiario = ram.riferimento_id and ram.riferimento_id_nome_tab = 'apicoltura_imprese')
		where ram.riferimento_id_nome_tab = 'apicoltura_imprese' and ram.riferimento_id_nome = 'stabId' and ram.riferimento_id NOT IN
		(select ram2.riferimento_id from %s ram2
		 join preaccettazione.vw_ticket_controllo_sorveglianza  t2 on (t2.id_apiario = ram2.riferimento_id and ram2.riferimento_id_nome_tab = 'apicoltura_imprese'))	
union
select ram.*, t.ticketid, t.assigned_date, t.tipologia, t.provvedimenti_prescrittivi  
	from %s ram
		left join preaccettazione.vw_ticket_cu  t on (t.alt_id = ram.riferimento_id and ram.riferimento_id_nome_tab = 'sintesis_stabilimento')
		where ram.riferimento_id_nome_tab = 'sintesis_stabilimento' and ram.riferimento_id_nome = 'altId' and ram.riferimento_id NOT IN
		(select ram2.riferimento_id from %s ram2
		 join preaccettazione.vw_ticket_controllo_sorveglianza  t2 on (t2.alt_id = ram2.riferimento_id and ram2.riferimento_id_nome_tab = 'sintesis_stabilimento')) 
union
select ram.*, t.ticketid, t.assigned_date, t.tipologia, t.provvedimenti_prescrittivi  
	from %s ram
		left join preaccettazione.vw_ticket_cu  t on (t.alt_id = ram.riferimento_id and ram.riferimento_id_nome_tab = 'suap_ric_scia_stabilimento')
		where ram.riferimento_id_nome_tab = 'suap_ric_scia_stabilimento' and ram.riferimento_id_nome = 'altId' and ram.riferimento_id NOT IN
		(select ram2.riferimento_id from %s ram2
		 join preaccettazione.vw_ticket_controllo_sorveglianza  t2 on (t2.alt_id = ram2.riferimento_id and ram2.riferimento_id_nome_tab = 'suap_ric_scia_stabilimento')) 
union
select ram.*, t.ticketid, t.assigned_date, t.tipologia, t.provvedimenti_prescrittivi  
	from %s ram
		left join preaccettazione.vw_ticket_cu  t on (t.alt_id = ram.riferimento_id and ram.riferimento_id_nome_tab = 'stabilimenti')
		where ram.riferimento_id_nome_tab = 'stabilimenti' and ram.riferimento_id_nome = 'altId' and ram.riferimento_id NOT IN
		(select ram2.riferimento_id from %s ram2
		 join preaccettazione.vw_ticket_controllo_sorveglianza  t2 on (t2.alt_id = ram2.riferimento_id and ram2.riferimento_id_nome_tab = 'stabilimenti'))
) tmp  
ORDER BY tmp.riferimento_id, tmp.riferimento_id_nome, tmp.riferimento_id_nome_tab, tmp.assigned_date DESC NULLS LAST



$$;

_qry_final text;

BEGIN

_dbi_cerca_stab := format(_dbi_cerca_stab, _norma, _latitudine_cerchio, _longitudine_cerchio, _raggio_km_cerchio, _data_inizio, _data_fine, ischeckdate);

raise WARNING 'dbi (preaccettazione.dbi_get_all_stabilimenti_gis) : %',_dbi_cerca_stab;

_qry_final:=format(_query, _dbi_cerca_stab, _dbi_cerca_stab, _dbi_cerca_stab, _dbi_cerca_stab, _dbi_cerca_stab, _dbi_cerca_stab, 
		   _dbi_cerca_stab, _dbi_cerca_stab, _dbi_cerca_stab, _dbi_cerca_stab, _dbi_cerca_stab, _dbi_cerca_stab);

raise WARNING 'query final (preaccettazione.dbi_get_stabilimenti_ex_ante_gis) : %',_qry_final;

 return query
    EXECUTE  _qry_final;
 
END;

$_$;


ALTER FUNCTION preaccettazione.dbi_get_stabilimenti_ex_ante_gis(_norma text, _latitudine_cerchio double precision, _longitudine_cerchio double precision, _raggio_km_cerchio double precision, _data_inizio timestamp without time zone, _data_fine timestamp without time zone, ischeckdate boolean) OWNER TO postgres;

--
-- TOC entry 921 (class 1255 OID 16642)
-- Name: dbi_get_stabilimenti_gis(text, text, double precision, double precision, double precision, timestamp without time zone, timestamp without time zone, boolean, integer); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.dbi_get_stabilimenti_gis(_norma text, _tipo_richiesta text, _latitudine_cerchio double precision DEFAULT NULL::double precision, _longitudine_cerchio double precision DEFAULT NULL::double precision, _raggio_km_cerchio double precision DEFAULT NULL::double precision, _data_inizio timestamp without time zone DEFAULT NULL::timestamp without time zone, _data_fine timestamp without time zone DEFAULT NULL::timestamp without time zone, ischeckdate boolean DEFAULT NULL::boolean, _id_asl_utente integer DEFAULT NULL::integer) RETURNS TABLE(ragione_sociale character varying, id_asl integer, asl character varying, soggetto character varying, codice_fiscale character varying, codice character varying, partita_iva character varying, comune character varying, provincia character varying, indirizzo character varying, latitudine double precision, longitudine double precision, codice_fiscale_rappresentante text, nominativo_rappresentante text, categoria_rischio integer, riferimento_id integer, riferimento_id_nome text, riferimento_id_nome_col text, riferimento_id_nome_tab text, stato_stab text, tipo_operatore text, data_ultimo_controllo text)
    LANGUAGE plpgsql STABLE
    AS $_$
DECLARE 

_prefix text := $$
	SELECT
		ragione_sociale, 
		id_asl, 
		asl, 
		soggetto, 
		codice_fiscale, 
		codice, 
		partita_iva, 
		comune, 
		provincia, 
		indirizzo, 
		latitudine, 
		longitudine, 
		codice_fiscale_rappresentante, 
		nominativo_rappresentante, 
		categoria_rischio, 
		riferimento_id, 
		riferimento_id_nome, 
		riferimento_id_nome_col, 
		riferimento_id_nome_tab,
		stato_stab,
		tipo_operatore,
		CASE
		WHEN assigned_date is not null THEN 
			to_char(assigned_date, 'YYYY-MM-DD')
		ELSE null
		END AS data_ultimo_controllo
$$;

--ALL tutti gli stabilimenti (richiede filtro norma)
_qry_base text := $$
	select *, null::text AS data_ultimo_controllo 
		from preaccettazione.dbi_get_all_stabilimenti_gis('%s', %s, %s, %s,'%s','%s', '%s')
$$;

_qry_anag text := $$
	FROM preaccettazione.dbi_get_stabilimenti_categorizzati_gis('%s', %s, %s, %s, '%s', '%s', '%s')
$$;

_qry_anag_non_controllati text := $$
	FROM preaccettazione.dbi_get_stabilimenti_mai_controllati_gis('%s', %s, %s, %s, '%s', '%s', '%s') t
		where t.assigned_date is null or t.assigned_date < (now() - interval '730 days') 
$$;

_qry_anag_exante text := $$
	FROM preaccettazione.dbi_get_stabilimenti_ex_ante_gis('%s', %s, %s, %s, '%s', '%s', '%s')
$$;

_qry_anag_controlli text := $$
	FROM preaccettazione.dbi_get_stabilimenti_controlli_gis('%s', %s, %s, %s, '%s', '%s', '%s')
$$;

_qry_anag_campioni text := $$
	FROM preaccettazione.dbi_get_stabilimenti_campioni_gis('%s', %s, %s, %s, '%s', '%s', '%s')
$$;

_filtro_asl_utente text := $$
	WHERE id_asl = %s OR %s = -1
$$;

_qry text;

_qry_final text;

BEGIN

IF ( _tipo_richiesta <> 'ANAG' AND _tipo_richiesta <>'ANAG_ALL' AND _tipo_richiesta <>'ANAG_EX_ANTE' AND _tipo_richiesta <>'ANAG_MAI_CONTROLLATI'
     AND _tipo_richiesta <>'CU' AND _tipo_richiesta <>'CMP') THEN	
	RAISE EXCEPTION 'Il campo tipo richiesta non ha un valore valido';
END IF;

--tutti gli stabilimenti (ANAG, ANAG_EX-ANTE, ANAG_MAI_CONTROLLATI impostare filtro norma)
IF (_tipo_richiesta = 'ANAG_ALL') THEN
	_qry_final := format(_qry_base, _norma, _latitudine_cerchio, _longitudine_cerchio, _raggio_km_cerchio, _data_inizio, _data_fine, ischeckdate);
END IF;

--stabilimenti categorizzati
IF (_tipo_richiesta = 'ANAG') THEN
	_qry := concat(_prefix, _qry_anag);
	_qry_final := format(_qry, _norma, _latitudine_cerchio, _longitudine_cerchio, _raggio_km_cerchio, _data_inizio, _data_fine, ischeckdate);
END IF;

--stabilimenti ex-ante
IF (_tipo_richiesta = 'ANAG_EX_ANTE') THEN
	_qry := concat(_prefix, _qry_anag_exante);
	_qry_final := format(_qry, _norma, _latitudine_cerchio, _longitudine_cerchio, _raggio_km_cerchio, _data_inizio, _data_fine, ischeckdate);
END IF;

--stabilimenti mai controllati o non controllati negli ultimi due anni
IF (_tipo_richiesta = 'ANAG_MAI_CONTROLLATI') THEN
	_qry := concat(_prefix, _qry_anag_non_controllati);
	_qry_final := format(_qry, _norma, _latitudine_cerchio, _longitudine_cerchio, _raggio_km_cerchio, _data_inizio, _data_fine, ischeckdate);
END IF;

--controlli (lista stabilimenti)
IF (_tipo_richiesta = 'CU') THEN
	_qry := concat(_prefix, _qry_anag_controlli);
	_qry_final := format(_qry, _norma, _latitudine_cerchio, _longitudine_cerchio, _raggio_km_cerchio, _data_inizio, _data_fine, ischeckdate);
END IF;

--campioni (lista stabilimenti)
IF (_tipo_richiesta = 'CMP') THEN
	_qry := concat(_prefix, _qry_anag_campioni);
	_qry_final := format(_qry, _norma, _latitudine_cerchio, _longitudine_cerchio, _raggio_km_cerchio, _data_inizio, _data_fine, ischeckdate);
END IF;

_qry_final := concat(_qry_final, _filtro_asl_utente);
_qry_final := format(_qry_final, _id_asl_utente, _id_asl_utente);

	return query
		EXECUTE  _qry_final;

END;
$_$;


ALTER FUNCTION preaccettazione.dbi_get_stabilimenti_gis(_norma text, _tipo_richiesta text, _latitudine_cerchio double precision, _longitudine_cerchio double precision, _raggio_km_cerchio double precision, _data_inizio timestamp without time zone, _data_fine timestamp without time zone, ischeckdate boolean, _id_asl_utente integer) OWNER TO postgres;

--
-- TOC entry 922 (class 1255 OID 16644)
-- Name: dbi_get_stabilimenti_mai_controllati_gis(text, double precision, double precision, double precision, timestamp without time zone, timestamp without time zone, boolean); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.dbi_get_stabilimenti_mai_controllati_gis(_norma text, _latitudine_cerchio double precision DEFAULT NULL::double precision, _longitudine_cerchio double precision DEFAULT NULL::double precision, _raggio_km_cerchio double precision DEFAULT NULL::double precision, _data_inizio timestamp without time zone DEFAULT NULL::timestamp without time zone, _data_fine timestamp without time zone DEFAULT NULL::timestamp without time zone, ischeckdate boolean DEFAULT NULL::boolean) RETURNS TABLE(tick integer, ragione_sociale character varying, id_asl integer, asl character varying, soggetto character varying, codice_fiscale character varying, codice character varying, partita_iva character varying, comune character varying, provincia character varying, indirizzo character varying, latitudine double precision, longitudine double precision, codice_fiscale_rappresentante text, nominativo_rappresentante text, categoria_rischio integer, riferimento_id integer, riferimento_id_nome text, riferimento_id_nome_col text, riferimento_id_nome_tab text, stato_stab text, tipo_operatore text, ticketid integer, assigned_date timestamp without time zone, tipologia integer, provvedimenti_prescrittivi integer)
    LANGUAGE plpgsql
    AS $_$
DECLARE

_dbi_cerca_stab text := $$ 
preaccettazione.dbi_get_all_stabilimenti_gis('%s', %s , %s, %s, '%s', '%s', '%s')
$$;

_query text := $$
select 
distinct on (tmp.riferimento_id, tmp.riferimento_id_nome, tmp.riferimento_id_nome_tab) tmp.ticketid as tick, 
tmp.* from
(
select ram.*, t.ticketid, t.assigned_date, t.tipologia, t.provvedimenti_prescrittivi  
	from %s ram
		left join preaccettazione.vw_ticket_cu  t on (t.org_id = ram.riferimento_id and ram.riferimento_id_nome_tab = 'organization') 
		where ram.riferimento_id_nome_tab = 'organization' and ram.riferimento_id_nome = 'orgId'
union
select ram.*, t.ticketid, t.assigned_date, t.tipologia, t.provvedimenti_prescrittivi  
	from %s ram
		left join preaccettazione.vw_ticket_cu  t on (t.id_stabilimento = ram.riferimento_id and ram.riferimento_id_nome_tab = 'opu_stabilimento')
		where ram.riferimento_id_nome_tab = 'opu_stabilimento' and ram.riferimento_id_nome = 'stabId' 
union
select ram.*, t.ticketid, t.assigned_date, t.tipologia, t.provvedimenti_prescrittivi  
	from %s ram
		left join preaccettazione.vw_ticket_cu  t on (t.id_apiario = ram.riferimento_id and ram.riferimento_id_nome_tab = 'apicoltura_imprese')
		where ram.riferimento_id_nome_tab = 'apicoltura_imprese' and ram.riferimento_id_nome = 'stabId' 	
union
select ram.*, t.ticketid, t.assigned_date, t.tipologia, t.provvedimenti_prescrittivi  
	from %s ram
		left join preaccettazione.vw_ticket_cu  t on (t.alt_id = ram.riferimento_id and ram.riferimento_id_nome_tab = 'sintesis_stabilimento')
		where ram.riferimento_id_nome_tab = 'sintesis_stabilimento' and ram.riferimento_id_nome = 'altId' 
union
select ram.*, t.ticketid, t.assigned_date, t.tipologia, t.provvedimenti_prescrittivi  
	from %s ram
		left join preaccettazione.vw_ticket_cu  t on (t.alt_id = ram.riferimento_id and ram.riferimento_id_nome_tab = 'suap_ric_scia_stabilimento')
		where ram.riferimento_id_nome_tab = 'suap_ric_scia_stabilimento' and ram.riferimento_id_nome = 'altId' 
union
select ram.*, t.ticketid, t.assigned_date, t.tipologia, t.provvedimenti_prescrittivi  
	from %s ram
		left join preaccettazione.vw_ticket_cu  t on (t.alt_id = ram.riferimento_id and ram.riferimento_id_nome_tab = 'stabilimenti')
		where ram.riferimento_id_nome_tab = 'stabilimenti' and ram.riferimento_id_nome = 'altId'
) tmp  
ORDER BY tmp.riferimento_id, tmp.riferimento_id_nome, tmp.riferimento_id_nome_tab, tmp.assigned_date DESC NULLS LAST

$$;

_qry_final text;

BEGIN

_dbi_cerca_stab := format(_dbi_cerca_stab, _norma, _latitudine_cerchio, _longitudine_cerchio, _raggio_km_cerchio, _data_inizio, _data_fine, ischeckdate);

raise WARNING 'dbi (preaccettazione.dbi_get_all_stabilimenti_gis) : %',_dbi_cerca_stab;

_qry_final:=format(_query, _dbi_cerca_stab, _dbi_cerca_stab, _dbi_cerca_stab, _dbi_cerca_stab, _dbi_cerca_stab, _dbi_cerca_stab);

raise WARNING 'query final (preaccettazione.dbi_get_stabilimenti_mai_controllati_gis) : %',_qry_final;

 return query
    EXECUTE  _qry_final;
 
END;

$_$;


ALTER FUNCTION preaccettazione.dbi_get_stabilimenti_mai_controllati_gis(_norma text, _latitudine_cerchio double precision, _longitudine_cerchio double precision, _raggio_km_cerchio double precision, _data_inizio timestamp without time zone, _data_fine timestamp without time zone, ischeckdate boolean) OWNER TO postgres;

--
-- TOC entry 923 (class 1255 OID 16645)
-- Name: dbi_get_stabilimenti_ragione_sociale(text, text, integer, text); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.dbi_get_stabilimenti_ragione_sociale(_ragione_sociale text, _cun_n_reg text DEFAULT NULL::text, _id_asl_utente integer DEFAULT NULL::integer, _comune_testo_gps text DEFAULT NULL::text) RETURNS TABLE(ragione_sociale character varying, id_asl integer, asl character varying, soggetto character varying, codice_fiscale character varying, codice character varying, partita_iva character varying, comune character varying, provincia character varying, indirizzo character varying, latitudine double precision, longitudine double precision, codice_fiscale_rappresentante text, nominativo_rappresentante text, categoria_rischio integer, riferimento_id integer, riferimento_id_nome text, riferimento_id_nome_col text, riferimento_id_nome_tab text, tipo_operatore text)
    LANGUAGE plpgsql
    AS $$
BEGIN

return query
select distinct  
	       ricerche_anagrafiche_old_materializzata.ragione_sociale, 
	       ricerche_anagrafiche_old_materializzata.asl_rif as id_asl, 
	       ricerche_anagrafiche_old_materializzata.asl,
	       ricerche_anagrafiche_old_materializzata.norma::character varying,
	       ricerche_anagrafiche_old_materializzata.codice_fiscale::character varying, 
	       COALESCE(NULLIF(trim(ricerche_anagrafiche_old_materializzata.num_riconoscimento),''),NULLIF(trim(ricerche_anagrafiche_old_materializzata.n_reg),''))::character varying as codice,
	       ricerche_anagrafiche_old_materializzata.partita_iva::character varying, 
	       ricerche_anagrafiche_old_materializzata.comune , 
	       ricerche_anagrafiche_old_materializzata.provincia_stab provincia, 
	       ricerche_anagrafiche_old_materializzata.indirizzo,
	       CASE WHEN ricerche_anagrafiche_old_materializzata.latitudine_stab < 39.988475 OR ricerche_anagrafiche_old_materializzata.latitudine_stab > 41.503754 THEN 
				null 
			else ricerche_anagrafiche_old_materializzata.latitudine_stab 
		    end as latitudine, 
	       CASE WHEN ricerche_anagrafiche_old_materializzata.longitudine_stab < 13.7563172 OR ricerche_anagrafiche_old_materializzata.longitudine_stab > 15.8032837 THEN 
				null 
			else ricerche_anagrafiche_old_materializzata.longitudine_stab 
		    end as longitudine,
	       ricerche_anagrafiche_old_materializzata.codice_fiscale_rappresentante::text,
	       ricerche_anagrafiche_old_materializzata.nominativo_rappresentante,
	       ricerche_anagrafiche_old_materializzata.categoria_rischio,
	       ricerche_anagrafiche_old_materializzata.riferimento_id,
	       ricerche_anagrafiche_old_materializzata.riferimento_id_nome,
	       ricerche_anagrafiche_old_materializzata.riferimento_id_nome_col,
	       ricerche_anagrafiche_old_materializzata.riferimento_id_nome_tab,
	       ricerche_anagrafiche_old_materializzata.macroarea as tipo_operatore
	       
	  from ricerche_anagrafiche_old_materializzata
		where (
			(
				trim(ricerche_anagrafiche_old_materializzata.ragione_sociale) ilike '%' || replace(_ragione_sociale, ' ','%') || '%' 
				AND 
				trim(ricerche_anagrafiche_old_materializzata.ragione_sociale) not ilike ''
			)
		      AND (
				coalesce(trim(ricerche_anagrafiche_old_materializzata.num_riconoscimento),'') ilike trim(_cun_n_reg) OR 
				coalesce(trim(ricerche_anagrafiche_old_materializzata.n_reg),'') ilike trim(_cun_n_reg)
			 )
			)
			AND ( trim(_cun_n_reg) not ilike '' OR trim(_ragione_sociale) not ilike '')
			AND ( trim(_comune_testo_gps) ilike '' OR levenshtein(upper(trim(ricerche_anagrafiche_old_materializzata.comune)),upper(trim(_comune_testo_gps))) < 2 )
					
			AND ( ricerche_anagrafiche_old_materializzata.asl_rif = _id_asl_utente OR _id_asl_utente = -1 )
			AND concat(ricerche_anagrafiche_old_materializzata.codice_macroarea,
				   ricerche_anagrafiche_old_materializzata.codice_aggregazione,
				   ricerche_anagrafiche_old_materializzata.codice_attivita) not ilike 'oproprx'
			limit 101;



END;

$$;


ALTER FUNCTION preaccettazione.dbi_get_stabilimenti_ragione_sociale(_ragione_sociale text, _cun_n_reg text, _id_asl_utente integer, _comune_testo_gps text) OWNER TO postgres;

--
-- TOC entry 924 (class 1255 OID 16646)
-- Name: dbi_ins_res_arpac(text, text, integer, boolean); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.dbi_ins_res_arpac(_codpreacc text, _descr_ris_esame text, _id_utente integer DEFAULT NULL::integer, _forza_riscrittura boolean DEFAULT false) RETURNS TABLE(_idout integer)
    LANGUAGE plpgsql
    AS $$
DECLARE
	id_preacc integer;
	_id_cmp integer;
	_note_esito_esame text;
	
BEGIN

	select id into id_preacc from preaccettazione.codici_preaccettazione where trim(concat(prefix,anno,progres)) ilike trim(_codpreacc);

	select id_cmp into _id_cmp from preaccettazione.get_id_cmp_da_codice_preaccettazione(_codpreacc);

	select coalesce(trim(note_esito_esame),'') into _note_esito_esame from ticket where ticketid =  _id_cmp;

	IF _id_utente is null or _id_utente = -1 THEN
			_id_utente := 6567;
	END IF;

	IF (length(trim(_note_esito_esame)) = 0 and length(trim(_descr_ris_esame)) <> 0) THEN

		UPDATE ticket set note_esito_esame = _descr_ris_esame where ticketid = _id_cmp;

		return query
		insert into preaccettazione.stati_preaccettazione (id_preaccettazione, id_stato, entered, enteredby)
			values (id_preacc, 5, now(), _id_utente) returning id;
			
	ELSIF (length(trim(_descr_ris_esame)) <> 0 and _forza_riscrittura) THEN
		UPDATE ticket set note_esito_esame = _descr_ris_esame where ticketid = _id_cmp;
		UPDATE preaccettazione.stati_preaccettazione 
			set modified = now(), 
			    modifiedby = _id_utente, 
			    note_hd = concat(trim(note_hd) || '--',' lettura forzata esito esame dai ws di ARPAC in data: ', to_char(now(), 'YYYY-MM-DD  HH24:MI:SS'), ' da id utente: ', _id_utente)
		WHERE id_preaccettazione = id_preacc and id_stato = 5;
	ELSE
		return query
		select 0;
	END IF;
			
END;
$$;


ALTER FUNCTION preaccettazione.dbi_ins_res_arpac(_codpreacc text, _descr_ris_esame text, _id_utente integer, _forza_riscrittura boolean) OWNER TO postgres;

--
-- TOC entry 925 (class 1255 OID 16647)
-- Name: dbi_ins_res_sigla(text, text, integer, boolean); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.dbi_ins_res_sigla(_codpreacc text, _descr_ris_esame text, _id_utente integer DEFAULT NULL::integer, _forza_riscrittura boolean DEFAULT false) RETURNS TABLE(_idout integer)
    LANGUAGE plpgsql
    AS $$
DECLARE
	id_preacc integer;
	_id_cmp integer;
	_note_esito_esame text;
	
BEGIN

	select id into id_preacc from preaccettazione.codici_preaccettazione where trim(concat(prefix,anno,progres)) ilike trim(_codpreacc);

	select id_cmp into _id_cmp from preaccettazione.get_id_cmp_da_codice_preaccettazione(_codpreacc);

	select coalesce(trim(note_esito_esame),'') into _note_esito_esame from ticket where ticketid =  _id_cmp;

	IF _id_utente is null or _id_utente = -1 THEN
			_id_utente := 6567;
	END IF;

	IF (length(trim(_note_esito_esame)) = 0 and length(trim(_descr_ris_esame)) <> 0) THEN

		UPDATE ticket set note_esito_esame = _descr_ris_esame where ticketid = _id_cmp;

		return query
		insert into preaccettazione.stati_preaccettazione (id_preaccettazione, id_stato, entered, enteredby)
			values (id_preacc, 5, now(), _id_utente) returning id;
			
	ELSIF (length(trim(_descr_ris_esame)) <> 0 and _forza_riscrittura) THEN
		UPDATE ticket set note_esito_esame = _descr_ris_esame where ticketid = _id_cmp;
		UPDATE preaccettazione.stati_preaccettazione 
			set modified = now(), 
			    modifiedby = _id_utente, 
			    note_hd = concat(trim(note_hd) || '--',' lettura forzata esito esame dai ws di SIGLA in data: ', to_char(now(), 'YYYY-MM-DD  HH24:MI:SS'), ' da id utente: ', _id_utente)
		WHERE id_preaccettazione = id_preacc and id_stato = 5;
	ELSE
		return query
		select 0;
	END IF;
			
END;
$$;


ALTER FUNCTION preaccettazione.dbi_ins_res_sigla(_codpreacc text, _descr_ris_esame text, _id_utente integer, _forza_riscrittura boolean) OWNER TO postgres;

--
-- TOC entry 926 (class 1255 OID 16648)
-- Name: get_anagrafica(text, integer, text, integer, integer); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.get_anagrafica(_codpreacc text, _idutente integer, _iplettura text, _id_ente integer, _id_laboratorio integer) RETURNS TABLE(norma text, ragione_sociale character varying, partita_iva text, nominativo_rappresentante text, codice_fiscale_rappresentante character varying, asl_rif integer, asl character varying, indirizzo character varying, comune character varying, provincia_stab character varying, n_linea character varying, attivita text, cod_univoco_ml text, desc_linea_attr_1 text, desc_linea_attr_2 text, data_ultima_mod timestamp without time zone, data_conferma timestamp without time zone, codice_preaccettazione text, codmatrice character varying, codanalita character varying, codquesdiagn character varying, data_prelievo timestamp without time zone, numero_verbale character varying, data_verbale timestamp without time zone, stato_preaccettazione text)
    LANGUAGE plpgsql
    AS $$
DECLARE

	id_preacc integer;
	_stato integer;
	
BEGIN

	select id into id_preacc from preaccettazione.codici_preaccettazione
		where concat(prefix,anno,progres) ilike trim(_codpreacc);
	
	select id_stato into _stato from preaccettazione.stati_preaccettazione 
		where id_preaccettazione = id_preacc order by id_stato desc limit 1;

	IF _stato = 1 THEN 

		perform preaccettazione.lettura_da_laboratorio(_codpreacc,_idutente,_iplettura); 
		
		return query
		select distinct
		       ram.norma, --text
		       trim(regexp_replace(ram.ragione_sociale, '\s+', ' ', 'g'))::character varying(79) as ragione_sociale,
		       --ram.ragione_sociale, --character varying(300)
		       ram.partita_iva::text, --bpchar
		       ram.nominativo_rappresentante, --text
		       ram.codice_fiscale_rappresentante, --character varying
		       ram.asl_rif, --integer
		       ram.asl, --character varying(300)
		       trim(regexp_replace(ram.indirizzo, '\s+', ' ', 'g'))::character varying(49) as indirizzo, --character varying
		       ram.comune, --character varying
		       ram.provincia_stab, --character varying
		       ram.n_linea, --character varying
		       ram.attivita, --text
		       --------------inizio RQ1 flusso 254------------
		       concat_ws('-',ram.codice_macroarea, ram.codice_aggregazione, ram.codice_attivita) as codiceml,
		       case when ram.tipologia_operatore=2 then (select specie_allevamento from organization where org_id = ram.riferimento_id and ram.riferimento_id_nome_tab='organization')::text
		       else null::text
		       end as attr1,
		       case when ram.tipologia_operatore=2 then (select specie_allev from organization where org_id = ram.riferimento_id and ram.riferimento_id_nome_tab='organization')::text
		       else null::text
		       end as attr2,
		       -----------------fine RQ1 flusso 254-----------		       
		       sp.modified, --timestamp without time zone
		       sp.entered, --timestamp without time zone
		       concat(cp.prefix, cp.anno, cp.progres) as codPreacc, --text
		       null::character varying as codMatrice, --cp.matrice_campione::character varying as codMatrice, --codMatrice
		       null::character varying as codAnalita, --codAnalita
		       null::character varying as codQuesDiagn, --cp.quesito_diagnostico::character varying as codQuesDiagn, --null::character varying as codQuesDiagn, --codQuesDiagn
		       null::timestamp without time zone as data_prelievo,--'2018-05-27'::timestamp without time zone as data_prelievo, 
		       null::character varying as numero_verbale,--'864833'::character varying as numero_verbale,
		       null::timestamp without time zone as data_verbale, --data_verbale
		       'Incompleto: non associato al campione'::text as stato_preaccettazione --stato della preaccettazione: completo sta per associato al campione
	
		from ricerche_anagrafiche_old_materializzata ram 
			join preaccettazione.associazione_preaccettazione_entita ap
				on concat(ram.riferimento_id, ram.riferimento_id_nome, ram.riferimento_id_nome_tab, ram.id_linea, ram.tipologia_operatore) = 
				concat(ap.lda_riferimento_id, ap.lda_riferimento_id_nome, ap.lda_riferimento_id_nome_tab, ap.lda_id_linea, ap.tipologia_operatore)
			join preaccettazione.stati_preaccettazione sp on sp.id = ap.id_stati
			join preaccettazione.codici_preaccettazione cp on cp.id = sp.id_preaccettazione
		where concat(cp.prefix, cp.anno, cp.progres) ilike trim(_codPreacc) and sp.id_stato = 1
		-- adding 15/07
		and cp.id_ente = _id_ente and cp.id_laboratorio = _id_laboratorio;
 
	END IF;

	--se la preaccettazione del campione è completa
	IF _stato = 2 or _stato = 3 or _stato = 5 THEN

		perform preaccettazione.lettura_da_laboratorio(_codpreacc,_idutente,_iplettura); 

		return query
		select distinct
		       ram.norma, --text
		       trim(regexp_replace(ram.ragione_sociale, '\s+', ' ', 'g'))::character varying(79) as ragione_sociale,
		       --ram.ragione_sociale, --character varying(300)
		       ram.partita_iva::text, --bpchar
		       ram.nominativo_rappresentante, --text
		       ram.codice_fiscale_rappresentante, --character varying
		       ram.asl_rif, --integer
		       ram.asl, --character varying(300)
		       trim(regexp_replace(ram.indirizzo, '\s+', ' ', 'g'))::character varying(49) as indirizzo, --character varying
		       ram.comune, --character varying
		       ram.provincia_stab, --character varying
		       ram.n_linea, --character varying
		       ram.attivita, --text
		       --------------inizio RQ1 flusso 254------------
		      concat_ws('-',ram.codice_macroarea, ram.codice_aggregazione, ram.codice_attivita) as codiceml,
		       case when ram.tipologia_operatore=2 then (select specie_allevamento from organization where org_id = ram.riferimento_id and ram.riferimento_id_nome_tab='organization')::text
		       else null::text
		       end as attr1,
		       case when ram.tipologia_operatore=2 then (select specie_allev from organization where org_id = ram.riferimento_id and ram.riferimento_id_nome_tab='organization')::text
		       else null::text
		       end as attr2,
		       -----------------fine RQ1 flusso 254-----------
		       sp.modified, --timestamp without time zone
		       sp.entered, --timestamp without time zone
		       concat(cp.prefix, cp.anno, cp.progres) as codPreacc, --text
		       --null::character varying as codMatrice, 
		       --COALESCE(NULLIF(trim(m.codice_esame),''),NULLIF(trim(m.nome),''))::character varying as codMatrice, --codMatrice
		       --COALESCE(trim(m.codice_esame),'')::character varying as codMatrice,
		       CASE WHEN (length(trim(coalesce(m3.codice_esame,''))) = 0) THEN
				 COALESCE(trim(concat(m2.codice_esame || ';', m.codice_esame)),'')::character varying
			    ELSE 
				COALESCE(trim(concat(m3.codice_esame || ';', m2.codice_esame)),'')::character varying 
		       end as codMatrice,
		       
		       null::character varying as codAnalita, 
		       --COALESCE(NULLIF(trim(a.codice_esame),''),NULLIF(trim(a.nome),''))::character varying as codAnalita, --codAnalita
		       
		       --null::character varying as codQuesDiagn, 
		       --COALESCE(NULLIF(trim(qds.codice_esame),''),NULLIF(trim(qds.description),''))::character varying as codQuesDiagn, --codQuesDiagn
		       COALESCE(trim(qds.codice_esame),'')::character varying as codQuesDiagn,
		       t.assigned_date as data_prelievo,--'2018-05-27'::timestamp without time zone as data_prelievo, 
		       t.location as numero_verbale,--'864833'::character varying as numero_verbale,
		       t.assigned_date as data_verbale, --data_verbale
		       case when _stato = 5 then 
				'RISULTATO RICEVUTO'::text  --stato della preaccettazione: risultato ricevuto sta ricevuto esito esame inviato da sigla a gisa
			    else 
				'COMPLETO'::text  --stato della preaccettazione: completo sta per associato al campione
			    end as stato_preaccettazione
	
		from ricerche_anagrafiche_old_materializzata ram 
			join preaccettazione.associazione_preaccettazione_entita ap
				on concat(ram.riferimento_id, ram.riferimento_id_nome, ram.riferimento_id_nome_tab, ram.id_linea, ram.tipologia_operatore) = 
				concat(ap.lda_riferimento_id, ap.lda_riferimento_id_nome, ap.lda_riferimento_id_nome_tab, ap.lda_id_linea, ap.tipologia_operatore)
			join preaccettazione.stati_preaccettazione sp on sp.id = ap.id_stati
			join preaccettazione.codici_preaccettazione cp on cp.id = sp.id_preaccettazione
			--verbale
			join ticket t on (t.ticketid = ap.riferimento_entita::integer and ap.tipo_entita ilike 'C')
			--matrice
			left join matrici_campioni mc on (mc.id_campione = ap.riferimento_entita::integer and ap.tipo_entita ilike 'C')
			left join matrici m on (mc.id_matrice = m.matrice_id)
			left join matrici m2 on (m2.matrice_id = m.id_padre)
			left join matrici m3 on (m3.matrice_id = m2.id_padre)
			--analita
			left join analiti_campioni ac on (ac.id_campione = ap.riferimento_entita::integer and ap.tipo_entita ilike 'C')
			left join analiti a on (a.analiti_id = ac.analiti_id)
			--quesito diagnostico
			left join quesiti_diagnostici_sigla qds on qds.code = t.motivazione_piano_campione  
		where concat(cp.prefix, cp.anno, cp.progres) ilike trim(_codPreacc) and sp.id_stato = 2
		-- adding 15/07
		and cp.id_ente = _id_ente and cp.id_laboratorio = _id_laboratorio;
 
	END IF;
END;
$$;


ALTER FUNCTION preaccettazione.get_anagrafica(_codpreacc text, _idutente integer, _iplettura text, _id_ente integer, _id_laboratorio integer) OWNER TO postgres;

--
-- TOC entry 927 (class 1255 OID 16650)
-- Name: get_anagraficasigla(text, integer, text); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.get_anagraficasigla(_codpreacc text, _idutente integer, _ipletturasigla text) RETURNS TABLE(norma text, ragione_sociale character varying, partita_iva text, nominativo_rappresentante text, codice_fiscale_rappresentante character varying, asl_rif integer, asl character varying, indirizzo character varying, comune character varying, provincia_stab character varying, n_linea character varying, attivita text, data_ultima_mod timestamp without time zone, data_conferma timestamp without time zone, codice_preaccettazione text, codmatrice character varying, codanalita character varying, codquesdiagn character varying, data_prelievo timestamp without time zone, numero_verbale character varying, data_verbale timestamp without time zone, stato_preaccettazione text)
    LANGUAGE plpgsql
    AS $$
DECLARE

	id_preacc integer;
	_stato integer;
	
BEGIN

	select id into id_preacc from preaccettazione.codici_preaccettazione
		where concat(prefix,anno,progres) ilike trim(_codpreacc);
	
	select id_stato into _stato from preaccettazione.stati_preaccettazione 
		where id_preaccettazione = id_preacc order by id_stato desc limit 1;

	IF _stato = 1 THEN 

		perform preaccettazione.lettura_da_sigla(_codpreacc,_idutente,_ipletturasigla); 
		
		return query
		select distinct
		       ram.norma, --text
		       trim(regexp_replace(ram.ragione_sociale, '\s+', ' ', 'g'))::character varying(79) as ragione_sociale,
		       --ram.ragione_sociale, --character varying(300)
		       ram.partita_iva::text, --bpchar
		       ram.nominativo_rappresentante, --text
		       ram.codice_fiscale_rappresentante, --character varying
		       ram.asl_rif, --integer
		       ram.asl, --character varying(300)
		       trim(regexp_replace(ram.indirizzo, '\s+', ' ', 'g'))::character varying(49) as indirizzo, --character varying
		       ram.comune, --character varying
		       ram.provincia_stab, --character varying
		       ram.n_linea, --character varying
		       ram.attivita, --text
		       sp.modified, --timestamp without time zone
		       sp.entered, --timestamp without time zone
		       concat(cp.prefix, cp.anno, cp.progres) as codPreacc, --text
		       null::character varying as codMatrice, --cp.matrice_campione::character varying as codMatrice, --codMatrice
		       null::character varying as codAnalita, --codAnalita
		       null::character varying as codQuesDiagn, --cp.quesito_diagnostico::character varying as codQuesDiagn, --null::character varying as codQuesDiagn, --codQuesDiagn
		       null::timestamp without time zone as data_prelievo,--'2018-05-27'::timestamp without time zone as data_prelievo, 
		       null::character varying as numero_verbale,--'864833'::character varying as numero_verbale,
		       null::timestamp without time zone as data_verbale, --data_verbale
		       'Incompleto: non associato al campione'::text as stato_preaccettazione --stato della preaccettazione: completo sta per associato al campione
	
		from ricerche_anagrafiche_old_materializzata ram 
			join preaccettazione.associazione_preaccettazione_entita ap
				on concat(ram.riferimento_id, ram.riferimento_id_nome, ram.riferimento_id_nome_tab, ram.id_linea, ram.tipologia_operatore) = 
				concat(ap.lda_riferimento_id, ap.lda_riferimento_id_nome, ap.lda_riferimento_id_nome_tab, ap.lda_id_linea, ap.tipologia_operatore)
			join preaccettazione.stati_preaccettazione sp on sp.id = ap.id_stati
			join preaccettazione.codici_preaccettazione cp on cp.id = sp.id_preaccettazione
		where concat(cp.prefix, cp.anno, cp.progres) ilike trim(_codPreacc) and sp.id_stato = 1;
 
	END IF;

	--se la preaccettazione del campione è completa
	IF _stato = 2 or _stato = 3 or _stato = 5 THEN

		perform preaccettazione.lettura_da_sigla(_codpreacc,_idutente,_ipletturasigla); 

		return query
		select distinct
		       ram.norma, --text
		       trim(regexp_replace(ram.ragione_sociale, '\s+', ' ', 'g'))::character varying(79) as ragione_sociale,
		       --ram.ragione_sociale, --character varying(300)
		       ram.partita_iva::text, --bpchar
		       ram.nominativo_rappresentante, --text
		       ram.codice_fiscale_rappresentante, --character varying
		       ram.asl_rif, --integer
		       ram.asl, --character varying(300)
		       trim(regexp_replace(ram.indirizzo, '\s+', ' ', 'g'))::character varying(49) as indirizzo, --character varying
		       ram.comune, --character varying
		       ram.provincia_stab, --character varying
		       ram.n_linea, --character varying
		       ram.attivita, --text
		       sp.modified, --timestamp without time zone
		       sp.entered, --timestamp without time zone
		       concat(cp.prefix, cp.anno, cp.progres) as codPreacc, --text
		       --null::character varying as codMatrice, 
		       --COALESCE(NULLIF(trim(m.codice_esame),''),NULLIF(trim(m.nome),''))::character varying as codMatrice, --codMatrice
		       --COALESCE(trim(m.codice_esame),'')::character varying as codMatrice,
		       CASE WHEN (length(trim(coalesce(m3.codice_esame,''))) = 0) THEN
				 COALESCE(trim(concat(m2.codice_esame || ';', m.codice_esame)),'')::character varying
			    ELSE 
				COALESCE(trim(concat(m3.codice_esame || ';', m2.codice_esame)),'')::character varying 
		       end as codMatrice,
		       
		       null::character varying as codAnalita, 
		       --COALESCE(NULLIF(trim(a.codice_esame),''),NULLIF(trim(a.nome),''))::character varying as codAnalita, --codAnalita
		       
		       --null::character varying as codQuesDiagn, 
		       --COALESCE(NULLIF(trim(qds.codice_esame),''),NULLIF(trim(qds.description),''))::character varying as codQuesDiagn, --codQuesDiagn
		       COALESCE(trim(qds.codice_esame),'')::character varying as codQuesDiagn,
		       t.assigned_date as data_prelievo,--'2018-05-27'::timestamp without time zone as data_prelievo, 
		       t.location as numero_verbale,--'864833'::character varying as numero_verbale,
		       t.assigned_date as data_verbale, --data_verbale
		       case when _stato = 5 then 
				'RISULTATO RICEVUTO'::text  --stato della preaccettazione: risultato ricevuto sta ricevuto esito esame inviato da sigla a gisa
			    else 
				'COMPLETO'::text  --stato della preaccettazione: completo sta per associato al campione
			    end as stato_preaccettazione
	
		from ricerche_anagrafiche_old_materializzata ram 
			join preaccettazione.associazione_preaccettazione_entita ap
				on concat(ram.riferimento_id, ram.riferimento_id_nome, ram.riferimento_id_nome_tab, ram.id_linea, ram.tipologia_operatore) = 
				concat(ap.lda_riferimento_id, ap.lda_riferimento_id_nome, ap.lda_riferimento_id_nome_tab, ap.lda_id_linea, ap.tipologia_operatore)
			join preaccettazione.stati_preaccettazione sp on sp.id = ap.id_stati
			join preaccettazione.codici_preaccettazione cp on cp.id = sp.id_preaccettazione
			--verbale
			join ticket t on (t.ticketid = ap.riferimento_entita::integer and ap.tipo_entita ilike 'C')
			--matrice
			left join matrici_campioni mc on (mc.id_campione = ap.riferimento_entita::integer and ap.tipo_entita ilike 'C')
			left join matrici m on (mc.id_matrice = m.matrice_id)
			left join matrici m2 on (m2.matrice_id = m.id_padre)
			left join matrici m3 on (m3.matrice_id = m2.id_padre)
			--analita
			left join analiti_campioni ac on (ac.id_campione = ap.riferimento_entita::integer and ap.tipo_entita ilike 'C')
			left join analiti a on (a.analiti_id = ac.analiti_id)
			--quesito diagnostico
			left join quesiti_diagnostici_sigla qds on qds.code = t.motivazione_piano_campione  
		where concat(cp.prefix, cp.anno, cp.progres) ilike trim(_codPreacc) and sp.id_stato = 2;
 
	END IF;
END;
$$;


ALTER FUNCTION preaccettazione.get_anagraficasigla(_codpreacc text, _idutente integer, _ipletturasigla text) OWNER TO postgres;

--
-- TOC entry 928 (class 1255 OID 16652)
-- Name: get_codice_preaccettazione(integer, text, text); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.get_codice_preaccettazione(_idutente integer, _ip_chiamante text DEFAULT NULL::text, _user_agent_chiamante text DEFAULT NULL::text) RETURNS TABLE(_id integer, _prefix character varying, _anno character varying, _progres character varying)
    LANGUAGE plpgsql
    AS $$
DECLARE

	progressivo integer;
	id_preacc integer;

BEGIN	

	select coalesce(max(progres::integer),0) into progressivo from preaccettazione.codici_preaccettazione where anno ilike to_char(now(), 'YYYY');
	progressivo := progressivo + 1;
	
	insert into preaccettazione.codici_preaccettazione(prefix,anno,progres,entered,enteredby)
		values ( 'g2s', 
			 to_char(now(), 'YYYY'), 
			 to_char(progressivo, 'fm000000'),
			 now(),  
			 _idUtente) returning id into id_preacc;


	insert into preaccettazione.stati_preaccettazione(id_preaccettazione,id_stato,entered, enteredby, ip_chiamante, user_agent_chiamante)
		values (id_preacc,
			0,
			now(),  
			_idUtente,
			_ip_chiamante,
			_user_agent_chiamante);
	return query
	select id, prefix, anno, progres from preaccettazione.codici_preaccettazione where id = id_preacc;
	
END;
$$;


ALTER FUNCTION preaccettazione.get_codice_preaccettazione(_idutente integer, _ip_chiamante text, _user_agent_chiamante text) OWNER TO postgres;

--
-- TOC entry 929 (class 1255 OID 16653)
-- Name: get_codice_preaccettazione(integer, integer, integer, text, text); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.get_codice_preaccettazione(_idutente integer, _ente integer DEFAULT '-1'::integer, _laboratorio integer DEFAULT '-1'::integer, _ip_chiamante text DEFAULT NULL::text, _user_agent_chiamante text DEFAULT NULL::text) RETURNS TABLE(_id integer, _prefix character varying, _anno character varying, _progres character varying)
    LANGUAGE plpgsql
    AS $$
DECLARE

	progressivo integer;
	id_preacc integer;
	codice_ente text;
	codice_laboratorio text;
BEGIN	

	codice_ente := (select short_description from preaccettazione.lookup_ente where code = _ente);
	codice_laboratorio := (select short_description from lookup_destinazione_campione where code = _laboratorio);

	select coalesce(max(progres::integer),0) into progressivo from preaccettazione.codici_preaccettazione where anno ilike to_char(now(), 'YYYY');
	progressivo := progressivo + 1;
	
	insert into preaccettazione.codici_preaccettazione(prefix,anno,progres,entered,enteredby, id_ente, id_laboratorio)
		values ( concat(codice_ente,'2',codice_laboratorio), 
			 to_char(now(), 'YYYY'), 
			 to_char(progressivo, 'fm000000'),
			 now(),  
			 _idUtente,
			 _ente,
			 _laboratorio) returning id into id_preacc;


	insert into preaccettazione.stati_preaccettazione(id_preaccettazione,id_stato,entered, enteredby, ip_chiamante, user_agent_chiamante)
		values (id_preacc,
			0,
			now(),  
			_idUtente,
			_ip_chiamante,
			_user_agent_chiamante);
	return query
	select id, prefix, anno, progres from preaccettazione.codici_preaccettazione where id = id_preacc;
	
END;
$$;


ALTER FUNCTION preaccettazione.get_codice_preaccettazione(_idutente integer, _ente integer, _laboratorio integer, _ip_chiamante text, _user_agent_chiamante text) OWNER TO postgres;

--
-- TOC entry 930 (class 1255 OID 16654)
-- Name: get_codice_preaccettazione_da_campione(character varying); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.get_codice_preaccettazione_da_campione(_id_campione character varying) RETURNS TABLE(codice_preaccettazione text)
    LANGUAGE plpgsql
    AS $$
DECLARE

BEGIN
	return query
	select concat(cp.prefix,cp.anno,cp.progres) from preaccettazione.stati_preaccettazione sp 
	      join preaccettazione.associazione_preaccettazione_entita ape on sp.id = ape.id_stati
	      join preaccettazione.codici_preaccettazione cp on cp.id = sp.id_preaccettazione
	      where ape.riferimento_entita like _id_campione and ape.tipo_entita like 'C';
	
END;
$$;


ALTER FUNCTION preaccettazione.get_codice_preaccettazione_da_campione(_id_campione character varying) OWNER TO postgres;

--
-- TOC entry 931 (class 1255 OID 16655)
-- Name: get_codici_preaccettazione_servizio_batch(text); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.get_codici_preaccettazione_servizio_batch(_anno text) RETURNS TABLE(codice_preaccettazione text)
    LANGUAGE plpgsql
    AS $$
DECLARE

BEGIN
	
	return query
	select concat(us.prefix, us.anno, us.progres) as codice_preaccettazione
	--, t.note_esito_esame, t.ticketid, us.*, ape.* 
	from preaccettazione.vw_ultimo_stato us 
		join preaccettazione.stati_preaccettazione sp on us.id_preaccettazione = sp.id_preaccettazione and sp.id_stato = 2
		join preaccettazione.associazione_preaccettazione_entita ape on ape.id_stati = sp.id 
		join ticket t on ape.riferimento_entita::integer = t.ticketid
		where us.id_stato = 3 and us.anno ilike trim(_anno)
		and length(coalesce(trim(t.note_esito_esame),'')) = 0 order by us.entered asc limit 90; 
 
END;
$$;


ALTER FUNCTION preaccettazione.get_codici_preaccettazione_servizio_batch(_anno text) OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- TOC entry 234 (class 1259 OID 16656)
-- Name: lookup_destinazione_campione; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_destinazione_campione (
    code integer NOT NULL,
    description character varying(150) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true,
    short_description character varying
);


ALTER TABLE public.lookup_destinazione_campione OWNER TO postgres;

--
-- TOC entry 932 (class 1255 OID 16664)
-- Name: get_elenco_laboratori_da_ente(integer); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.get_elenco_laboratori_da_ente(_id_ente integer) RETURNS SETOF public.lookup_destinazione_campione
    LANGUAGE plpgsql
    AS $$

BEGIN	
	return query 
	-- filtro solo i laboratori codificati
	select * from lookup_destinazione_campione where short_description is not null;
	-- l'input andrÃ  utilizzato quando si configura la info nel sistema
	
END;
$$;


ALTER FUNCTION preaccettazione.get_elenco_laboratori_da_ente(_id_ente integer) OWNER TO postgres;

--
-- TOC entry 933 (class 1255 OID 16665)
-- Name: get_elenco_preaccettazioni(integer); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.get_elenco_preaccettazioni(_idutente integer) RETURNS TABLE(codice_preaccettazione text, data_conferma text, ragione_sociale text, linea_attivita text, numero_registrazione_stabilimento text)
    LANGUAGE plpgsql
    AS $$
DECLARE

BEGIN

	return query
	select distinct tab.* from 
	(select concat(t.prefix,t.anno,t.progres) as codice_preaccettazione,
	       to_char(t.entered, 'YYYY-MM-DD  HH24:MI:SS') as data_conferma,
	       ram.ragione_sociale::text as ragione_sociale,
	       ram.attivita::text as linea_attivita,
	       COALESCE(NULLIF(trim(ram.n_reg),''),NULLIF(trim(ram.num_riconoscimento),''))::text as numero_registrazione_stabilimento
	from ricerche_anagrafiche_old_materializzata ram
	join preaccettazione.vw_ultimo_stato t 
			on concat(ram.riferimento_id, ram.riferimento_id_nome, ram.riferimento_id_nome_tab, ram.id_linea) = 
			   concat(t.lda_riferimento_id, t.lda_riferimento_id_nome, t.lda_riferimento_id_nome_tab, t.lda_id_linea)
	  where t.id_stato = 1 and t.enteredby = _idutente order by t.entered desc limit 10) tab order by tab.data_conferma desc;
 	
END;
$$;


ALTER FUNCTION preaccettazione.get_elenco_preaccettazioni(_idutente integer) OWNER TO postgres;

--
-- TOC entry 934 (class 1255 OID 16666)
-- Name: get_elenco_preaccettazioni(integer, integer); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.get_elenco_preaccettazioni(_id_ente integer, _id_laboratorio integer) RETURNS TABLE(codice_preaccettazione text, stato text, data_operazione text)
    LANGUAGE plpgsql
    AS $$
DECLARE
	codifica_laboratorio text;
BEGIN

	if _id_laboratorio = 1 then  -- ARPAC
		codifica_laboratorio := 'G2A';
	else 
		codifica_laboratorio := 'G2S';
	end if;
	
	return query
	select concat(p.prefix,p.anno,p.progres) as codice_preaccettazione, 
		lsp.descrizione as stato, 
		to_char(p.entered , 'YYYY-MM-DD  HH24:MI:SS') as data_operazione		
	from preaccettazione.vw_ultimo_stato p join
		preaccettazione.lookup_stati_pa lsp on p.id_stato = lsp.id
		where p.id_stato > 0 
		and prefix::text = codifica_laboratorio
		order by p.entered desc;
 	
END;
$$;


ALTER FUNCTION preaccettazione.get_elenco_preaccettazioni(_id_ente integer, _id_laboratorio integer) OWNER TO postgres;

--
-- TOC entry 935 (class 1255 OID 16667)
-- Name: get_elenco_preaccettazioni_da_linea_attivita(text, integer, integer); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.get_elenco_preaccettazioni_da_linea_attivita(_identificativo_linea text, _id_ente integer, _id_laboratorio integer) RETURNS TABLE(codice_preaccettazione text, data_conferma text, ragione_sociale text, userid integer, username character varying, desc_quesito text, desc_matrice text, id_quesito text, id_matrice text, ente text, laboratorio text)
    LANGUAGE plpgsql
    AS $$
DECLARE

BEGIN

	return query
	select distinct concat(t.prefix,t.anno,t.progres) as codice_preaccettazione,
	       to_char(t.entered, 'YYYY-MM-DD  HH24:MI:SS') as data_conferma,
	       ram.ragione_sociale::text as ragione_sociale,
	       t.enteredby,
	       a.username,
	       cp.quesito_diagnostico::text as desc_quesito,
	       cp.matrice_campione::text as desc_matrice,
	       cp.id_quesito::text as id_quesito,
	       cp.id_matrice::text as id_matrice,
	       le.description::text as ente,
	       ll.description::text as laboratorio
	 from ricerche_anagrafiche_old_materializzata ram
		join preaccettazione.vw_ultimo_stato t 
			on concat(ram.riferimento_id, ram.riferimento_id_nome, ram.riferimento_id_nome_tab, ram.id_linea) = 
			   concat(t.lda_riferimento_id, t.lda_riferimento_id_nome, t.lda_riferimento_id_nome_tab, t.lda_id_linea)
		join access a on t.enteredby = a.user_id
		join preaccettazione.codici_preaccettazione cp on cp.id = t.id_preaccettazione
		join lookup_destinazione_campione ll on ll.code = cp.id_laboratorio and ll.enabled
		join preaccettazione.lookup_ente le on le.code = cp.id_ente and le.enabled
	   where concat(t.lda_riferimento_id,t.lda_riferimento_id_nome,t.lda_riferimento_id_nome_tab,t.lda_id_linea,t.tipologia_operatore) like _identificativo_linea 
		 and t.id_stato = 1 and cp.id_ente = _id_ente and cp.id_laboratorio = _id_laboratorio 
		 order by data_conferma desc limit 10;
 
	
END;
$$;


ALTER FUNCTION preaccettazione.get_elenco_preaccettazioni_da_linea_attivita(_identificativo_linea text, _id_ente integer, _id_laboratorio integer) OWNER TO postgres;

--
-- TOC entry 936 (class 1255 OID 16668)
-- Name: get_elenco_preaccettazioni_per_sigla(); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.get_elenco_preaccettazioni_per_sigla() RETURNS TABLE(codice_preaccettazione text, stato text, data_operazione text)
    LANGUAGE plpgsql
    AS $$
DECLARE

BEGIN

	return query
	select concat(p.prefix,p.anno,p.progres) as codice_preaccettazione, 
		lsp.descrizione as stato, 
		to_char(p.entered , 'YYYY-MM-DD  HH24:MI:SS') as data_operazione		
	from preaccettazione.vw_ultimo_stato p join
		preaccettazione.lookup_stati_pa lsp on p.id_stato = lsp.id
		where p.id_stato > 0 order by p.entered desc;
 	
END;
$$;


ALTER FUNCTION preaccettazione.get_elenco_preaccettazioni_per_sigla() OWNER TO postgres;

--
-- TOC entry 937 (class 1255 OID 16669)
-- Name: get_id_cmp_da_codice_preaccettazione(text); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.get_id_cmp_da_codice_preaccettazione(_codice_preaccettazione text) RETURNS TABLE(id_cmp text)
    LANGUAGE plpgsql
    AS $$
DECLARE

BEGIN
	return query
	select ape.riferimento_entita::text from preaccettazione.stati_preaccettazione sp 
	      join preaccettazione.associazione_preaccettazione_entita ape on sp.id = ape.id_stati
	      join preaccettazione.codici_preaccettazione cp on cp.id = sp.id_preaccettazione
	      where concat(cp.prefix,cp.anno,cp.progres) ilike trim (_codice_preaccettazione) and ape.tipo_entita like 'C';
	
END;
$$;


ALTER FUNCTION preaccettazione.get_id_cmp_da_codice_preaccettazione(_codice_preaccettazione text) OWNER TO postgres;

--
-- TOC entry 938 (class 1255 OID 16670)
-- Name: get_linee_da_stabilimento_gisa(integer, text, text); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.get_linee_da_stabilimento_gisa(_riferimento_id integer, _riferimento_id_nome text, _riferimento_id_nome_tab text) RETURNS TABLE(riferimento_id integer, riferimento_id_nome text, riferimento_id_nome_tab text, id_linea integer, tipologia_operatore integer, n_linea text, attivita text)
    LANGUAGE plpgsql
    AS $$
DECLARE

BEGIN

	return query
	select distinct ram.riferimento_id, 
	       ram.riferimento_id_nome, 
               ram.riferimento_id_nome_tab, 
               ram.id_linea, 
               ram.tipologia_operatore,
               ram.n_linea,
               ram.attivita
            from ricerche_anagrafiche_old_materializzata ram

            where ram.riferimento_id = _riferimento_id and
		  ram.riferimento_id_nome = _riferimento_id_nome and
                  ram.riferimento_id_nome_tab = _riferimento_id_nome_tab
                  and  coalesce(ram.id_attivita, -1) <> -999 and ram.attivita is not null and ram.attivita not ilike '%N.D%'; 

                                         		
END;
$$;


ALTER FUNCTION preaccettazione.get_linee_da_stabilimento_gisa(_riferimento_id integer, _riferimento_id_nome text, _riferimento_id_nome_tab text) OWNER TO postgres;

--
-- TOC entry 939 (class 1255 OID 16671)
-- Name: get_matrici_campione(); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.get_matrici_campione() RETURNS TABLE(matrice_id integer, desc_matrice text, code text)
    LANGUAGE plpgsql
    AS $$
DECLARE

BEGIN

	return query
	select tab.matrice_id,
	       concat(tab.livello_1, ' -> ', tab.livello_2, ' -> ' || tab.livello_3) description,  
	       tab.codice_esame code 
	from 
	(select m1.nome as livello_1, m2.nome as livello_2, null as livello_3, m2.matrice_id as matrice_id, m2.codice_esame as codice_esame
		from matrici m1 join matrici m2 on m1.matrice_id = m2.id_padre and m1.livello = 0 and m2.livello = 1
			where m1.enabled and m2.enabled and m1.nuova_gestione and m2.nuova_gestione
	union
	select m1.nome as livello_1, m2.nome as livello_2, m3.nome as livello_3, m3.matrice_id as matrice_id, m3.codice_esame as codice_esame
		from matrici m1 join matrici m2 on m1.matrice_id = m2.id_padre and m1.livello = 0 and m2.livello = 1
				join matrici m3 on m2.matrice_id = m3.id_padre 
		where m1.enabled and m2.enabled and m3.enabled and m1.nuova_gestione and m2.nuova_gestione and m3.nuova_gestione
	) tab order by tab.livello_1, tab.livello_2, tab.livello_3;
                                         		
END;
$$;


ALTER FUNCTION preaccettazione.get_matrici_campione() OWNER TO postgres;

--
-- TOC entry 940 (class 1255 OID 16672)
-- Name: get_quesiti_diagnostici(); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.get_quesiti_diagnostici() RETURNS TABLE(code integer, description character varying, codice_esame text, short_description text)
    LANGUAGE plpgsql
    AS $$
DECLARE

BEGIN

	return query
	select tab.code, 
	       tab.description, 
	       tab.codice_esame, 
	       tab.short_description  
	   from(
	select qds.description, ordina_stringhe_alfanumeriche(qds.description, 3), qds.code, qds.short_description, qds.codice_esame 
		from quesiti_diagnostici_sigla qds order by ordina_stringhe_alfanumeriche(qds.description, 3)) tab;

                                         		
END;
$$;


ALTER FUNCTION preaccettazione.get_quesiti_diagnostici() OWNER TO postgres;

--
-- TOC entry 941 (class 1255 OID 16673)
-- Name: lettura_da_laboratorio(text, integer, text); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.lettura_da_laboratorio(_codpreacc text, _idutente integer, _iplettura text) RETURNS TABLE(_idout integer)
    LANGUAGE plpgsql
    AS $$
DECLARE
	id_preacc integer;
	_stato integer;
	_id integer;
BEGIN

	select id into id_preacc from preaccettazione.codici_preaccettazione where trim(concat(prefix,anno,progres)) ilike trim(_codpreacc);

	select id, id_stato into _id, _stato from preaccettazione.stati_preaccettazione 
		where id_preaccettazione = id_preacc order by id_stato desc limit 1;

	IF _stato = 1 THEN
		return query
		update preaccettazione.stati_preaccettazione 
			set letto = now(),
			    ip_lettura = _iplettura
			where id = _id returning id;
		
	ELSIF _stato = 2 THEN
	
		return query
		insert into preaccettazione.stati_preaccettazione (id_preaccettazione, id_stato, entered, enteredby, letto, ip_lettura)
			values (id_preacc, 3, now(), _idutente, now(), _iplettura) returning id;
			
	ELSIF _stato = 3 THEN
	
		return query
		update preaccettazione.stati_preaccettazione 
			set modified = now(),
			    modifiedby = _idutente,
			    letto = now(),
			    ip_lettura = _iplettura
		        where id_preaccettazione = id_preacc and _stato = 3 and id_stato = 3 returning id;
		        
	ELSIF _stato = 5 THEN
	
		return query
		update preaccettazione.stati_preaccettazione 
			set modified = now(),
			    modifiedby = _idutente,
			    letto = now(),
			    ip_lettura = _iplettura
		        where id_preaccettazione = id_preacc and _stato = 5 and id_stato = 5 returning id;
	
	END IF;
END;
$$;


ALTER FUNCTION preaccettazione.lettura_da_laboratorio(_codpreacc text, _idutente integer, _iplettura text) OWNER TO postgres;

--
-- TOC entry 942 (class 1255 OID 16674)
-- Name: report_interno_codici_preaccettazione(); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.report_interno_codici_preaccettazione() RETURNS TABLE(report text)
    LANGUAGE plpgsql
    AS $$
DECLARE

	
BEGIN
	return query
	select (concat('[', string_agg(row_to_json(tab)::text, ','), ']')::json)::text as report from(
	
	select asl::text as desc_asl,
	       coalesce(preac_generati,0)::text as associati_a_osa,
	       coalesce(preac_ass_campione,0)::text as associati_a_campione,
	       coalesce(preac_letti_da_laboratorio_campione,0)::text as letti_da_laboratorio_campione,
	       coalesce(preac_letti_da_laboratorio_solo_osa,0)::text as letti_da_laboratorio_solo_osa,
	       (coalesce(preac_ass_campione,0) - coalesce(preac_letti_da_laboratorio_campione,0))::text as associati_non_letti,
	       (coalesce(preac_generati,0) - coalesce(preac_ass_campione,0) - coalesce(preac_letti_da_laboratorio_solo_osa,0))::text as non_associati_non_letti
	from crosstab (
		'select desc_asl,
			id_asl,
			numero_preaccettazioni 
		    from preaccettazione.temp_report_interno_codici_preaccettazione() order by id_asl desc, tipo_report'
	) as ct(ASL text, preac_generati integer, preac_ass_campione integer, preac_letti_da_laboratorio_campione integer, preac_letti_da_laboratorio_solo_osa integer) order by asl
	) tab;

END;
$$;


ALTER FUNCTION preaccettazione.report_interno_codici_preaccettazione() OWNER TO postgres;

--
-- TOC entry 943 (class 1255 OID 16675)
-- Name: search_preaccettazione(public.hstore); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.search_preaccettazione(filtri public.hstore) RETURNS SETOF json
    LANGUAGE plpgsql
    AS $$
DECLARE

	
BEGIN

	return query
	select concat('[', string_agg(row_to_json(tab2)::text, ','), ']')::json as lista_preaccettazioni from
	(select * from
		(select distinct
		       ram.ragione_sociale::text, --character varying(300)
		       ram.partita_iva::text, --bpchar
		       coalesce(nullif(trim(ram.n_reg),''), ram.num_riconoscimento)::text num_registrazione,
		       ram.asl_rif::text, --integer
		       ram.asl::text, --character varying(300)
		       ram.comune::text, --character varying
		       ram.attivita::text, --text
		       concat(cp.prefix, cp.anno, cp.progres)::text as codPreacc, --text
		       case when sp.id_stato = 1 then 'Incompleto: non associato al campione'::text
			    when sp.id_stato = 2 then 'Completo'::text
			    end 
			    as stato_preaccettazione, --stato della preaccettazione: completo sta per associato al campione
		       concat(c.namelast, ' ', c.namefirst)::text as utente,
		       t.identificativo::text as codice_campione,
		       t.id_controllo_ufficiale::text as id_cu,
		       -- new 
		       t.ticketid::text as id_campione,
		       t.location::text as numero_verbale,
		       to_char(cp.entered,'DD-MM-YYYY')::text as data_generazione,
		       sp.ip_lettura as ip_lettura,
		       to_char(sp.letto,'DD-MM-YYYY HH24:MI:SS')::text as data_lettura
			
		from preaccettazione.associazione_preaccettazione_entita ap
			join ricerche_anagrafiche_old_materializzata ram 
				on concat(ram.riferimento_id, ram.riferimento_id_nome, ram.riferimento_id_nome_tab, ram.id_linea, ram.tipologia_operatore) = 
				concat(ap.lda_riferimento_id, ap.lda_riferimento_id_nome, ap.lda_riferimento_id_nome_tab, ap.lda_id_linea, ap.tipologia_operatore)
			join preaccettazione.stati_preaccettazione sp on sp.id = ap.id_stati
			join preaccettazione.vw_ultimo_stato us on us.cod_stato = sp.id
			left join access_ ut on us.enteredby = ut.user_id
			left join contact c on ut.contact_id = c.contact_id and trim(concat(c.namelast, ' ', c.namefirst)::text) not ilike ''
			join preaccettazione.codici_preaccettazione cp on cp.id = sp.id_preaccettazione
			--verbale
			left join ticket t on (ap.tipo_entita ilike 'C' and t.ticketid::character varying = ap.riferimento_entita)
			  
		where us.id_stato in (1,2)
			and ( (filtri -> 'codice_preaccettazione' not ilike '' and concat(cp.prefix, cp.anno, cp.progres)::text ilike trim(filtri -> 'codice_preaccettazione')) or (filtri -> 'codice_preaccettazione' ilike '') ) 
			and ( ((filtri -> 'asl')::integer > 0 and ram.asl_rif = (filtri -> 'asl')::integer) or ((filtri -> 'asl')::integer = -1) ) 
			and ( (filtri -> 'osa' not ilike '' and trim(ram.ragione_sociale) ilike concat('%',filtri -> 'osa','%')) or (filtri -> 'osa' ilike '') )
			and ( (filtri -> 'partita_iva' not ilike '' and trim(ram.partita_iva::text) ilike filtri -> 'partita_iva') or (filtri -> 'partita_iva' ilike '') )
			and ( (filtri -> 'data_generazione' not ilike '' and to_char(cp.entered, 'DD-MM-YYYY') ilike trim(filtri -> 'data_generazione')) or (filtri -> 'data_generazione' ilike '') )
			and ( (filtri -> 'utente' not ilike '' 
				and (concat(c.namelast,' ',c.namefirst) ilike concat('%',filtri -> 'utente','%')  
					or concat(c.namefirst,' ',c.namelast) ilike concat('%',filtri -> 'utente','%')) 
			       ) or (filtri -> 'utente' ilike ''))

			--new
			and ( ((filtri -> 'laboratorio')::integer > 0 and cp.id_laboratorio = (filtri -> 'laboratorio')::integer) or ((filtri -> 'laboratorio')::integer = -1) ) 


		UNION 
		
		select distinct
			ra.ragione_sociale::text, --character varying(300)
			ra.partita_iva::text, --bpchar
			coalesce(nullif(trim(ra.n_reg),''), ra.num_riconoscimento)::text num_registrazione,
			ra.asl_rif::text, --integer
			ra.asl::text, --character varying(300)
			ra.comune::text, --character varying
			ra.attivita::text, --text
			concat(cp.prefix, cp.anno, cp.progres)::text as codPreacc, --text
			case when us.id_stato = 5 then 
				'RISULTATO RICEVUTO'::text  --stato della preaccettazione: risultato ricevuto sta ricevuto esito esame inviato da laboratorio a gisa
			    else 
				'LETTO'::text  --stato della preaccettazione: completo sta per associato al campione
			    end as stato_preaccettazione,
			concat(c.namelast, ' ', c.namefirst)::text as utente,
			t.identificativo::text as codice_campione,
			t.id_controllo_ufficiale::text as id_cu,
			-- new 
			t.ticketid::text as id_campione,
			t.location::text as numero_verbale,
			to_char(cp.entered,'DD-MM-YYYY')::text as data_generazione,
			sp2.ip_lettura as ip_lettura,
			to_char(sp2.letto,'DD-MM-YYYY HH24:MI:SS')::text as data_lettura
			 
		from preaccettazione.associazione_preaccettazione_entita ape join 
			     preaccettazione.stati_preaccettazione sp on ape.id_stati = sp.id
			     join preaccettazione.stati_preaccettazione sp2 on sp.id_preaccettazione = sp2.id_preaccettazione
			     join preaccettazione.vw_ultimo_stato us on us.cod_stato = sp2.id
			     join preaccettazione.codici_preaccettazione cp on cp.id = sp2.id_preaccettazione
			     left join access_ ut on cp.enteredby = ut.user_id
			     left join contact c on ut.contact_id = c.contact_id and trim(concat(c.namelast, ' ', c.namefirst)::text) not ilike ''
			     join ricerche_anagrafiche_old_materializzata ra on ra.riferimento_id = ape.lda_riferimento_id 
										and ra.riferimento_id_nome = ape.lda_riferimento_id_nome 
										and ra.riferimento_id_nome_tab = ape.lda_riferimento_id_nome_tab 
										and ra.id_linea = ape.lda_id_linea 
										and ra.tipologia_operatore = ape.tipologia_operatore
			     --verbale
			     left join ticket t on (ape.tipo_entita ilike 'C' and t.ticketid::character varying = ape.riferimento_entita)
			     where ape.tipo_entita = 'C' and (us.id_stato in (3,5))
				and ( (filtri -> 'codice_preaccettazione' not ilike '' and concat(cp.prefix, cp.anno, cp.progres)::text ilike trim(filtri -> 'codice_preaccettazione')) or (filtri -> 'codice_preaccettazione' ilike '') ) 
				and ( ((filtri -> 'asl')::integer > 0 and ra.asl_rif = (filtri -> 'asl')::integer) or ((filtri -> 'asl')::integer = -1) ) 
				and ( (filtri -> 'osa' not ilike '' and trim(ra.ragione_sociale) ilike concat('%',filtri -> 'osa','%')) or (filtri -> 'osa' ilike '') )
				and ( (filtri -> 'partita_iva' not ilike '' and trim(ra.partita_iva::text) ilike filtri -> 'partita_iva') or (filtri -> 'partita_iva' ilike '') )
				and ( (filtri -> 'data_generazione' not ilike '' and to_char(cp.entered, 'DD-MM-YYYY') ilike trim(filtri -> 'data_generazione')) or (filtri -> 'data_generazione'  ilike '') )
				and ( (filtri -> 'utente' not ilike '' 
					and (concat(c.namelast,' ',c.namefirst) ilike concat('%',filtri -> 'utente','%')  
						or concat(c.namefirst,' ',c.namelast) ilike concat('%',filtri -> 'utente','%')) 
				       ) or (filtri -> 'utente' ilike ''))
				--new
				and ( ((filtri -> 'laboratorio')::integer > 0 and cp.id_laboratorio = (filtri -> 'laboratorio')::integer) or ((filtri -> 'laboratorio')::integer = -1) ) 
	       	       
			) tab1  order by tab1.data_generazione::timestamp without time zone desc limit 100
		) tab2;
 
	
END;
$$;


ALTER FUNCTION preaccettazione.search_preaccettazione(filtri public.hstore) OWNER TO postgres;

--
-- TOC entry 944 (class 1255 OID 16677)
-- Name: set_codice_preaccettazione(integer, integer, text, text, integer, integer, integer, text, text); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.set_codice_preaccettazione(_id integer, _riferimento_id integer, _riferimento_id_nome text, _riferimento_id_nome_tab text, _id_linea_materializzata integer, _tipologia_operatore integer, _userid integer, _quesito_diagnostico text DEFAULT NULL::text, _matrice_campione text DEFAULT NULL::text) RETURNS TABLE(_idout integer)
    LANGUAGE plpgsql
    AS $$
DECLARE
	_stato integer;
	id_stato_preacc integer;
BEGIN

	select id_stato into _stato from preaccettazione.stati_preaccettazione 
		where id_preaccettazione = _id order by id_stato desc limit 1;

	IF _stato = 0 THEN

		insert into preaccettazione.stati_preaccettazione(id_preaccettazione,id_stato,entered,enteredby)
			values(_id,1,now(),_userId) returning id into id_stato_preacc;

		insert into preaccettazione.associazione_preaccettazione_entita(id_stati,tipo_entita,riferimento_entita,lda_riferimento_id,lda_riferimento_id_nome,
										    lda_riferimento_id_nome_tab,lda_id_linea,tipologia_operatore,entered,enteredby)
			values(id_stato_preacc,
				'lda',
				concat(_riferimento_id,_riferimento_id_nome,_riferimento_id_nome_tab,_id_linea_materializzata,_tipologia_operatore),
				_riferimento_id,
				_riferimento_id_nome,
				_riferimento_id_nome_tab,
				_id_linea_materializzata,
				_tipologia_operatore,
				now(),
				_userId);
				
		 update preaccettazione.codici_preaccettazione 
			set quesito_diagnostico = _quesito_diagnostico,
			    matrice_campione = _matrice_campione
			where id = _id;
 
		return query
		select id from preaccettazione.codici_preaccettazione where id = _id;
	END IF;
END;
$$;


ALTER FUNCTION preaccettazione.set_codice_preaccettazione(_id integer, _riferimento_id integer, _riferimento_id_nome text, _riferimento_id_nome_tab text, _id_linea_materializzata integer, _tipologia_operatore integer, _userid integer, _quesito_diagnostico text, _matrice_campione text) OWNER TO postgres;

--
-- TOC entry 945 (class 1255 OID 16678)
-- Name: set_codice_preaccettazione(integer, integer, text, text, integer, integer, integer, text, text, integer, integer, text, text); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.set_codice_preaccettazione(_id integer, _riferimento_id integer, _riferimento_id_nome text, _riferimento_id_nome_tab text, _id_linea_materializzata integer, _tipologia_operatore integer, _userid integer, _quesito_diagnostico text DEFAULT NULL::text, _matrice_campione text DEFAULT NULL::text, _id_quesito integer DEFAULT NULL::integer, _id_matrice integer DEFAULT NULL::integer, _ip_chiamante text DEFAULT NULL::text, _user_agent_chiamante text DEFAULT NULL::text) RETURNS TABLE(_idout integer)
    LANGUAGE plpgsql
    AS $$
DECLARE
	_stato integer;
	id_stato_preacc integer;
BEGIN

	select id_stato into _stato from preaccettazione.stati_preaccettazione 
		where id_preaccettazione = _id order by id_stato desc limit 1;

	select description into _quesito_diagnostico FROM preaccettazione.get_quesiti_diagnostici() where code = _id_quesito;
	select desc_matrice into _matrice_campione from preaccettazione.get_matrici_campione() where matrice_id = _id_matrice;

	IF _stato = 0 THEN

		insert into preaccettazione.stati_preaccettazione(id_preaccettazione,id_stato,entered,enteredby,ip_chiamante,user_agent_chiamante)
			values(_id,1,now(),_userId, _ip_chiamante, _user_agent_chiamante) returning id into id_stato_preacc;

		insert into preaccettazione.associazione_preaccettazione_entita(id_stati,tipo_entita,riferimento_entita,lda_riferimento_id,lda_riferimento_id_nome,
										    lda_riferimento_id_nome_tab,lda_id_linea,tipologia_operatore,entered,enteredby)
			values(id_stato_preacc,
				'lda',
				concat(_riferimento_id,_riferimento_id_nome,_riferimento_id_nome_tab,_id_linea_materializzata,_tipologia_operatore),
				_riferimento_id,
				_riferimento_id_nome,
				_riferimento_id_nome_tab,
				_id_linea_materializzata,
				_tipologia_operatore,
				now(),
				_userId);
				
		 update preaccettazione.codici_preaccettazione 
			set quesito_diagnostico = _quesito_diagnostico,
			    matrice_campione = _matrice_campione,
			    id_quesito = _id_quesito,
			    id_matrice = _id_matrice
			where id = _id;
 
		return query
		select id from preaccettazione.codici_preaccettazione where id = _id;
	END IF;
END;
$$;


ALTER FUNCTION preaccettazione.set_codice_preaccettazione(_id integer, _riferimento_id integer, _riferimento_id_nome text, _riferimento_id_nome_tab text, _id_linea_materializzata integer, _tipologia_operatore integer, _userid integer, _quesito_diagnostico text, _matrice_campione text, _id_quesito integer, _id_matrice integer, _ip_chiamante text, _user_agent_chiamante text) OWNER TO postgres;

--
-- TOC entry 946 (class 1255 OID 16679)
-- Name: temp_report_interno_codici_preaccettazione(); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.temp_report_interno_codici_preaccettazione() RETURNS TABLE(numero_preaccettazioni integer, id_asl integer, desc_asl text, tipo_report text)
    LANGUAGE plpgsql
    AS $$
DECLARE

	
BEGIN
	return query
	select 
	    tab.count::integer as numero_preaccettazioni,
	    tab.asl_rif as id_asl,
	    tab.asl::text as desc_asl,
	    tab.tipo::text as tipo_report
	from(
	-- numero codici preaccettazione associati all osa raggruppati per asl
	select count(*), ra.asl_rif, ra.asl, 'a' as tipo 
		from preaccettazione.associazione_preaccettazione_entita ape join
			ricerche_anagrafiche_old_materializzata ra on ra.riferimento_id = ape.lda_riferimento_id 
									and ra.riferimento_id_nome = ape.lda_riferimento_id_nome 
									and ra.riferimento_id_nome_tab = ape.lda_riferimento_id_nome_tab 
									and ra.id_linea = ape.lda_id_linea 
									and ra.tipologia_operatore = ape.tipologia_operatore
		where ape.tipo_entita = 'lda' group by ra.asl_rif, ra.asl
	UNION
	-- numero codici preaccettazione associati al campione raggruppati per asl
	select count(*), ra.asl_rif, ra.asl, 'b' as tipo
		from preaccettazione.associazione_preaccettazione_entita ape join
			ricerche_anagrafiche_old_materializzata ra on ra.riferimento_id = ape.lda_riferimento_id 
									and ra.riferimento_id_nome = ape.lda_riferimento_id_nome 
									and ra.riferimento_id_nome_tab = ape.lda_riferimento_id_nome_tab 
									and ra.id_linea = ape.lda_id_linea 
									and ra.tipologia_operatore = ape.tipologia_operatore
		where ape.tipo_entita = 'C' group by ra.asl_rif, ra.asl
	UNION
	-- numero codici preaccettazione associati al campione e letti da sigla raggruppati per asl
	select count(*), ra.asl_rif, ra.asl, 'c' as tipo  
		from preaccettazione.associazione_preaccettazione_entita ape join 
		     preaccettazione.stati_preaccettazione sp on ape.id_stati = sp.id
		     join preaccettazione.stati_preaccettazione sp2 on sp.id_preaccettazione = sp2.id_preaccettazione
		     join ricerche_anagrafiche_old_materializzata ra on ra.riferimento_id = ape.lda_riferimento_id 
									and ra.riferimento_id_nome = ape.lda_riferimento_id_nome 
									and ra.riferimento_id_nome_tab = ape.lda_riferimento_id_nome_tab 
									and ra.id_linea = ape.lda_id_linea 
									and ra.tipologia_operatore = ape.tipologia_operatore
			where ape.tipo_entita = 'C' and (sp2.letto is not null or sp2.id_stato = 3)  
			group by ra.asl_rif, ra.asl
	UNION
	-- numero codici preaccettazione associati al campione e letti da sigla raggruppati per asl
	select count(*), ra.asl_rif, ra.asl, 'd' as tipo  
		from preaccettazione.associazione_preaccettazione_entita ape join 
		     preaccettazione.stati_preaccettazione sp on ape.id_stati = sp.id
		     join preaccettazione.stati_preaccettazione sp2 on sp.id_preaccettazione = sp2.id_preaccettazione
		     join ricerche_anagrafiche_old_materializzata ra on ra.riferimento_id = ape.lda_riferimento_id 
									and ra.riferimento_id_nome = ape.lda_riferimento_id_nome 
									and ra.riferimento_id_nome_tab = ape.lda_riferimento_id_nome_tab 
									and ra.id_linea = ape.lda_id_linea 
									and ra.tipologia_operatore = ape.tipologia_operatore
		     join preaccettazione.vw_ultimo_stato us on us.cod_stato = sp2.id
			where sp2.letto is not null and us.id_stato = 1 
			group by ra.asl_rif, ra.asl)tab;
	
END;
$$;


ALTER FUNCTION preaccettazione.temp_report_interno_codici_preaccettazione() OWNER TO postgres;

--
-- TOC entry 947 (class 1255 OID 16680)
-- Name: verifica_presenza_campioni_preaccettazione_su_cu(integer); Type: FUNCTION; Schema: preaccettazione; Owner: postgres
--

CREATE FUNCTION preaccettazione.verifica_presenza_campioni_preaccettazione_su_cu(_idcontrollo integer) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE

	_num_campioni integer;
	_num_campioni_con_preaccettazione integer;

	id_controllo_ufficiale integer;
	id_campione integer;
	codice_preaccettazione text;

	msg text;

BEGIN

msg := '';
_num_campioni := 0;
_num_campioni_con_preaccettazione := 0;

FOR id_controllo_ufficiale, id_campione, codice_preaccettazione IN

select 
cu.ticketid as id_controllo_ufficiale,
campione.ticketid as id_campione,
concat(cp.prefix, cp.anno, cp.progres) as codice_preaccettazione
from 
ticket cu
left join ticket campione on campione.id_controllo_ufficiale = cu.ticketid::text and campione.tipologia = 2 and campione.trashed_date is null
left join preaccettazione.associazione_preaccettazione_entita apa on apa.riferimento_entita = campione.ticketid::text and apa.tipo_entita = 'C' and apa.trashed_date is null
left join preaccettazione.stati_preaccettazione sp on sp.id = apa.id_stati and sp.trashed_date is null
left join preaccettazione.codici_preaccettazione cp on cp.id = sp.id_preaccettazione and cp.trashed_date is null
where cu.ticketid = _idcontrollo

LOOP

raise info 'verifica_presenza_campioni_preaccettazione_su_cu: id_controllo_ufficiale %', id_controllo_ufficiale;
raise info 'verifica_presenza_campioni_preaccettazione_su_cu: id_campione %', id_campione;
raise info 'verifica_presenza_campioni_preaccettazione_su_cu: codice_preaccettazione %', codice_preaccettazione;

IF id_campione > 0 THEN
_num_campioni = _num_campioni+1;
END IF;


IF codice_preaccettazione <> '' THEN
_num_campioni_con_preaccettazione = _num_campioni_con_preaccettazione+1;
END IF;

END LOOP;

raise info 'verifica_presenza_campioni_preaccettazione_su_cu: _num_campioni %', _num_campioni;
raise info 'verifica_presenza_campioni_preaccettazione_su_cu: _num_campioni_con_preaccettazione %', _num_campioni_con_preaccettazione;	

IF _num_campioni > 0 AND _num_campioni <> _num_campioni_con_preaccettazione THEN
msg := 'Attenzione. A questo controllo ufficiale sono associati campioni privi di codice preaccettazione. Per associare un codice di preaccettazione precedentemente generato dal dettaglio del punto di prelievo, aprire il dettaglio del campione e selezionare il codice di preaccettazione che si desidera associare.';
END IF;

return msg ;
	
END;
$$;


ALTER FUNCTION preaccettazione.verifica_presenza_campioni_preaccettazione_su_cu(_idcontrollo integer) OWNER TO postgres;

--
-- TOC entry 948 (class 1255 OID 16681)
-- Name: OBSimport_from_aia(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public."OBSimport_from_aia"(_id_import_aia integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$	
declare
	result integer;
	query text;
	idLog integer;

        soggetto_indirizzo_comune text;
	soggetto_indirizzo_nazione text;
	lineaattivita_1_data_inizio_attivita  text;
	toponimo_soggfis  text;
	latitudine_stab  text;
	cap_soggfis  text;
	codice_fiscale  text;
	latitudine_leg  text;
	toponimo_sede_legale  text;
	via_soggfis  text;
	autorizzazione_nota  text;
	data_nascita_rapp_leg  text;
	partita_iva  text;
	lineaattivita_1_data_fine_attivita  text;
	autorizzazione_id_aia  text;
	comune_nascita_rapp_leg  text;
	comune_estero_sede_legale  text;
	civico_stab  text;
	autorizzazione_numero  text;
	cf_resp_stab  text;
	civico_sede_legale  text;
	nome_resp_stab  text;
	nome_rapp_leg  text;
	email_impresa  text;
	longitudine_stab  text;
	cod_provincia_soggfis  text;
	responsabile_codice_fiscale text;
	id_impresa_recuperata  text;
	email_rapp_leg  text;
	cod_comune_stab  text;
	lineaattivita_1_codice_univoco_ml  text;	
	cap_leg  text;
	longitudine_leg  text;
	autorizzazione_data  text;
	lineaattivita_1_tipo_carattere_attivita  text;
	nazione_nascita_rapp_leg  text;
	sesso_rapp_leg  text;
	id_rapp_legale_recuperato  text;
	cognome_resp_stab  text;
	toponimo_stab  text;
	autorizzazione_tipo  text;
	ragione_sociale  text;
	cognome_rapp_leg  text;
	civico_soggfis  text;
	denominazione_stab  text;
	id_stabilimento  text;
	autorizzazione_burc  text;
	telefono_rapp_leg  text;
	comune_residenza_estero_soggfis  text;
	nazione_sede_legale  text;
	via_sede_legale  text;
	cod_provincia_sede_legale  text;
	lineaattivita_1_num_riconoscimento  text;
	codice_fiscale_rappresentante  text;
	cap_stab  text;
	lineaattivita_1_tipo_attivita  text;
	cod_provincia_stab  text;
	tipo_impresa  text;
	cod_comune_sede_legale  text;
	via_stab text;

BEGIN

 result := -1;
 idLog := -1;
 query := '';
 
	select 
	-1, --t1.soggetto_indirizzo_comune , --ok
	'', --t1.soggetto_indirizzo_nazione , --ok
	NULL, --t1.linea_1_data_inizio , --ok
	-1, --t1.toponimo_soggfis , --ok
	t1.coordinate_geografiche_y , --ok
	'', --t1.cap_soggfis ,--ok
	'', --t1.codice_fiscale ,--ok
	t1.coordinate_geografiche_y, --t1.latitudine_leg ,--ok
	-1, --t1.toponimo_sede_legale ,--ok
	'', --t1.via_soggfis ,--ok
	'', --t1.autorizzazione_nota ,--ok
	NULL, --t1.data_nascita_rapp_leg ,--ok
	t1.codice_fiscale ,--ok
	NULL, --t1.lineaattivita_1_data_fine_attivita ,--ok
	t1.id_aia ,--ok
	'', --t1.comune_nascita_rapp_leg ,--ok
	'', --t1.comune_estero_sede_legale ,--ok
	'', --t1.civico_stab ,--ok
	'', --t1.autorizzazione_numero ,--ok
	'', --t1.cf_resp_stab ,--ok
	'', --t1.civico_sede_legale ,--ok
	'', --t1.nome_resp_stab ,--ok
	'', --t1.nome_rapp_leg ,--ok
	'', --t1.email_impresa ,--ok
	t1.coordinate_geografiche_x ,--ok
	'', --t1.cod_provincia_soggfis ,--ok
	'', --t1.responsabile_codice_fiscale ,--ok
	-1, --t1.id_impresa_recuperata , --ok
	'', --t1.email_rapp_leg , --ok
	(select id from comuni1 where nome ilike t1.comune) , --ok
	(select codice from ml8_linee_attivita_nuove_materializzata where regexp_replace(macroarea, '\W+', '', 'g') ilike regexp_replace(t1.denominazione_categoria_impianto, '\W+', '', 'g') and regexp_replace(aggregazione, '\W+', '', 'g') ilike regexp_replace(t1.codice_ipcc_principale, '\W+', '', 'g') and regexp_replace(attivita, '\W+', '', 'g') ilike regexp_replace(t1.descrizione_att_principale, '\W+', '', 'g') and livello = 3) ,--ok
	(select case when cap <> '80100' then cap else '' end from comuni1 where nome ilike t1.comune) , --ok
	t1.coordinate_geografiche_x, --t1.longitudine_leg , --ok
	'', --t1.autorizzazione_data , --ok
	-1, --t1.lineaattivita_1_tipo_carattere_attivita , --ok
	-1, --t1.nazione_nascita_rapp_leg ,--ok
	'', --t1.sesso_rapp_leg ,--ok
	'', --t1.id_rapp_legale_recuperato ,--ok
	'', --t1.cognome_resp_stab , --ok
	-1, --t1.toponimo_stab , --ok
	(select code from lookup_autorizzazione_tipo where description ilike t1.autorizzazione), --t1.autorizzazione_tipo , --ok
	replace(replace(t1.ragione_sociale, '''', ''''''), '"', '''''') , --ok
	'', --t1.cognome_rapp_leg , --ok
	'', --t1.civico_soggfis , --ok
	'', --t1.denominazione_stab , --ok
	'', --t1.id_stabilimento , --ok
	'', --t1.autorizzazione_burc , --ok
	'', --t1.telefono_rapp_leg , --ok
	'', --t1.comune_residenza_estero_soggfis , --ok
	-1, --t1.nazione_sede_legale , --ok
	replace(replace(t1.indirizzo, '''', ''''''), '"', ''''''), --t1.via_sede_legale , --ok
	t1.pr, --t1.cod_provincia_sede_legale ,--ok
	'', --t1.lineaattivita_1_num_riconoscimento , --ok
	'', --t1.codice_fiscale_rappresentante , --ok
	(select case when cap <> '80100' then cap else '' end from comuni1 where nome ilike t1.comune) , --ok
	-1, --t1.lineaattivita_1_tipo_attivita , --ok
	t1.pr , --ok
	-1, --t1.tipo_impresa , --ok
	(select id from comuni1 where nome ilike t1.comune), --t1.cod_comune_sede_legale , --ok
	replace(replace(t1.indirizzo, '''', ''''''), '"', '''''')  --ok
	
 into 
        soggetto_indirizzo_comune,
        soggetto_indirizzo_nazione , 
	lineaattivita_1_data_inizio_attivita ,
	toponimo_soggfis ,
	latitudine_stab ,
	cap_soggfis ,
	codice_fiscale ,
	latitudine_leg ,
	toponimo_sede_legale ,
	via_soggfis ,
	autorizzazione_nota ,
	data_nascita_rapp_leg ,
	partita_iva ,
	lineaattivita_1_data_fine_attivita ,
	autorizzazione_id_aia ,
	comune_nascita_rapp_leg ,
	comune_estero_sede_legale ,
	civico_stab ,
	autorizzazione_numero ,
	cf_resp_stab ,
	civico_sede_legale ,
	nome_resp_stab ,
	nome_rapp_leg ,
	email_impresa ,
	longitudine_stab ,
	cod_provincia_soggfis,
	responsabile_codice_fiscale,
	id_impresa_recuperata ,
	email_rapp_leg ,
	cod_comune_stab ,
	lineaattivita_1_codice_univoco_ml ,	
	cap_leg ,
	longitudine_leg ,
	autorizzazione_data ,
	lineaattivita_1_tipo_carattere_attivita ,
	nazione_nascita_rapp_leg ,
	sesso_rapp_leg ,
	id_rapp_legale_recuperato ,
	cognome_resp_stab ,
	toponimo_stab ,
	autorizzazione_tipo ,
	ragione_sociale ,
	cognome_rapp_leg ,
	civico_soggfis ,
	denominazione_stab ,
	id_stabilimento ,
	autorizzazione_burc ,
	telefono_rapp_leg ,
	comune_residenza_estero_soggfis ,
	nazione_sede_legale ,
	via_sede_legale ,
	cod_provincia_sede_legale ,
	lineaattivita_1_num_riconoscimento ,
	codice_fiscale_rappresentante ,
	cap_stab ,
	lineaattivita_1_tipo_attivita ,
	cod_provincia_stab ,
	tipo_impresa ,
	cod_comune_sede_legale ,
	via_stab
 
	FROM import_aia t1 where t1.id = _id_import_aia;

raise info '[import_from_aia]';	

raise info '[import_from_aia] lineaattivita_1_codice_univoco_ml %', lineaattivita_1_codice_univoco_ml;	

query := concat(concat('select * from public.insert_gestione_anagrafica(
''"cod_comune_soggfis"=>', 
case when soggetto_indirizzo_comune is null then '-1' else concat('"',soggetto_indirizzo_comune,'"') end,'', ', ', 
'"nazione_soggfis"=>"106"', ', ', 
'"lineaattivita_1_data_inizio_attivita"=>', 
case when (lineaattivita_1_data_inizio_attivita) is null then 'null' else concat('"',lineaattivita_1_data_inizio_attivita,'"') end,'', ', ', 
'"toponimo_soggfis"=>',
case when (toponimo_soggfis) is null then '-1' else concat('"',toponimo_soggfis,'"') end,'', ', ', 
'"latitudine_stab"=>',
case when (latitudine_stab) is null then '0' else concat('"',latitudine_stab,'"') end,'', ', ', 
'"cap_soggfis"=>"',cap_soggfis,'"', ', ',
'"codice_fiscale"=>"',codice_fiscale,'"', ', ',
'"latitudine_leg"=>',
case when (latitudine_leg) is null then '0' else concat('"',latitudine_leg,'"') end,'', ', ', 
'"toponimo_sede_legale"=>',
case when (toponimo_sede_legale) is null then '-1' else concat('"',toponimo_sede_legale,'"') end,'', ', ', 
'"via_soggfis"=>"',via_soggfis,'"', ', ',
'"autorizzazione_nota"=>NULL', ', ', 
'"data_nascita_rapp_leg"=>', 
case when length(data_nascita_rapp_leg) = 0 then 'null' else concat('"',data_nascita_rapp_leg,'"') end,'', ', ', 
'"partita_iva"=>"',partita_iva,'"', ', ',
'"lineaattivita_1_data_fine_attivita"=>',
case when lineaattivita_1_data_fine_attivita is null then 'null' else concat('"',lineaattivita_1_data_fine_attivita,'"') end,'', ', ', 
'"autorizzazione_id_aia"=>"', autorizzazione_id_aia, '"', ', ',  
'"comune_nascita_rapp_leg"=>',
case when comune_nascita_rapp_leg is null then '-1' else concat('"',comune_nascita_rapp_leg,'"') end,'', ', ', 
'"comune_estero_sede_legale"=>"',comune_estero_sede_legale,'"', ', ',
'"civico_stab"=>"',civico_stab,'"', ', ',
'"autorizzazione_numero"=>NULL', ', ',
'"cf_resp_stab"=>"',cf_resp_stab,'"', ', ', 
'"civico_sede_legale"=>"',civico_sede_legale,'"', ', ',
'"nome_resp_stab"=>"',nome_resp_stab,'"', ', ', 
'"email_impresa"=>"',email_impresa,'"', ', ',
'"longitudine_stab"=>',
case when (longitudine_stab) is null then '0' else concat('"',longitudine_stab,'"') end,'', ', ', 
'"cod_provincia_soggfis"=>',
case when cod_provincia_soggfis is null then '-1' else concat('"',cod_provincia_soggfis,'"') end,'', ', ', 
'"email_rapp_leg"=>"',email_rapp_leg,'"', ', ', 
''), 
concat('',
'"cod_comune_stab"=>',
case when cod_comune_stab is null then '-1' else concat('"',cod_comune_stab,'"') end,'', ', ', 
'"lineaattivita_1_codice_univoco_ml"=>"', case when lineaattivita_1_codice_univoco_ml <> '' then lineaattivita_1_codice_univoco_ml else 'NON.MAPP.' end, '"', ', ',  
--'"lineaattivita_1_codice_univoco_ml"=>"NON.MAPP."', ', ',  
'"cap_leg"=>"',cap_leg,'"', ', ',
'"longitudine_leg"=>',
case when (longitudine_leg) is null then '0' else concat('"',longitudine_leg,'"') end,'', ', ', 
'"autorizzazione_data"=>NULL', ', ',  
'"lineaattivita_1_tipo_carattere_attivita"=>',
case when lineaattivita_1_tipo_carattere_attivita is null then '-1' else concat('"',lineaattivita_1_tipo_carattere_attivita,'"') end,'', ', ', 
'"nazione_nascita_rapp_leg"=>"106"', ', ',
'"sesso_rapp_leg"=>"',sesso_rapp_leg,'"', ', ', 
'"id_rapp_legale_recuperato"=>',
case when id_rapp_legale_recuperato is null then '-1' else concat('"',id_rapp_legale_recuperato,'"') end,'', ', ', 
'"cognome_resp_stab"=>"',cognome_resp_stab,'"', ', ',
'"toponimo_stab"=>',
case when toponimo_stab is null then '-1' else concat('"',toponimo_stab,'"') end,'', ', ', 
'"autorizzazione_tipo"=>"', autorizzazione_tipo, '"', ', ',  
'"ragione_sociale"=>"',replace(replace(ragione_sociale,'"','\"'),'''',''''''),'"', ', ',
'"cognome_rapp_leg"=>"',cognome_rapp_leg,'"', ', ',
'"civico_soggfis"=>"',civico_soggfis,'"', ', ', 
'"denominazione_stab"=>NULL', ', ', -------------------------------------> recuperaòa
'"id_stabilimento"=>',
case when id_stabilimento is null then '-1' else concat('"',id_stabilimento,'"') end,'', ', ', 
'"autorizzazione_burc"=>NULL', ', ', 
'"telefono_rapp_leg"=>NULL', ', ',
'"comune_residenza_estero_soggfis"=>"','"', ', ', 
'"nazione_sede_legale"=>"106"', ', ',
'"via_sede_legale"=>"',via_sede_legale,'"', ', ', 
'"cod_provincia_sede_legale"=>',
case when cod_provincia_sede_legale is null then '-1' else concat('"',cod_provincia_sede_legale,'"') end,'', ', ', 
'"lineaattivita_1_num_riconoscimento"=>"',lineaattivita_1_num_riconoscimento,'"', ', ',
'"codice_fiscale_rappresentante"=>"',codice_fiscale_rappresentante,'"', ', ',
'"cap_stab"=>"',cap_stab,'"', ', ',
'"lineaattivita_1_tipo_attivita"=>',
case when lineaattivita_1_tipo_attivita is null then '-1' else concat('"',lineaattivita_1_tipo_attivita,'"') end,'', ', ', 
''),
concat('',
'"cod_provincia_stab"=>',
case when cod_provincia_stab is null then '-1' else concat('"',cod_provincia_stab,'"') end,'', ', ', 
'"tipo_impresa"=>',
case when tipo_impresa is null then '-1' else concat('"',tipo_impresa,'"') end,'', ', ', 
'"cod_comune_sede_legale"=>',
case when cod_comune_sede_legale is null then '-1' else concat('"',cod_comune_sede_legale,'"') end,'', ', ', 
'"via_stab"=>"',via_stab,'"', '''::hstore', ', ',
'''''','::hstore ', ', ',
'964',', ',
'-1',', ',
'''''', ', ',
'-1','',
')')
);

raise info '[import_from_aia] %', query;

insert into log_import_aia(id_import_aia, dbi) values(_id_import_aia, query) returning id into idLog;

execute query into result;

update log_import_aia set riferimento_id = result, riferimento_id_nome_tab = 'opu_stabilimento', modified = now(), output = result where id = idLog;

IF result > 0 THEN

insert into anag_dati_autorizzativi(riferimento_id, riferimento_id_nome_tab, id_aia, tipo_autorizzazione) values(result, 'opu_stabilimento', autorizzazione_id_aia, autorizzazione_tipo::integer);

IF lineaattivita_1_codice_univoco_ml = 'NON.MAPP.' THEN
UPDATE opu_stabilimento set linee_pregresse=true where id = result;
END IF;

END IF;

return result;

EXCEPTION WHEN OTHERS THEN
raise notice '% %', SQLERRM, SQLSTATE;
insert into log_import_aia(id_import_aia, dbi, output, error) values(_id_import_aia, query, result, concat('[',SQLSTATE, '] ', SQLERRM ));
return result;
END;

$$;


ALTER FUNCTION public."OBSimport_from_aia"(_id_import_aia integer) OWNER TO postgres;

--
-- TOC entry 949 (class 1255 OID 16683)
-- Name: aggiorna_campioni_verbali_protocolli(integer, text, integer, integer, integer, text, text, text, text, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.aggiorna_campioni_verbali_protocolli(_idcampione integer, _tipoverbale text, _id_documento integer, _numero_protocollo integer, _anno_protocollo integer, _data_protocollo text, _esito text, _faultstring text, _base64file text, user_id integer) RETURNS text
    LANGUAGE plpgsql STRICT
    AS $$

DECLARE

_cf_rappresentante text;
	
BEGIN

select r.codice_fiscale_rappresentante into _cf_rappresentante
from fascicoli_ispettivi f
left join ricerche_anagrafiche_old_materializzata r on r.riferimento_id = f.riferimento_id and r.riferimento_id_nome_tab = f.riferimento_id_nome_tab
left join giornate_ispettive g on g.id_fascicolo_ispettivo = f.id
left join campioni c on c.id_giornata_ispettiva = g.id
where c.id = _idcampione limit 1;

IF length(trim(_cf_rappresentante)) = 0 OR _cf_rappresentante IS NULL THEN
_cf_rappresentante := '-ASSENTE-';
END IF;

insert into campioni_verbali_protocolli (id_campione, tipo_verbale, id_documento, cf_rappresentante, numero_protocollo, anno_protocollo, data_protocollo, esito, fault_string, base64file, enteredby) values (
_idcampione, _tipoverbale, _id_documento, _cf_rappresentante, _numero_protocollo, _anno_protocollo, _data_protocollo, _esito, _faultstring, _base64file, user_id);


 RETURN 'OK';
 END;
$$;


ALTER FUNCTION public.aggiorna_campioni_verbali_protocolli(_idcampione integer, _tipoverbale text, _id_documento integer, _numero_protocollo integer, _anno_protocollo integer, _data_protocollo text, _esito text, _faultstring text, _base64file text, user_id integer) OWNER TO postgres;

--
-- TOC entry 950 (class 1255 OID 16684)
-- Name: aggiorna_giornate_ispettive_verbali_protocolli(integer, text, integer, integer, integer, text, text, text, text, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.aggiorna_giornate_ispettive_verbali_protocolli(_id_giornata_ispettiva integer, _tipoverbale text, _id_documento integer, _numero_protocollo integer, _anno_protocollo integer, _data_protocollo text, _esito text, _faultstring text, _base64file text, user_id integer) RETURNS text
    LANGUAGE plpgsql STRICT
    AS $$

DECLARE

_cf_rappresentante text;
	
BEGIN

select r.codice_fiscale_rappresentante into _cf_rappresentante
from fascicoli_ispettivi f
left join ricerche_anagrafiche_old_materializzata r on r.riferimento_id = f.riferimento_id and r.riferimento_id_nome_tab = f.riferimento_id_nome_tab
left join giornate_ispettive g on g.id_fascicolo_ispettivo = f.id
where g.id = _id_giornata_ispettiva limit 1;

IF length(trim(_cf_rappresentante)) = 0 OR _cf_rappresentante IS NULL THEN
_cf_rappresentante := '-ASSENTE-';
END IF;

insert into giornate_ispettive_verbali_protocolli (id_giornata_ispettiva, tipo_verbale, id_documento, cf_rappresentante, numero_protocollo, anno_protocollo, data_protocollo, esito, fault_string, base64file, enteredby) values (
_id_giornata_ispettiva, _tipoverbale, _id_documento, _cf_rappresentante, _numero_protocollo, _anno_protocollo, _data_protocollo, _esito, _faultstring, _base64file, user_id);


 RETURN 'OK';
 END;
$$;


ALTER FUNCTION public.aggiorna_giornate_ispettive_verbali_protocolli(_id_giornata_ispettiva integer, _tipoverbale text, _id_documento integer, _numero_protocollo integer, _anno_protocollo integer, _data_protocollo text, _esito text, _faultstring text, _base64file text, user_id integer) OWNER TO postgres;

--
-- TOC entry 951 (class 1255 OID 16685)
-- Name: aggiornaricerche_anagrafiche_old_materializzata_organization(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.aggiornaricerche_anagrafiche_old_materializzata_organization() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   DECLARE
   alternativeId integer;
   esito text;
   BEGIN


   if NEW.trashed_date is null
   then
   if NEW.tipologia in(1,3,97,850,151,802,152,10,20,2,800,801) 
   then
	esito:=(select * from org_insert_into_ricerche_anagrafiche_old_materializzata(NEW.org_id));

	else
	esito:=(select * from altri_org_insert_into_ricerche_anagrafiche_old_materializzata(NEW.org_id));

   end if;
   else
   delete from ricerche_anagrafiche_old_materializzata where  riferimento_id =NEW.org_id and riferimento_id_nome_tab ilike 'organization';
   end if;
     
    RETURN NEW;
   END
$$;


ALTER FUNCTION public.aggiornaricerche_anagrafiche_old_materializzata_organization() OWNER TO postgres;

--
-- TOC entry 952 (class 1255 OID 16686)
-- Name: aggiornaricerche_anagrafiche_old_materializzata_organization_ad(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.aggiornaricerche_anagrafiche_old_materializzata_organization_ad() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   DECLARE
   alternativeId integer;
   esito text;
   tipologiaOp integer;
   BEGIN
	tipologiaOp:=(select tipologia from organization where org_id =NEW.org_id );
   if tipologiaOp in(1,3,97,850,151,802,152,10,20,2,800,801) /*tipologia di altri stabilimenti*/
   then
	esito:=(select * from org_insert_into_ricerche_anagrafiche_old_materializzata(NEW.org_id));

	else
	esito:=(select * from altri_org_insert_into_ricerche_anagrafiche_old_materializzata(NEW.org_id));

   end if;
     
    RETURN NEW;
   END
$$;


ALTER FUNCTION public.aggiornaricerche_anagrafiche_old_materializzata_organization_ad() OWNER TO postgres;

--
-- TOC entry 953 (class 1255 OID 16687)
-- Name: altri_org_insert_into_ricerche_anagrafiche_old_materializzata(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.altri_org_insert_into_ricerche_anagrafiche_old_materializzata(orgid integer) RETURNS boolean
    LANGUAGE plpgsql STRICT
    AS $$
DECLARE
BEGIN

delete from ricerche_anagrafiche_old_materializzata where riferimento_id_nome ilike'orgid' and riferimento_id_nome_tab ilike 'organization' and riferimento_id =orgId ;
insert into ricerche_anagrafiche_old_materializzata (select * from ricerca_anagrafiche  where riferimento_id_nome ilike'orgid' and riferimento_id_nome_tab ilike 'organization' and riferimento_id =orgId);

	return true ;
 END;
$$;


ALTER FUNCTION public.altri_org_insert_into_ricerche_anagrafiche_old_materializzata(orgid integer) OWNER TO postgres;

--
-- TOC entry 954 (class 1255 OID 16688)
-- Name: calcola_cap_da_indirizzo(integer, integer, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.calcola_cap_da_indirizzo(_comune integer DEFAULT NULL::integer, _toponimo integer DEFAULT NULL::integer, _via text DEFAULT NULL::text) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE

	cap_comune text;
	desc_toponimo text;

BEGIN

	
	IF _comune = 5279 THEN


		select description into desc_toponimo from lookup_toponimi where code = _toponimo;
						

		select c.cap into cap_comune from cap c 
			where trim(c.toponimo) ilike trim(desc_toponimo) and trim(c.indirizzo) ilike '%' || _via || '%' limit 1;
										

	ELSE
		--select cap into cap_comune from opu_indirizzo where ((comune = _comune and toponimo = _toponimo) and trim(via) ilike trim(_via)) limit 1;
		select cap into cap_comune from comuni1 where id = _comune;
	END IF;


	RETURN trim(cap_comune);
 END;
$$;


ALTER FUNCTION public.calcola_cap_da_indirizzo(_comune integer, _toponimo integer, _via text) OWNER TO postgres;

--
-- TOC entry 955 (class 1255 OID 16689)
-- Name: campione_dettaglio_globale(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.campione_dettaglio_globale(_idcampione integer) RETURNS json
    LANGUAGE plpgsql
    AS $$	
DECLARE
	campiservizio json;
	laboratorio json;
	tipoattivita json;
	numeroverbale json;
	finale json;
	utente json;
	programmacampionamento json;
	categoriamerceologica json;
	dati json;
	datigiornataispettiva json;
	gruppoispettivo json;
	analiti json;
	id_dipartimento integer;

BEGIN
	-- chiamo la dbi puntuale per ogni blocco
	-- STEP 1: recuperiamo i campi del campione
	laboratorio := (select json_object_agg(nome,descrizione) from (select 'nome' as nome, (l.description)::text as descrizione from lookup_destinazione_campione l join campioni c on c.id_laboratorio= l.code
							               union select 'id' as nome,  (l.code)::text from  lookup_destinazione_campione l join campioni c on c.id_laboratorio= l.code) a);
	tipoattivita := (select json_object_agg(nome,descrizione) from (select 'nome' as nome, l.tipo as descrizione from campioni c join lookup_tipo_attivita l on l.code = c.id_tipo_attivita where id= _idcampione
						union
						select 'id' as nome, l.code::text as id from campioni c join lookup_tipo_attivita l on l.code = c.id_tipo_attivita where id= _idcampione) a);				             

	--numeroverbale := (select json_object_agg(nome,descrizione) from (select 'nome' as nome, num_verbale as descrizione from campioni where id = _idcampione
	--						               union select 'id' as nome,  1::text) a);				             

	utente := (select json_object_agg(nome,descrizione) from (select 'userId' as nome, (enteredby)::text as descrizione from campioni where id = _idcampione) a);				             

	dati := (select json_object_agg(nome,descrizione) from (select 'note' as nome, 
	                                                        note as descrizione 
	                                                        from campioni where id = _idcampione
							        union select 'dataPrelievo' as nome, (data_prelievo)::text  
							        from campioni where id = _idcampione
							        union select 'numeroVerbale' as nome, num_verbale
							        from campioni where id = _idcampione
							        ) a);	
	
	datigiornataispettiva := (select json_object_agg(nome,descrizione) from (select 'idGiornataIspettiva' as nome, id_giornata_ispettiva::text as descrizione from campioni where id = _idcampione
							               union select 'dipartimento' as nome, l.description::text  
							                     from giornate_ispettive cu 
							                     join campioni c on c.id_giornata_ispettiva = cu.id
							                     join lookup_site_id l on l.code = cu.id_dipartimento
							                     where c.id = _idcampione
							               union select distinct 'ragioneSociale' as nome, r.ragione_sociale as descrizione
							                     from giornate_ispettive cu 
							                     join campioni c on c.id_giornata_ispettiva = cu.id
							                     join ricerche_anagrafiche_old_materializzata r on r.riferimento_id = cu.riferimento_id and r.riferimento_id_nome_tab = cu.riferimento_id_nome_tab
							                     where c.id = _idcampione
									union select distinct 'riferimentoId' as nome, r.riferimento_id::text as descrizione
							                     from giornate_ispettive cu 
							                     join campioni c on c.id_giornata_ispettiva = cu.id
							                     join ricerche_anagrafiche_old_materializzata r on r.riferimento_id = cu.riferimento_id and r.riferimento_id_nome_tab = cu.riferimento_id_nome_tab
							                     where c.id = _idcampione    
							          ) a);	     
	-- STEP 3: recuperiamo i campi programmacontrollo
	programmacampionamento := (SELECT array_to_json(array_agg(row_to_json(t))) FROM (select c.categoria_merceologica as nome,
							     c.programma_campionamento as "nomeProgrammaCampionamento", 
							     c.id as id, 
							     c.macrocategoria as "nomeProgrammaCampionamentoMacrocategoria" 
							     from campione_programma_campionamento cm
							     join programmi_campionamento_categorie_merceologiche c on c.id = cm.id_programma_campionamento
							     where id_campione = _idcampione and cm.enabled) t);
	-- STEP 4: recuperiamo i campi analiti
	analiti := (SELECT array_to_json(array_agg(row_to_json(t))) FROM (select a.descrizione_analita_livello_uno::text as livello1, 
										 a.descrizione_analita_livello_due::text as livello2, 
										 a.descrizione_analita_livello_tre::text as livello3, a.progressivo as id 
										         from campione_analiti ca
										         join analiti a on a.progressivo = ca.analiti_id
										         where id_campione = _idcampione) t);

										         
	--STEP 5: gruppo ispettivo
	gruppoispettivo := (SELECT array_to_json(array_agg(row_to_json(t))) FROM (select distinct d.nominativo as nominativo, c.id_componente as id, d.qualifica as qualifica, c.nome_struttura as struttura
										from campione_gruppo_ispettivo c
										join public.dpat_get_nominativi(-1, (select date_part('year',data_prelievo)::integer from campioni where id = _idcampione),null,null,null,c.id_struttura,null,-1) d on d.id_anagrafica_nominativo = c.id_componente
										left join access_ ac on ac.user_id = c.id_componente
										where c.id_campione = _idcampione) t);
										
	campiservizio := (select json_object_agg(nome,descrizione) from (select 'utenteInserimento' as nome, concat_ws(' ', co.namefirst, co.namelast)::text as descrizione
								        from campioni c 
								        join access a on a.user_id = c.enteredby 
								        join contact co on co.contact_id = a.contact_id
									where c.id = _idcampione 
								  union select 'dataInserimento' as nome, entered::text as descrizione from campioni where id = _idcampione
								  union select 'idCampione' as nome, id::text as descrizione from campioni where id = _idcampione 
								  ) b);

	finale := (select unaccent(concat('{',
		(select concat_ws(' ', '"Dati":', dati, ',"DatiGiornataIspettiva":', datigiornataispettiva, 
		--',"NumeroVerbale":', numeroverbale, 
		',"Utente":',utente, 
		',"ProgrammaCampionamentoCategoriaMerceologica":', programmacampionamento,
		',"Laboratorio":', laboratorio,
		',"TipoAnalisi":', analiti,
		',"GruppoIspettivo":', gruppoispettivo,
		',"CampiServizio":', campiServizio,
		',"TipoAttivita":', tipoattivita)),'}'))::json);
		
	
	raise info 'json finale: %', finale;

    	return finale;
END;
$$;


ALTER FUNCTION public.campione_dettaglio_globale(_idcampione integer) OWNER TO postgres;

--
-- TOC entry 956 (class 1255 OID 16691)
-- Name: campione_get_verbale_acquesott(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.campione_get_verbale_acquesott(_id_campione integer) RETURNS json
    LANGUAGE plpgsql
    AS $$
DECLARE
	output json;
	idGiornataIspettiva integer;
	outputGiornataIspettiva json;
	outputCampione json;
BEGIN

	outputCampione := (select * from public.campione_dettaglio_globale(_id_campione));

	idGiornataIspettiva := ((outputCampione->>'DatiGiornataIspettiva')::json->>'idGiornataIspettiva')::integer;
	
	outputGiornataIspettiva := (select * from public.giornata_ispettiva_dettaglio_globale(idGiornataIspettiva));

	output := '{"GiornataIspettiva" : ' || outputGiornataIspettiva ||', "Campione" : ' || outputCampione || '}';

	return output;
	
END;
$$;


ALTER FUNCTION public.campione_get_verbale_acquesott(_id_campione integer) OWNER TO postgres;

--
-- TOC entry 957 (class 1255 OID 16692)
-- Name: campione_get_verbale_c4(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.campione_get_verbale_c4(_id_campione integer) RETURNS json
    LANGUAGE plpgsql
    AS $$
DECLARE
	output json;
	idGiornataIspettiva integer;
	outputGiornataIspettiva json;
	outputCampione json;
BEGIN

	outputCampione := (select * from public.campione_dettaglio_globale(_id_campione));

	idGiornataIspettiva := ((outputCampione->>'DatiGiornataIspettiva')::json->>'idGiornataIspettiva')::integer;
	
	outputGiornataIspettiva := (select * from public.giornata_ispettiva_dettaglio_globale(idGiornataIspettiva));

	output := '{"GiornataIspettiva" : ' || outputGiornataIspettiva ||', "Campione" : ' || outputCampione || '}';

	return output;
	
END;
$$;


ALTER FUNCTION public.campione_get_verbale_c4(_id_campione integer) OWNER TO postgres;

--
-- TOC entry 958 (class 1255 OID 16693)
-- Name: campione_insert(json, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.campione_insert(_json_anagrafica json, _idutente integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$	
DECLARE
	
	resultid integer;
BEGIN
	 
	INSERT INTO campioni (enteredby, note, data_prelievo) values (_idutente,(_json_anagrafica ->> 'note')::text,(_json_anagrafica ->> 'dataPrelievo')::timestamp without time zone)
	returning id into resultid;

	  return resultid;
	 		
END;
$$;


ALTER FUNCTION public.campione_insert(_json_anagrafica json, _idutente integer) OWNER TO postgres;

--
-- TOC entry 959 (class 1255 OID 16694)
-- Name: campione_insert_analiti(json, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.campione_insert_analiti(_json_dati json, _idcampione integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$	
DECLARE
	i json;
BEGIN
	FOR i IN SELECT * FROM json_array_elements(_json_dati)  
		LOOP
			RAISE NOTICE 'id %', i->>'id';
			INSERT INTO  campione_analiti (id_campione, analiti_id) values (_idcampione, (i ->> 'id')::integer);
		END LOOP;		

	 return 1;

END;
$$;


ALTER FUNCTION public.campione_insert_analiti(_json_dati json, _idcampione integer) OWNER TO postgres;

--
-- TOC entry 960 (class 1255 OID 16695)
-- Name: campione_insert_globale(json); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.campione_insert_globale(_json_dati json) RETURNS integer
    LANGUAGE plpgsql
    AS $$	
DECLARE
	datigiornataispettiva json; 
	utente json;
	laboratorio json;
	numeroverbale json;
	programmacampionamento json;
	dati json;
	analiti json;
	gruppoispettivo json;
	tipoattivita json;
	idcampione integer;
	idutente integer;
	output integer;
	
BEGIN
	 -- mi ricavo i singoli oggetti JSON per blocchi
	datigiornataispettiva:=  _json_dati ->'DatiGiornataIspettiva';
	RAISE INFO 'json datigiornataispettiva %',datigiornataispettiva;

	dati :=  _json_dati ->'Dati'; 
	RAISE INFO 'json dati %',dati;

	utente :=  _json_dati ->'Utente';
	RAISE INFO 'json utenti %',utente;
	
	idutente := utente -> 'userId';
	RAISE INFO 'idutente %',idutente;

	laboratorio :=  _json_dati ->'Laboratorio';
	RAISE INFO 'json Laboratorio %',laboratorio;

	analiti :=  _json_dati ->'TipoAnalisi';
	RAISE INFO 'json Analiti %',analiti;

	tipoattivita :=  _json_dati ->'TipoAttivita';
	RAISE INFO 'json TipoAttivita %',tipoattivita;
	
	numeroverbale :=  _json_dati ->'NumeroVerbale';
	RAISE INFO 'json numeroverbale %',numeroverbale;

	programmacampionamento :=  _json_dati ->'ProgrammaCampionamentoCategoriaMerceologica';
	RAISE INFO 'json ProgrammaCampionamento %',programmacampionamento;

	gruppoispettivo :=  _json_dati ->'GruppoIspettivo';
	RAISE INFO 'json gruppoispettivo %',gruppoispettivo;
	
	-- STEP 0: INSERIAMO IL RECORD JSON PER LOG
	INSERT INTO giornate_ispettive_log_json(enteredby, json_cu) values(idutente,_json_dati);
	
	-- chiamo la dbi puntuale per ogni blocco
	-- STEP 1: INSERIAMO IL RECORD IN CAMPIONI
	idcampione := (SELECT * from public.campione_insert(dati, idutente));
	-- STEP 3: INSERIAMO GLI ANALITI
	output := (SELECT * from public.campione_insert_analiti(analiti, idcampione));
	-- STEP 4: INSERIAMO IL PROGRAMMA CAMPIONAMENTO
	output := (SELECT * from public.campione_insert_programma_campionamento(programmacampionamento, idcampione));
	-- STEP 4: INSERIAMO IL GRUPPO ISPETTIVO
	output := (SELECT * from public.campione_insert_gruppo_ispettivo(gruppoispettivo, idcampione));
	-- STEP 5: INSERIAMO GLI ALTRI DATI DEL CAMPIONE
	update campioni set 
	id_laboratorio= (laboratorio->>'id')::int, 
	--id_motivazione = (motivazione ->> 'id')::integer, 
	num_verbale=lpad(id::text, 6, '0'),
	id_tipo_attivita = (tipoattivita ->> 'id')::integer,
	id_giornata_ispettiva = (datigiornataispettiva ->> 'idGiornataIspettiva')::integer  where id = idcampione;
	
    	 return idcampione;
END;
$$;


ALTER FUNCTION public.campione_insert_globale(_json_dati json) OWNER TO postgres;

--
-- TOC entry 961 (class 1255 OID 16696)
-- Name: campione_insert_gruppo_ispettivo(json, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.campione_insert_gruppo_ispettivo(_json_daticonnucleo json, _idcampione integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$	
DECLARE
	i json; 
BEGIN
	  FOR i IN SELECT * FROM json_array_elements(_json_daticonnucleo) 
	  LOOP
		 INSERT INTO campione_gruppo_ispettivo (id_campione, id_componente, enabled, id_struttura, nome_struttura) values (_idcampione, (i->>'id')::integer,true, (i->>'idStruttura')::integer, (i->>'struttura')::text);
	  END LOOP;


    	 return 1;
END;
$$;


ALTER FUNCTION public.campione_insert_gruppo_ispettivo(_json_daticonnucleo json, _idcampione integer) OWNER TO postgres;

--
-- TOC entry 962 (class 1255 OID 16697)
-- Name: campione_insert_matrice(json, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.campione_insert_matrice(_json_dati json, _idcampione integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$	
DECLARE
	
	resultid integer;
BEGIN
	INSERT INTO matrici_campioni (id_campione, id_matrice, cammino) values (_idcampione,(_json_dati ->> 'id')::integer,(_json_dati ->> 'nome')::text)
	returning id into resultid;

	  return resultid;
	 		
END;
$$;


ALTER FUNCTION public.campione_insert_matrice(_json_dati json, _idcampione integer) OWNER TO postgres;

--
-- TOC entry 963 (class 1255 OID 16698)
-- Name: campione_insert_programma_campionamento(json, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.campione_insert_programma_campionamento(_json_dati json, _idcampione integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$	
DECLARE
	i json;
BEGIN
	FOR i IN SELECT * FROM json_array_elements(_json_dati)  
		LOOP
			RAISE NOTICE 'id %', i->>'id';
			INSERT INTO  campione_programma_campionamento (id_campione, id_programma_campionamento) values (_idcampione, (i ->> 'id')::integer);
		END LOOP;		

	 return 1;

END;
$$;


ALTER FUNCTION public.campione_insert_programma_campionamento(_json_dati json, _idcampione integer) OWNER TO postgres;

--
-- TOC entry 964 (class 1255 OID 16699)
-- Name: campioni_lista_globale(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.campioni_lista_globale(_id_giornata_ispettiva integer) RETURNS json
    LANGUAGE plpgsql
    AS $$
DECLARE
	output json;
BEGIN

	 output := (SELECT array_to_json(array_agg(row_to_json(t))) FROM (select id as "idCampione", num_verbale as "NumVerbale", c.data_prelievo as "dataPrelievo", c.entered as "dataInserimento", concat_ws(' ', co.namefirst, co.namelast)::text as "utenteInserimento"
										from campioni c  
										join access a on a.user_id = c.enteredby 
										join contact co on co.contact_id = a.contact_id
										where c.id_giornata_ispettiva = _id_giornata_ispettiva 
										and c.trashed_date is null
										order by c.data_prelievo desc) t);
	return output;
END;
$$;


ALTER FUNCTION public.campioni_lista_globale(_id_giornata_ispettiva integer) OWNER TO postgres;

--
-- TOC entry 965 (class 1255 OID 16700)
-- Name: carica_da_gisa_campania(text, text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.carica_da_gisa_campania(_ragione_sociale text, _partita_iva text, _cf_impresa text) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN
RETURN 'OK';

END;
$$;


ALTER FUNCTION public.carica_da_gisa_campania(_ragione_sociale text, _partita_iva text, _cf_impresa text) OWNER TO postgres;

--
-- TOC entry 966 (class 1255 OID 16701)
-- Name: cerca_metadato(text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.cerca_metadato(_codice_univoco_ml text) RETURNS TABLE(id integer, id_configuratore integer, html_label_sezione text, ftl_name text, html_label text, enabled boolean, sql_campo text, sql_origine text, sql_condizione text, html_ordine text, html_type text, sql_campo_lookup text, sql_origine_lookup text, sql_condizione_lookup text, html_name text, mapping_field text, oid_parent integer, html_style text, html_event text)
    LANGUAGE sql
    AS $$
select 	sa.id,
	ct.id as id_configuratore,
	gt.html_label as html_label_sezione,
	gt.ftl_name,
	ct.html_label,
	sa.enabled,
	ct.sql_campo,
	ct.sql_origine,
	ct.sql_condizione,
	ct.html_ordine,
	ct.html_type,
	ct.sql_campo_lookup,
	ct.sql_origine_lookup,
	ct.sql_condizione_lookup,
	ct.html_name,
	ct.mapping_field,
	ct.oid_parent,
	ct.html_style,
	ct.html_event      
	from gruppi_template_no_scia gt 
		join schema_anagrafica sa on gt.id = sa.id_gruppo_template
		join configuratore_template_no_scia ct on ct.id = sa.id_campo_configuratore
			where trim(sa.codice_univoco_ml) = trim(_codice_univoco_ml) and sa.enabled
				and ct.oid_parent is null
					order by ct.html_ordine ASC;
    
$$;


ALTER FUNCTION public.cerca_metadato(_codice_univoco_ml text) OWNER TO postgres;

--
-- TOC entry 967 (class 1255 OID 16702)
-- Name: check_locked(text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.check_locked(_ip text, _username text) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$

DECLARE
 
ip_exists int;
lastaccess timestamp with time zone;
maxbad int;
locked bool default true;
timeoutSeconds integer default 180;
maxAttempts integer default 3;
-- 
begin

	ip_exists := (SELECT COUNT(*) from tb_accesslock where tb_accesslock.ip=$1 and username = $2);
	raise notice 'ip_exists: %', ip_exists;
	IF  ip_exists > 0 THEN -- ip locked ==> (now - lastaccess) < timeout)  < AND (badcount > maxbad)
		lastaccess := (SELECT last  from tb_accesslock where tb_accesslock.ip=$1 and username = $2 );
		maxbad:= (SELECT badcount from tb_accesslock where tb_accesslock.ip=$1 and username = $2 );
		raise notice 'lastaccess: %  ,  maxbad: % ',lastaccess, maxbad;
		if ( lastaccess + timeoutSeconds * (interval '1 SECOND')  <  now() OR maxbad < maxAttempts) then
			locked := false;
		end if;
	ELSE 		 
		raise notice 'not ip_exists: inserting';
		insert into tb_accesslock (ip, username, last) values ($1, $2, current_timestamp);
		locked := false;
	END IF;

	return locked;
end	
$_$;


ALTER FUNCTION public.check_locked(_ip text, _username text) OWNER TO postgres;

--
-- TOC entry 968 (class 1255 OID 16703)
-- Name: check_vincolo_registro_trasgressori(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.check_vincolo_registro_trasgressori(idcontrollo integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
DECLARE
contatore int;
vincolo boolean;
r RECORD;	
BEGIN

contatore:= (select count(*) from ticket
where id_controllo_ufficiale = idcontrollo::text
and tipologia = 1 and trashed_date is null
and id_nonconformita >0);

IF (contatore=0) THEN
vincolo := true;
ELSE 	
vincolo:=false;
END IF;
RETURN vincolo;
END;
$$;


ALTER FUNCTION public.check_vincolo_registro_trasgressori(idcontrollo integer) OWNER TO postgres;

--
-- TOC entry 969 (class 1255 OID 16704)
-- Name: controlli_verfica_blocco_non_conformita(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.controlli_verfica_blocco_non_conformita(idcontrollo integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
DECLARE
flagblocco boolean;
idcampione integer;
num_nc_rilevate integer;
BEGIN

flagblocco :=true;


select campioni.ticketid into idcampione
from ticket campioni
join analiti_campioni ac on ac.id_campione=campioni.ticketid
join ticket cu on cu.id_controllo_ufficiale = campioni.id_controllo_ufficiale and cu.tipologia = 3 and cu.assigned_date <'2016-01-01'
where 
campioni.id_controllo_ufficiale::int=idcontrollo and 
campioni.tipologia = 2 and 
campioni.trashed_Date is null and
ac.esito_id=1 
and date_part('years',campioni.assigned_date)<date_part('years', (select current_timestamp - interval '15 days'))
and date_part('years',ac.esito_data)=date_part('years', (select current_timestamp - interval '15 days'))
and cu.closed is null ;

select count(*)  into num_nc_rilevate from ticket
join ticket nc on nc.tipologia = 8 and nc.ticketid = ticket.id_nonconformita and nc.trashed_Date is null
where ticket.id_controllo_ufficiale::int= idcontrollo and
 ticket.tipologia in (1,6,9) and ticket.trashed_date is null and
 date_part('years',ticket.assigned_date)<date_part('years', (select current_timestamp - interval '15 days'));


if num_nc_rilevate=0 and idcampione>0
then 
flagblocco:=false;
end if;




return flagblocco;


 END;
$$;


ALTER FUNCTION public.controlli_verfica_blocco_non_conformita(idcontrollo integer) OWNER TO postgres;

--
-- TOC entry 970 (class 1255 OID 16705)
-- Name: controlli_verfica_blocco_non_conformita_carico_terzi(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.controlli_verfica_blocco_non_conformita_carico_terzi(idcontrollo integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
DECLARE
flagblocco boolean;
idcampione integer;
num_nc_rilevate integer;
BEGIN

flagblocco :=true;

select campioni.ticketid into idcampione
from ticket campioni
join analiti_campioni ac on ac.id_campione=campioni.ticketid
join ticket cu on cu.id_controllo_ufficiale = campioni.id_controllo_ufficiale and cu.tipologia = 3 and cu.assigned_date <'2016-01-01'
where 
campioni.id_controllo_ufficiale::int=idcontrollo and 
campioni.tipologia = 2 and 
campioni.trashed_Date is null and
ac.esito_id=1 
and date_part('years',campioni.assigned_date)<date_part('years', (select current_timestamp - interval '15 days'))
and date_part('years',ac.esito_data)=date_part('years', (select current_timestamp - interval '15 days'))
and cu.closed is null ;

select count(*)  into num_nc_rilevate 
from ticket
join ticket nc on nc.tipologia = 10 and nc.ticketid = ticket.id_nonconformita and nc.trashed_Date is null
where ticket.id_controllo_ufficiale::int= idcontrollo and
 ticket.tipologia in (1,6,9) and ticket.trashed_date is null and
 date_part('years',ticket.assigned_date)<date_part('years', (select current_timestamp - interval '15 days'));

raise info 'num_nc_rilevate %',num_nc_rilevate ;
raise info 'idcampione %',idcampione ;

if num_nc_rilevate=0 and idcampione>0
then 
flagblocco:=false;
end if;
return flagblocco;


 END;
$$;


ALTER FUNCTION public.controlli_verfica_blocco_non_conformita_carico_terzi(idcontrollo integer) OWNER TO postgres;

--
-- TOC entry 1161 (class 1255 OID 21649)
-- Name: dbi_cambio_password(text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.dbi_cambio_password(input_username text, input_password text) RETURNS text
    LANGUAGE plpgsql
    AS $$

DECLARE
us_id integer;
md5_password text;
msg text;

BEGIN

md5_password = md5(input_password);

us_id := (select user_id from access where username = input_username);

if (us_id>0) THEN

update access_ set password = md5_password where user_id = us_id;
msg = 'OK';

ELSE
msg ='KO';

END IF;

RETURN msg;

END
$$;


ALTER FUNCTION public.dbi_cambio_password(input_username text, input_password text) OWNER TO postgres;

--
-- TOC entry 971 (class 1255 OID 16706)
-- Name: dbi_dettaglio_utente_guru(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.dbi_dettaglio_utente_guru(userid integer) RETURNS TABLE(id integer, username text, nome text, cognome text, cf text, id_ruolo integer, id_asl integer)
    LANGUAGE plpgsql
    AS $$
DECLARE

BEGIN
RETURN QUERY
    
 select a.user_id, a.username::text, c.namefirst::text, c.namelast::text, c.codice_fiscale::text, r.role_id, asl.code
from access a
left join access_dati ac on ac.user_id = a.user_id
left join contact_ c on c.contact_id = a.contact_id
left join role r on r.role_id = a.role_id
left join lookup_site_id asl on asl.code = ac.site_id
where a.user_id = userId;

END;
$$;


ALTER FUNCTION public.dbi_dettaglio_utente_guru(userid integer) OWNER TO postgres;

--
-- TOC entry 972 (class 1255 OID 16707)
-- Name: dbi_get_controlli_ufficiali_su_linee_produttive(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.dbi_get_controlli_ufficiali_su_linee_produttive(idstabilimento integer) RETURNS TABLE(idcontrollo integer, id_stabilimento integer, id_rel_stab_lp_out integer, id_linea_master_list_out integer, enabled_out boolean, descrizione_out text, id_norma_out integer, id_stato_out integer)
    LANGUAGE plpgsql STRICT
    AS $$
DECLARE
	
	 	
BEGIN
		FOR
		idcontrollo,id_stabilimento,id_rel_stab_lp_out ,id_linea_master_list_out ,enabled_out ,descrizione_out, id_norma_out, id_stato_out 
		in

		select distinct cu.ticketid,cu.id_stabilimento,r.id as id_rel_stab_lp ,r.id_linea_produttiva as id_linea_master_list,r.enabled,path_descrizione, ll.id_norma, r.stato

from opu_relazione_stabilimento_linee_produttive r 
left join linee_attivita_controlli_ufficiali on  r.id = linee_attivita_controlli_ufficiali.id_linea_attivita 
left join ticket cu on cu.ticketid = linee_attivita_controlli_ufficiali.id_controllo_ufficiale and cu.id_stabilimento = r.id_stabilimento and cu.trashed_date is null
left join ml8_linee_attivita_nuove ll on ll.id_nuova_linea_attivita=r.id_linea_produttiva
where r.id_stabilimento =idstabilimento and r.enabled and linee_attivita_controlli_ufficiali.trashed_date is null
    LOOP
        RETURN NEXT;
     END LOOP;
     RETURN;
    
 END;
$$;


ALTER FUNCTION public.dbi_get_controlli_ufficiali_su_linee_produttive(idstabilimento integer) OWNER TO postgres;

--
-- TOC entry 973 (class 1255 OID 16708)
-- Name: dbi_get_operatori_mercato(integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.dbi_get_operatori_mercato(_idrelstab integer, _idcu integer) RETURNS TABLE(id integer, riferimento_id integer, riferimento_id_nome_tab text, ragione_sociale text, num_box integer, selected text)
    LANGUAGE plpgsql STRICT
    AS $$
DECLARE
	r RECORD;
	 	
BEGIN
		FOR id, riferimento_id, riferimento_id_nome_tab, ragione_sociale, num_box, selected
		in

 select distinct somi.id, somi.riferimento_id_operatore, somi.riferimento_id_nome_tab_operatore, opuop.ragione_sociale, somi.num_box, case when cuomi.id>0 then 'selected' else '' end as selected
		FROM sintesis_operatori_mercato somi
		join sintesis_relazione_stabilimento_linee_produttive s on s.id= somi.id_relazione_sintesis_mercato
		left join ml8_linee_attivita_nuove_materializzata l on l.id_nuova_linea_attivita = s.id_linea_produttiva
		left join opu_stabilimento opust on opust.id = somi.riferimento_id_operatore 
		left join opu_operatore opuop on opuop.id = opust.id_operatore
		left join controlli_ufficiali_operatori_mercato cuomi on _idcu > 0 and cuomi.id = somi.id and cuomi.id_controllo_ufficiale =_idcu 
		where somi.id_relazione_sintesis_mercato = _idrelstab and l.codice in ('MS.B-MS.B00-MS.B00.300','MS.B-MS.B80-MS.B80.600')
		and somi.trashed_date is null and somi.data_cessazione is null	 
		order by somi.num_box

		
    LOOP
        RETURN NEXT;
     END LOOP;
     RETURN;
    
 END;
$$;


ALTER FUNCTION public.dbi_get_operatori_mercato(_idrelstab integer, _idcu integer) OWNER TO postgres;

--
-- TOC entry 974 (class 1255 OID 16709)
-- Name: dbi_insert_guru_log(integer, text, text, text, integer, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.dbi_insert_guru_log(_enteredby integer, _ip_enteredby text, _operazione text, _output text, _user_id integer, _username text) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
   DECLARE
   
BEGIN

insert into guru_log (enteredby, ip_enteredby, operazione, output, user_id, username) values (_enteredby, _ip_enteredby, _operazione, _output, _user_id, _username);
RETURN true;

END
$$;


ALTER FUNCTION public.dbi_insert_guru_log(_enteredby integer, _ip_enteredby text, _operazione text, _output text, _user_id integer, _username text) OWNER TO postgres;

--
-- TOC entry 975 (class 1255 OID 16710)
-- Name: dbi_insert_utente(character varying, character varying, integer, integer, integer, boolean, integer, character varying, character varying, character varying, text, text, character varying, character varying, timestamp with time zone, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.dbi_insert_utente(usr character varying, password character varying, role_id integer, enteredby integer, modifiedby integer, enabled boolean, site_id integer, namefirst character varying, namelast character varying, cf character varying, notes text, luogo text, nickname character varying, email character varying, expires timestamp with time zone, id_struttura integer) RETURNS text
    LANGUAGE plpgsql
    AS $_$
   DECLARE
msg text ;
us_id int ;
con_id int;
us_id2 int ;
flag boolean;
delegavisibilita text ;
   
BEGIN

	IF (role_id=-1) THEN
		enabled:=false;
	ELSE
		enabled:=true;
	END IF;

	IF (id_struttura=-1) THEN
		id_struttura:=null;
	END IF;

	us_id := (select user_id from access a where a.username = usr and a.trashed_date is null);
	IF (us_id is null) THEN	
		us_id=nextVal('access_user_id_seq');
		con_id=nextVal('contact_contact_id_seq');
		if (site_id>0)
		then
			delegavisibilita:=(select description from lookup_site_id where code =site_id);
			else
			delegavisibilita:=cf;
			end if ;
		
		INSERT INTO access ( user_id, username, password, contact_id, site_id, role_id, enteredby, modifiedby, timezone, currency, language, enabled, expires) 
		VALUES (  us_id, usr, password, con_id, site_id, role_id, 964, 964, 'Europe/Berlin', 'EUR', 'it_IT', enabled, expires::timestamp without time zone); 

		con_id=currVal('contact_contact_id_seq');
		us_id=currVal('access_user_id_seq');
		INSERT INTO contact ( contact_id, user_id, namefirst, namelast, enteredby, modifiedby, site_id, codice_fiscale, notes, enabled,luogo,nickname,visibilita_delega ) 
		VALUES ( con_id, us_id, upper(namefirst), upper(namelast), 964, 964, site_id, cf, notes, enabled,luogo,nickname,delegavisibilita );

			 
		con_id=currVal('contact_contact_id_seq');
		INSERT INTO contact_emailaddress(contact_id, emailaddress_type, email, enteredby, modifiedby, primary_email)
		VALUES (con_id, 1, email, 964, 964, true);

		--flag := (select r.in_dpat from role r where r.enabled and r.role_id = $3);
		--IF (flag is false) THEN
		--	flag := (select r.in_nucleo_ispettivo from role r where r.enabled and r.role_id = $3);
		--	IF (flag is true) THEN	
		--		INSERT INTO anagrafica_nominativo (id_asl,nome,cognome,cf,mail,disabled,user_id_access,id_ruolo) 
		--		VALUES (site_id,namefirst,namelast,cf,email,true,us_id,role_id);
		--	END IF;
		--END IF;
		
	END IF;

	IF (id_struttura is not null) THEN
		us_id2=nextVal('access_collegamento_id_seq');
		INSERT INTO access_collegamento (id,id_utente,id_collegato,enabled) 
		VALUES (us_id2,us_id,id_canile,enabled); 
	END IF;
	
	msg = 'OK';
	RETURN msg;

END
$_$;


ALTER FUNCTION public.dbi_insert_utente(usr character varying, password character varying, role_id integer, enteredby integer, modifiedby integer, enabled boolean, site_id integer, namefirst character varying, namelast character varying, cf character varying, notes text, luogo text, nickname character varying, email character varying, expires timestamp with time zone, id_struttura integer) OWNER TO postgres;

--
-- TOC entry 976 (class 1255 OID 16711)
-- Name: dbi_insert_utente(character varying, character varying, integer, integer, integer, boolean, integer, character varying, character varying, character varying, text, text, character varying, character varying, timestamp with time zone, integer, text, text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.dbi_insert_utente(usr character varying, password character varying, role_id integer, enteredby integer, modifiedby integer, enabled boolean, site_id integer, namefirst_input character varying, namelast_input character varying, cf character varying, notes text, luogo text, nickname character varying, email character varying, expires timestamp with time zone, id_struttura integer, inaccess text, indpat text, inni text) RETURNS text
    LANGUAGE plpgsql
    AS $$
   DECLARE
msg text ;
us_id int ;
con_id int;
us_id2 int ;
flag boolean;
delegavisibilita text ;

   
BEGIN
	
	namefirst_input:= trim(namefirst_input);
namelast_input:= trim(namelast_input);
cf:= trim(cf);

	IF (role_id=-1) THEN
		enabled:=false;
	ELSE
		enabled:=true;
	END IF;

	IF (id_struttura=-1) THEN
		id_struttura:=null;
	END IF;

	con_id := (select contact_id from contact c where c.namefirst ilike namefirst_input and c.namelast ilike namelast_input and c.codice_fiscale ilike cf and c.trashed_date is null limit 1);
	
	IF (con_id is null) THEN	
		con_id:=nextVal('contact_contact_id_seq');
		
		INSERT INTO contact ( contact_id, namefirst, namelast, enteredby, modifiedby, site_id, codice_fiscale, notes, enabled,luogo,nickname,visibilita_delega ) 
		VALUES ( con_id, upper(namefirst_input), upper(namelast_input), 964, 964, site_id, cf, notes, enabled,luogo,nickname,delegavisibilita );

			
		--con_id=currVal('contact_contact_id_seq');
		INSERT INTO contact_emailaddress(contact_id, emailaddress_type, email, enteredby, modifiedby, primary_email)
		VALUES (con_id, 1, email, 964, 964, true);
	end if;
	
	
		us_id=nextVal('access_user_id_seq');
	
if (site_id>0)
		then
			delegavisibilita:=(select description from lookup_site_id where code =site_id);
			else
			delegavisibilita:=cf;
			end if ;

		 
		INSERT INTO access ( user_id, username, password, contact_id, role_id, enteredby, modifiedby, timezone, currency, language, enabled, expires, in_access, in_dpat, in_nucleo_ispettivo) 
		VALUES (  us_id, usr, password, con_id, role_id, 964, 964, 'Europe/Berlin', 'EUR', 'it_IT', enabled, expires::timestamp without time zone, inaccess::boolean, indpat::boolean, inni::boolean); 

		INSERT INTO access_dati ( user_id, site_id, visibilita_delega) 
		VALUES (  us_id, site_id, delegavisibilita ); 


	IF (id_struttura is not null) THEN
		us_id2=nextVal('access_collegamento_id_seq');
		INSERT INTO access_collegamento (id,id_utente,id_collegato,enabled) 
		VALUES (us_id2,us_id,id_canile,enabled); 
	END IF;



	msg = COALESCE(msg, 'OK');
	
	RETURN msg;

END
$$;


ALTER FUNCTION public.dbi_insert_utente(usr character varying, password character varying, role_id integer, enteredby integer, modifiedby integer, enabled boolean, site_id integer, namefirst_input character varying, namelast_input character varying, cf character varying, notes text, luogo text, nickname character varying, email character varying, expires timestamp with time zone, id_struttura integer, inaccess text, indpat text, inni text) OWNER TO postgres;

--
-- TOC entry 977 (class 1255 OID 16712)
-- Name: dbi_insert_utente_guru(character varying, character varying, integer, integer, integer, boolean, integer, character varying, character varying, character varying, text, text, character varying, character varying, timestamp with time zone, integer, text, text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.dbi_insert_utente_guru(usr character varying, password character varying, role_id integer, enteredby integer, modifiedby integer, enabled boolean, site_id integer, namefirst_input character varying, namelast_input character varying, cf character varying, notes text, luogo text, nickname character varying, email character varying, expires timestamp with time zone, id_struttura integer, inaccess text, indpat text, inni text) RETURNS text
    LANGUAGE plpgsql
    AS $$
   DECLARE
msg text ;
userId integer;
   
BEGIN

SELECT user_id into userId from access where username = usr;

IF userId > 0 THEN
return 'ERRORE. USERNAME ESISTENTE NEL SISTEMA.';
END IF;

msg := (select * from public.dbi_insert_utente(usr, password, role_id, enteredby, modifiedby, enabled, site_id, namefirst_input, namelast_input, cf, 'Inserito da GURU.', luogo, nickname, email, expires, id_struttura, inaccess, indpat, inni));
	
	RETURN msg;

END
$$;


ALTER FUNCTION public.dbi_insert_utente_guru(usr character varying, password character varying, role_id integer, enteredby integer, modifiedby integer, enabled boolean, site_id integer, namefirst_input character varying, namelast_input character varying, cf character varying, notes text, luogo text, nickname character varying, email character varying, expires timestamp with time zone, id_struttura integer, inaccess text, indpat text, inni text) OWNER TO postgres;

--
-- TOC entry 978 (class 1255 OID 16713)
-- Name: dbi_lista_asl_guru(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.dbi_lista_asl_guru() RETURNS TABLE(asl_id integer, asl text)
    LANGUAGE plpgsql
    AS $$
DECLARE

BEGIN
RETURN QUERY
    
 select a.code, a.description::text from lookup_site_id a where a.enabled and a.code <> 16 order by a.description ASC;

END;
$$;


ALTER FUNCTION public.dbi_lista_asl_guru() OWNER TO postgres;

--
-- TOC entry 979 (class 1255 OID 16714)
-- Name: dbi_lista_ruoli_guru(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.dbi_lista_ruoli_guru() RETURNS TABLE(role_id integer, role text)
    LANGUAGE plpgsql
    AS $$
DECLARE

BEGIN
RETURN QUERY
    
 select r.role_id, r.role::text from role r where r.enabled order by role ASC;

END;
$$;


ALTER FUNCTION public.dbi_lista_ruoli_guru() OWNER TO postgres;

--
-- TOC entry 980 (class 1255 OID 16715)
-- Name: dbi_lista_utenti_guru(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.dbi_lista_utenti_guru() RETURNS TABLE(id integer, username text, nome text, cognome text, codice_fiscale text, ruolo text, asl text, id_ruolo integer)
    LANGUAGE plpgsql
    AS $$DECLARE

BEGIN
RETURN QUERY
    
 select a.user_id, a.username::text, c.namefirst::text, c.namelast::text, c.codice_fiscale::text, r.role::text, CASE WHEN asl.code > 0 THEN asl.description ELSE 'TUTTI I DIPARTIMENTI' END::text , r.role_id
from access a
left join access_dati ac on ac.user_id = a.user_id
left join contact_ c on c.contact_id = a.contact_id
left join role r on r.role_id = a.role_id
left join lookup_site_id asl on asl.code = ac.site_id
order by a.entered desc;

END;
$$;


ALTER FUNCTION public.dbi_lista_utenti_guru() OWNER TO postgres;

--
-- TOC entry 981 (class 1255 OID 16716)
-- Name: dbi_opu_get_progressivo_linea_per_stabilimento(text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.dbi_opu_get_progressivo_linea_per_stabilimento(numeroregistrazionestabilimento text) RETURNS integer
    LANGUAGE plpgsql STRICT
    AS $$
DECLARE
	progressivo integer;
BEGIN


	progressivo := (
	select max(prog)+1
	from
	(
	select distinct substring(ld.numero_registrazione from 0 for 16) as codice_stabilimento,CASE WHEN max(substring(ld.numero_registrazione from 17 for length(ld.numero_registrazione)) )::text != '' then max(substring(ld.numero_registrazione from 17 for length(ld.numero_registrazione)) )::int else 0 end as prog
from opu_stabilimento  os 
join opu_operatore op on op.id = os.id_operatore
join opu_relazione_stabilimento_linee_produttive ld on ld.id_stabilimento = os.id
where ld.numero_registrazione is not null and  os.numero_Registrazione =numeroregistrazionestabilimento
group by substring(ld.numero_registrazione from 0 for 16)





) 
lista_progressivi_per_asl
);

if (progressivo<=0 or progressivo is null)
then
return 1;
else
     RETURN progressivo;
     end if;
 END;
$$;


ALTER FUNCTION public.dbi_opu_get_progressivo_linea_per_stabilimento(numeroregistrazionestabilimento text) OWNER TO postgres;

--
-- TOC entry 982 (class 1255 OID 16717)
-- Name: dbi_update_disable_utente_guru(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.dbi_update_disable_utente_guru(userid integer) RETURNS text
    LANGUAGE plpgsql
    AS $$
   DECLARE
msg text ;
   
BEGIN

update access_ set data_scadenza = now(), note_hd = 'Scaduto in seguito a disabilitazione da GURU.' where user_id = userId and data_scadenza is null;
msg := 'OK';

RETURN msg;

END
$$;


ALTER FUNCTION public.dbi_update_disable_utente_guru(userid integer) OWNER TO postgres;

--
-- TOC entry 983 (class 1255 OID 16718)
-- Name: dbi_update_password_utente_guru(integer, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.dbi_update_password_utente_guru(userid integer, password text) RETURNS text
    LANGUAGE plpgsql
    AS $$
   DECLARE
msg text ;
   
BEGIN

msg := (select * from public.dbi_cambio_password((select username from access_ where user_id = userId), password));

RETURN msg;

END
$$;


ALTER FUNCTION public.dbi_update_password_utente_guru(userid integer, password text) OWNER TO postgres;

--
-- TOC entry 984 (class 1255 OID 16719)
-- Name: dbi_update_utente_guru(integer, integer, integer, text, text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.dbi_update_utente_guru(userid integer, roleid integer, aslid integer, nome text, cognome text, cf text) RETURNS text
    LANGUAGE plpgsql
    AS $$
   DECLARE
msg text ;
   
BEGIN

msg := (select * from public.dbi_insert_utente((select username from access_ where user_id = userId), (select password from access_ where user_id = userId), roleId, (select enteredby from access_ where user_id = userId), (select modifiedby from access_ where user_id = userId), true, aslId, nome, cognome, cf, 'Modificato da GURU.', '', '', '', null, -1, 'true', 'true', 'true'));

update access_ set data_scadenza = now(), note_hd = 'Scaduto in seguito a modifica da GURU.' where user_id = userId and data_scadenza is null;

RETURN msg;

END
$$;


ALTER FUNCTION public.dbi_update_utente_guru(userid integer, roleid integer, aslid integer, nome text, cognome text, cf text) OWNER TO postgres;

--
-- TOC entry 985 (class 1255 OID 16720)
-- Name: delete_anagrafica_fasi_lavorazione(integer, text, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.delete_anagrafica_fasi_lavorazione(_riferimento_id integer, _riferimento_id_nome_tab text, _userid integer) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN
	update anagrafica_fasi_lavorazione set note_hd=concat_ws('***', note_hd, 'Cancellazione effettuata tramite dbi'), modifiedby = _userid, trashed_date = now() 
	where riferimento_id= _riferimento_id 
	and   riferimento_id_nome_tab = _riferimento_id_nome_tab
	and trashed_date is null;

	return 'OK';

END;
$$;


ALTER FUNCTION public.delete_anagrafica_fasi_lavorazione(_riferimento_id integer, _riferimento_id_nome_tab text, _userid integer) OWNER TO postgres;

--
-- TOC entry 986 (class 1255 OID 16721)
-- Name: delete_cu_canili(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.delete_cu_canili() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   DECLARE
   tipo integer;
   deleteQuery text;
   BEGIN
	tipo := ( select tipologia from organization where org_id = OLD.org_id ) ;
	if tipo = 10 and OLD.tipologia = 3 then
		deleteQuery := 'delete from cu_canili where id_controllo = ' || OLD.ticketid;
		PERFORM dblink_connect('canina-conn','host=dbservercanina dbname=canina');
		PERFORM dblink_exec('canina-conn',deleteQuery);
		PERFORM dblink_disconnect('canina-conn');
	end if;
    RETURN NEW;
   END
$$;


ALTER FUNCTION public.delete_cu_canili() OWNER TO postgres;

--
-- TOC entry 987 (class 1255 OID 16722)
-- Name: delete_cu_colonie(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.delete_cu_colonie() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   DECLARE
   tipo integer;
   deleteQuery text;
   BEGIN
	tipo := ( select tipologia from organization where org_id = OLD.org_id ) ;
	if tipo = 16 and OLD.tipologia = 3 then
		deleteQuery := 'delete from cu_colonie where id_controllo = ' || OLD.ticketid;
		PERFORM dblink_connect('felina-conn','host=dbservercanina dbname=felina');
		PERFORM dblink_exec('felina-conn',deleteQuery);
		PERFORM dblink_disconnect('felina-conn');
	end if;
    RETURN NEW;
   END
$$;


ALTER FUNCTION public.delete_cu_colonie() OWNER TO postgres;

--
-- TOC entry 988 (class 1255 OID 16723)
-- Name: delete_cu_operatori_commerciali(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.delete_cu_operatori_commerciali() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   DECLARE
   tipo integer;
   deleteQuery text;
   BEGIN
	tipo := ( select tipologia from organization where org_id = OLD.org_id ) ;
	if tipo = 20 and OLD.tipologia = 3 then
		deleteQuery := 'delete from cu_operatori_commerciali where id_controllo = ' || OLD.ticketid;
		PERFORM dblink_connect('canina-conn','host=dbservercanina dbname=canina');
		PERFORM dblink_exec('canina-conn',deleteQuery);
		PERFORM dblink_disconnect('canina-conn');
	end if;
    RETURN NEW;
   END
$$;


ALTER FUNCTION public.delete_cu_operatori_commerciali() OWNER TO postgres;

--
-- TOC entry 989 (class 1255 OID 16724)
-- Name: delete_dati_autorizzativi(integer, text, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.delete_dati_autorizzativi(_riferimento_id integer, _riferimento_id_nome_tab text, _id_utente integer) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
	
BEGIN

 
	
	update anag_dati_autorizzativi set modifiedby = _id_utente, trashed_date = now() 
	where riferimento_id= _riferimento_id 
	and   riferimento_id_nome_tab = _riferimento_id_nome_tab
	and trashed_date is null;

	
		return 'OK, operazione effettuata con successo.';
	

END;
$$;


ALTER FUNCTION public.delete_dati_autorizzativi(_riferimento_id integer, _riferimento_id_nome_tab text, _id_utente integer) OWNER TO postgres;

--
-- TOC entry 990 (class 1255 OID 16725)
-- Name: dpat_disabilita_struttura(integer, timestamp without time zone, integer, integer, text, integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.dpat_disabilita_struttura(id_input integer, data_scadenza_input timestamp without time zone, id_asl_input integer, tipo_struttura_input integer, descrizione_lunga_input text, id_utente_input integer, id_padre_input integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
	data_scadenza_old timestamp without time zone;
	codice_interno_fk_old integer;
BEGIN
	select data_scadenza into data_scadenza_old from strutture_asl where id = id_input;
	select codice_interno_fk into codice_interno_fk_old from strutture_asl where id = id_input;
	if (data_scadenza_old is not null ) then /*E STATA ESEGUITA UNA MODIFICA SU UN RECORD CHE HA LA DATA SCADENZA FUTURA*/
		delete from strutture_asl where codice_interno_fk= codice_interno_fk_old and data_scadenza is null;
	end if;

	update strutture_asl set data_scadenza = data_scadenza_input,modified_by=id_utente_input,modified=current_timestamp where id = id_input; 

	return id_input;		 
END;
$$;


ALTER FUNCTION public.dpat_disabilita_struttura(id_input integer, data_scadenza_input timestamp without time zone, id_asl_input integer, tipo_struttura_input integer, descrizione_lunga_input text, id_utente_input integer, id_padre_input integer) OWNER TO postgres;

--
-- TOC entry 1156 (class 1255 OID 21023)
-- Name: dpat_duplica_modello(integer, integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.dpat_duplica_modello(anno_i integer, anno_target_i integer, user_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
rec1 record;
rec2 record;
rec3 record;
tempn1 integer;
tempn2 integer;
tempn3 integer;
t      integer;
id_ret integer;
begin

delete from dpat_indicatore_new where anno = anno_target_i;
delete from dpat_piano_attivita_new where anno = anno_target_i;
delete from dpat_sez_new   where anno = anno_target_i; 
delete from associazione_analiti_piani where id_piano in (select id from dpat_indicatore_new where anno = anno_target_i);
delete from associazione_matrici_piani where id_piano in (select id from dpat_indicatore_new where anno = anno_target_i);

--ciclo su tutti i nodi per l'anno indicato, che sicuramente non sono di template (modelli in stato 1) per hp puo' esserne al piu' uno
--e inserisco gli stessi nodi e che non sono scaduti, ovviamente utilizzando gli id dei nuovi elementi inseriti per mantenere le corrispondenze rispetto ai figli
--e ovviamente mettendoli con stato 2
--aggiorno i sequences per farli partire dagli ultimi oid fisici (e per i logici anche) assegnati dalle vecchie tabelle
--sez





select
  max(cod_raggruppamento)+1
into
  t
from
  dpat_sez_new
;

execute ('ALTER SEQUENCE dpat_sez_new_codice_raggruppamento_seq RESTART WITH ' || t::text );
select
  max(id)+1
into
  t
from
  dpat_sez_new
;

execute ('ALTER SEQUENCE dpat_sez_new_id_seq RESTART WITH ' || t::text );
--piano_attivita
select
  max(cod_raggruppamento)+1
into
  t
from
  dpat_piano_attivita_new
;

execute ('ALTER SEQUENCE dpat_piano_attivita_new_codice_raggruppamento_seq RESTART WITH ' || t::text );
select
  max(id)+1
into
  t
from
  dpat_piano_attivita_new
;

execute ('ALTER SEQUENCE dpat_piano_attivita_new_id_seq RESTART WITH ' || t::text );
--indicatore
select
  max(cod_raggruppamento)+1
into
  t
from
  dpat_indicatore_new
;

execute ('ALTER SEQUENCE dpat_indicatore_new_cod_raggruppamento_seq RESTART WITH ' || t::text );
select
  max(id)+1
into
  t
from
  dpat_indicatore_new
;

execute ('ALTER SEQUENCE dpat_indicatore_new_id_seq RESTART WITH ' || t::text );
--sezione
for rec1 in
select *
from
  dpat_sez_new
where
  anno                    = anno_i
  and stato              != 1 --prendo quelli che sicuramente non sono un template
  and data_scadenza is null loop
  insert into dpat_sez_new(anno,descrizione,ordinamento,data_scadenza,stato,codice_interno,color,entered,entered_by,modified,modified_by) 
		values(anno_target_i,rec1.descrizione,0,null,1,rec1.codice_interno,rec1.color,now(),user_id,now(),user_id)
  returning id
into
  tempn1
;

--piano_attivita
for rec2 in
select *
from
  dpat_piano_attivita_new
where
  anno                    = anno_i
  and stato              != 1
  and id_sezione          = rec1.id
  and data_scadenza is null loop
  insert into dpat_piano_attivita_new(cod_raggruppamento,id_sezione,anno,descrizione,ordinamento,data_scadenza,stato,codice_alias_attivita, codice_esame, codice_interno_piano,codice_interno_attivita,alias_piano,alias_attivita,tipo_attivita,entered,entered_by,modified,modified_by) 
			values(rec2.cod_raggruppamento,tempn1,anno_target_i,rec2.descrizione,rec2.ordinamento,rec2.data_scadenza,1,rec2.codice_alias_attivita, rec2.codice_esame,rec2.codice_interno_piano,rec2.codice_interno_attivita,rec2.alias_piano,rec2.alias_attivita,rec2.tipo_attivita,now(),user_id,now(),user_id)
  returning id
into
  tempn2
;

--indicatore
for rec3 in
select *
from
  dpat_indicatore_new
where
  anno                    = anno_i
  and stato              != 1
  and id_piano_attivita   = rec2.id
  and data_scadenza is null loop
insert into dpat_indicatore_new(cod_raggruppamento,id_piano_attivita,anno,descrizione,ordinamento,data_scadenza,stato,codice_alias_indicatore,codice_esame
				,alias_indicatore
				,tipo_item_dpat, rendic_per_campioni, codice_interno_indicatore,codice_interno_univoco_tipo_attivita_gestione_cu, codice_interno_attivita_gestione_cu,codice_interno_piani_gestione_cu,entered,modified,entered_by,modified_by)
				values(rec3.cod_raggruppamento,tempn2,anno_target_i,rec3.descrizione,rec3.ordinamento,rec3.data_scadenza,1,rec3.codice_alias_indicatore,rec3.codice_esame
				,rec3.alias_indicatore
				,rec3.tipo_item_dpat, rec3.rendic_per_campioni, rec3.codice_interno_indicatore,rec3.codice_interno_univoco_tipo_attivita_gestione_cu, rec3.codice_interno_attivita_gestione_cu,rec3.codice_interno_piani_gestione_cu,now(),now(),user_id,user_id)
				returning id into id_ret;


end loop;
end loop;
end loop;
 
insert into associazione_matrici_piani (id_piano, id_matrice_foglia, enteredby, note,note_hd) 
select id_piano, id_matrice_foglia, user_id, concat('Inserito in seguito a inizializzazione nuovo anno. Indicatore vecchio id ', id_piano), 'temporaneo' || anno_target_i from associazione_matrici_piani where id_piano in (select id from dpat_indicatore_new where anno = anno_i) and trashed_date is null;

update associazione_matrici_piani set id_piano = (select id from dpat_indicatore_new where cod_raggruppamento = (select cod_raggruppamento from dpat_indicatore_new where id = id_piano) and anno = anno_target_i ), note_hd=null where note_hd = 'temporaneo' || anno_target_i;


insert into associazione_analiti_piani (id_piano, id_analiti_foglia, enteredby, note,note_hd) 
select id_piano, id_analiti_foglia, user_id, concat('Inserito in seguito a inizializzazione nuovo anno. Indicatore vecchio id ', id_piano), 'temporaneo' || anno_target_i from associazione_analiti_piani where id_piano in (select id from dpat_indicatore_new where anno = anno_i) and trashed_date is null;

update associazione_analiti_piani set id_piano = (select id from dpat_indicatore_new where cod_raggruppamento = (select cod_raggruppamento from dpat_indicatore_new where id = id_piano) and anno = anno_target_i ), note_hd=null where note_hd = 'temporaneo' || anno_target_i;




end;
$$;


ALTER FUNCTION public.dpat_duplica_modello(anno_i integer, anno_target_i integer, user_id integer) OWNER TO postgres;

--
-- TOC entry 1157 (class 1255 OID 21025)
-- Name: dpat_duplica_strumento_calcolo(integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.dpat_duplica_strumento_calcolo(anno_i integer, anno_target_i integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
rec_strumento_calcolo_old record;
rec_struttura_semplice_old record;
rec_struttura_complessa_old record;
rec_dpat_old record;
rec_nominativo_old record;
id_strumento_calcolo_inserito integer;
id_struttura_semplice_inserita integer;
id_struttura_complessa_inserita integer;
id_nominativo_inserito integer;
id_dpat_istanza_inserito integer;
next_id integer;
begin

--Azzero l'anno di destinazione
raise info 'Cancellazione dpat in corso';
delete from dpat where anno = anno_target_i;
raise info 'Cancellazione dpat_istanza in corso';
delete from dpat_istanza where anno = anno_target_i;
raise info 'Cancellazione dpat_strumento_calcolo in corso';
delete from dpat_strumento_calcolo where anno = anno_target_i;
raise info 'Cancellazione dpat_strumento_calcolo_nominativi_ in corso';
delete from dpat_strumento_calcolo_nominativi_ where id_dpat_strumento_calcolo_strutture in (select id from strutture_asl where anno = anno_target_i) and id_dpat_strumento_calcolo_strutture in (select codice_interno_fk from strutture_asl where anno = anno_target_i);
raise info 'Cancellazione strutture_asl in corso';
delete from strutture_asl where anno = anno_target_i;
   
insert into dpat_istanza(anno,entered,enteredby,stato,flag_import_piani) values(anno_target_i,current_timestamp,291,1,false) returning id into id_dpat_istanza_inserito;

for rec_dpat_old in 
select * from dpat where anno = anno_i 
loop
	INSERT INTO dpat(
            anno, id_asl,entered, entered_by, 
            modified, modified_by, enabled, completo, id_dpat_istanza, 
            congelato, data_congelamento)
    VALUES (anno_target_i, rec_dpat_old.id_asl, current_timestamp, 291,  
            current_timestamp, 291, rec_dpat_old.enabled, rec_dpat_old.completo, id_dpat_istanza_inserito, 
            false, null);
end loop;

for rec_strumento_calcolo_old in 
select * from dpat_strumento_calcolo where anno = anno_i 
loop
	insert INTO dpat_strumento_calcolo (anno,         completo,entered,          enteredby,id_asl,                                    modified,modifiedby,riaperto,stato) 
	                             values(anno_target_i,false,   current_timestamp,291,      rec_strumento_calcolo_old.id_asl, current_timestamp,291,       false,   1)
	returning id
        into id_strumento_calcolo_inserito;

        for rec_struttura_complessa_old in 
		select strutt.*
		from strutture_asl strutt
		LEFT JOIN lookup_tipologia_nodo_oia tipooia ON strutt.tipologia_struttura = tipooia.code 
		where tipologia_struttura in( 13,14) 
			and strutt.trashed_date is null
			and strutt.id_strumento_calcolo = rec_strumento_calcolo_old.id
			and (strutt.data_scadenza is null or strutt.data_scadenza> current_timestamp)
			and strutt.enabled 
		order by codice_interno_fk 
		loop
			raise info 'id struttra complessa old %', rec_struttura_complessa_old.id;
			next_id := (select max(id) +1 from strutture_asl where id <10000000);
			insert into strutture_asl(id,anno,       stato,  id_padre, id_asl, descrizione_lunga, n_livello, entered, entered_by, modified, modified_by, tipologia_struttura,
						  comune, enabled, obsoleto, confermato, id_strumento_calcolo, codice_interno_fk, nome,id_utente,mail,indirizzo,delegato,descrizione_comune,id_oia_nodo_temp,
                                                  descrizione_area_struttura_complessa,id_lookup_area_struttura_asl,ui_struttura_foglio_att_iniziale,ui_struttura_foglio_att_finale,    
                                                  id_utente_edit, percentuale_area_a,stato_all2,stato_all6,codice_interno_univoco,id_struttura_anno_prec) 
		        values(next_id,anno_target_i,       1,  rec_struttura_complessa_old.id_padre, rec_struttura_complessa_old.id_asl, rec_struttura_complessa_old.descrizione_lunga, rec_struttura_complessa_old.n_livello, current_timestamp, 291, current_timestamp, 291, rec_struttura_complessa_old.tipologia_struttura,
                               rec_struttura_complessa_old.comune, rec_struttura_complessa_old.enabled, rec_struttura_complessa_old.obsoleto, rec_struttura_complessa_old.confermato, id_strumento_calcolo_inserito, next_id, rec_struttura_complessa_old.nome,rec_struttura_complessa_old.id_utente,rec_struttura_complessa_old.mail,rec_struttura_complessa_old.indirizzo,rec_struttura_complessa_old.delegato,rec_struttura_complessa_old.descrizione_comune,rec_struttura_complessa_old.id_oia_nodo_temp,
                               rec_struttura_complessa_old.descrizione_area_struttura_complessa,rec_struttura_complessa_old.id_lookup_area_struttura_asl,rec_struttura_complessa_old.ui_struttura_foglio_att_iniziale,rec_struttura_complessa_old.ui_struttura_foglio_att_finale,    
                               rec_struttura_complessa_old.id_utente_edit, rec_struttura_complessa_old.percentuale_area_a,rec_struttura_complessa_old.stato_all2,rec_struttura_complessa_old.stato_all6,rec_struttura_complessa_old.codice_interno_univoco,rec_struttura_complessa_old.id_struttura_anno_prec)
                        returning id into id_struttura_complessa_inserita;
			raise info 'id struttra complessa new %', id_struttura_complessa_inserita;
 
                        for rec_struttura_semplice_old in 
			select *
			from strutture_asl 
			where id_padre = rec_struttura_complessa_old.id
			      and stato != 1 
			      and trashed_date is null
			      and enabled
			      and (data_scadenza is null or data_scadenza> current_timestamp)
			order by codice_interno_fk
			      loop
			        raise info 'id struttra semplice old %', rec_struttura_semplice_old.id;
			        next_id := (select max(id) +1 from strutture_asl where id <10000000);
				insert into strutture_asl(id,anno,       stato,  id_padre, id_asl, descrizione_lunga, n_livello, entered, entered_by, modified, modified_by, tipologia_struttura,
						  comune, enabled, obsoleto, confermato, id_strumento_calcolo, codice_interno_fk, nome,id_utente,mail,indirizzo,delegato,descrizione_comune,id_oia_nodo_temp,
                                                  descrizione_area_struttura_complessa,id_lookup_area_struttura_asl,ui_struttura_foglio_att_iniziale,ui_struttura_foglio_att_finale,    
                                                  id_utente_edit, percentuale_area_a,stato_all2,stato_all6,codice_interno_univoco,id_struttura_anno_prec) 
				values(next_id,anno_target_i,       1,  id_struttura_complessa_inserita, rec_struttura_semplice_old.id_asl, rec_struttura_semplice_old.descrizione_lunga, rec_struttura_semplice_old.n_livello, current_timestamp, 291, current_timestamp, 291, rec_struttura_semplice_old.tipologia_struttura,
					rec_struttura_semplice_old.comune, rec_struttura_semplice_old.enabled, rec_struttura_semplice_old.obsoleto, rec_struttura_semplice_old.confermato, id_strumento_calcolo_inserito, next_id, rec_struttura_semplice_old.nome,291,rec_struttura_semplice_old.mail,rec_struttura_semplice_old.indirizzo,rec_struttura_semplice_old.delegato,rec_struttura_semplice_old.descrizione_comune,rec_struttura_semplice_old.id_oia_nodo_temp,
                               rec_struttura_semplice_old.descrizione_area_struttura_complessa,rec_struttura_semplice_old.id_lookup_area_struttura_asl,rec_struttura_semplice_old.ui_struttura_foglio_att_iniziale,rec_struttura_semplice_old.ui_struttura_foglio_att_finale,    
                               291, rec_struttura_semplice_old.percentuale_area_a,rec_struttura_semplice_old.stato_all2,rec_struttura_semplice_old.stato_all6,rec_struttura_semplice_old.codice_interno_univoco,rec_struttura_semplice_old.id_struttura_anno_prec)
                               returning id into id_struttura_semplice_inserita;
		               raise info 'id struttra semplice new %', id_struttura_semplice_inserita;

				for rec_nominativo_old in 
					select *
					from
					  dpat_strumento_calcolo_nominativi_
					where (id_dpat_strumento_calcolo_strutture = rec_struttura_semplice_old.id or id_dpat_strumento_calcolo_strutture = rec_struttura_semplice_old.codice_interno_fk)
					  and trashed_date is null
					  and (data_scadenza is null or data_scadenza> current_timestamp)
					order by codice_interno_fk
				      loop
				        raise info 'id nominativo old %', rec_nominativo_old.id;
				        next_id := (select max(id) +1 from dpat_strumento_calcolo_nominativi_ where id <10000000);
					insert into dpat_strumento_calcolo_nominativi_(id,stato,id_anagrafica_nominativo,id_lookup_qualifica,id_dpat_strumento_calcolo_strutture, id_old_anagrafica_nominativo,
                                                 note_hd ,confermato   , confermato_da,data_conferma, data_scadenza , codice_interno_fk, modified_by, modified ,
                                                 entered ,entered_by) 
					values(next_id,1,rec_nominativo_old.id_anagrafica_nominativo, rec_nominativo_old.id_lookup_qualifica, id_struttura_semplice_inserita, rec_nominativo_old.id_old_anagrafica_nominativo, 
						rec_nominativo_old.note_hd , rec_nominativo_old.confermato   , rec_nominativo_old.confermato_da, rec_nominativo_old.data_conferma, rec_nominativo_old.data_scadenza , next_id, 291, current_timestamp , 
						current_timestamp , 291) returning id into  id_nominativo_inserito ;
					raise info 'id nominativo new %', id_nominativo_inserito;

				end loop;

			end loop;

		

		end loop;


end loop;

end;
$$;


ALTER FUNCTION public.dpat_duplica_strumento_calcolo(anno_i integer, anno_target_i integer) OWNER TO postgres;

--
-- TOC entry 991 (class 1255 OID 16726)
-- Name: dpat_get_nominativi(integer, integer, text, integer, text, integer, text, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.dpat_get_nominativi(asl_input integer DEFAULT '-1'::integer, anno_input integer DEFAULT NULL::integer, stato_input text DEFAULT NULL::text, id_struttura_complessa_input integer DEFAULT NULL::integer, descrizione_struttura_complessa_input text DEFAULT NULL::text, id_struttura_semplice_input integer DEFAULT NULL::integer, descrizione_struttura_semplice_input text DEFAULT NULL::text, id_qualifica_input integer DEFAULT '-1'::integer) RETURNS TABLE(id_nominativo integer, id_anagrafica_nominativo integer, nominativo text, codice_fiscale text, qualifica text, data_scadenza_nominativo timestamp without time zone, id_struttura_semplice integer, desc_strutt_semplice text, stato_strutt_semplice integer, data_scadenza_strutt_semplice timestamp without time zone, id_strutt_complessa integer, desc_strutt_complessa text, data_scadenza_strutt_complessa timestamp without time zone, stato_strutt_complessa integer, id_asl integer, anno integer)
    LANGUAGE plpgsql
    AS $$
DECLARE
	r RECORD;
BEGIN
	FOR id_nominativo, id_anagrafica_nominativo, nominativo,  codice_fiscale, qualifica, data_scadenza_nominativo,id_struttura_semplice, desc_strutt_semplice, 
       stato_strutt_semplice, data_scadenza_strutt_semplice, id_strutt_complessa, desc_strutt_complessa,data_scadenza_strutt_complessa, stato_strutt_complessa,  
       id_asl, anno	
      in

select n.id as id_nominativo, n.id_anagrafica_nominativo, concat(c.namefirst, ' ', c.namelast) as nominativo,  c.codice_fiscale, lq.description as qualifica,  
       n.data_scadenza as data_scadenza_nominativo,n.id_dpat_strumento_calcolo_strutture as id_struttura_semplice, strutt_semplice.descrizione as desc_strutt_semplice, 
       strutt_semplice.stato as stato_strutt_semplice, strutt_semplice.data_scadenza as data_scadenza_strutt_semplice, strutt_complessa.id as id_strutt_complessa, 
       strutt_complessa.descrizione as desc_strutt_complessa, strutt_complessa.data_scadenza as data_scadenza_strutt_complessa, strutt_complessa.stato as stato_strutt_complessa,  
       strutt_complessa.id_asl, strutt_complessa.anno
from dpat_strumento_calcolo_nominativi n 
join dpat_strutture_asl strutt_semplice on strutt_semplice.id = n.id_struttura and strutt_semplice.disabilitato = false
join dpat_strutture_asl strutt_complessa on strutt_complessa.id = strutt_semplice.id_padre and strutt_complessa.disabilitato = false 
join lookup_qualifiche lq on lq.code = id_lookup_qualifica 
join access_ users on users.user_id =  n.id_anagrafica_nominativo
join contact_ c on c.contact_id = users.contact_id
where n.trashed_Date is null and 
      (strutt_semplice.stato::text = ANY (string_to_array(stato_input, ',')) or stato_input is null) and
      (strutt_complessa.id = id_struttura_complessa_input or id_struttura_complessa_input is null) and 
      (strutt_complessa.descrizione ilike '%' || descrizione_struttura_complessa_input || '%' or descrizione_struttura_complessa_input is null) and
      (strutt_semplice.id = id_struttura_semplice_input or id_struttura_semplice_input is null) and 
      -- NEW per refactoring nucleo
      (lq.code = id_qualifica_input or id_qualifica_input = -1) and 
      ------ end new
      (strutt_semplice.descrizione ilike '%' || descrizione_struttura_semplice_input || '%' or descrizione_struttura_semplice_input is null) and
      strutt_complessa.id_strumento_calcolo in (select id 
						from dpat_strumento_calcolo 
						where (strutt_complessa.id_asl = asl_input or asl_input = -1) and 
						      (strutt_complessa.anno = anno_input or anno_input is null) 
						)
order by lq.livello_qualifiche_dpat


        LOOP
        RETURN NEXT;
     END LOOP;
     RETURN;
 END;
$$;


ALTER FUNCTION public.dpat_get_nominativi(asl_input integer, anno_input integer, stato_input text, id_struttura_complessa_input integer, descrizione_struttura_complessa_input text, id_struttura_semplice_input integer, descrizione_struttura_semplice_input text, id_qualifica_input integer) OWNER TO postgres;

--
-- TOC entry 992 (class 1255 OID 16727)
-- Name: dpat_insert_nominativo(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.dpat_insert_nominativo() RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
next_id integer;
id_strumento_calcolo_to_insert integer;
id_padre_to_insert integer;
n_livello_to_insert integer;
id_stato_organigramma integer;
id_stato_to_insert integer;
	 	
BEGIN
	next_id := (select max(id) +1 from strutture_asl where id <10000000);
	id_strumento_calcolo_to_insert := (select id from dpat_strumento_calcolo where anno = anno_input and id_asl = id_asl_input);

	id_stato_organigramma := (select stato from dpat_strumento_calcolo where anno = anno_input and id_asl = id_asl_input);
	id_stato_to_insert:=1;
	if(id_stato_organigramma=2 or id_stato_organigramma=0) then
		id_stato_to_insert := 0;
	end if;
	
	--STRUTTURA COMPLESSA o STRUTTURA SEMPLICE DIPARTIMENTALE
	if(tipo_struttura_input =13 or tipo_struttura_input=14) then
		id_padre_to_insert := (select id from strutture_asl where id_padre = 8 and id_asl =  id_asl_input);
	--STRUTTURA SEMPLICE
	else  
		id_padre_to_insert := id_padre_input;
	end if;

	--STRUTTURA COMPLESSA o STRUTTURA SEMPLICE DIPARTIMENTALE
	if(tipo_struttura_input =13 or tipo_struttura_input=14) then
		n_livello_to_insert := 2;
	--STRUTTURA SEMPLICE
	else  
		n_livello_to_insert := 3;
	end if;
	
        insert into strutture_asl(id,           id_padre,       id_asl,       descrizione_lunga,           n_livello,           entered,      entered_by,          modified,     modified_by, enabled,  tipologia_struttura, obsoleto, confermato,           id_strumento_calcolo, codice_interno_fk,                  stato,       anno, stato_all2, stato_all6) 
        values (             next_id, id_padre_to_insert, id_asl_input, descrizione_lunga_input, n_livello_to_insert, current_timestamp, id_utente_input, current_timestamp, id_utente_input,    true, tipo_struttura_input,    false,       true, id_strumento_calcolo_to_insert,           next_id,     id_stato_to_insert, anno_input,          0,          0);

	return next_id;	
END;
$$;


ALTER FUNCTION public.dpat_insert_nominativo() OWNER TO postgres;

--
-- TOC entry 993 (class 1255 OID 16728)
-- Name: dpat_insert_struttura(integer, integer, integer, text, integer, integer, integer, timestamp without time zone, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.dpat_insert_struttura(anno_input integer, id_asl_input integer, tipo_struttura_input integer, descrizione_lunga_input text, id_utente_input integer, id_padre_input integer, stato_input integer, data_congelamento_input timestamp without time zone, codice_interno_univoco_input integer DEFAULT NULL::integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
next_id integer;
id_strumento_calcolo_to_insert integer;
id_padre_to_insert integer;
n_livello_to_insert integer;
	 	
BEGIN
	next_id := (select max(id) +1 from strutture_asl where id <10000000);
	id_strumento_calcolo_to_insert := (select id from dpat_strumento_calcolo where anno = anno_input and id_asl = id_asl_input);

	--STRUTTURA COMPLESSA o STRUTTURA SEMPLICE DIPARTIMENTALE
	if(tipo_struttura_input =13 or tipo_struttura_input=14) then
		id_padre_to_insert := (select id from strutture_asl where id_padre = 8 and id_asl =  id_asl_input);
	--STRUTTURA SEMPLICE
	else  
		id_padre_to_insert := id_padre_input;
	end if;

	--STRUTTURA COMPLESSA o STRUTTURA SEMPLICE DIPARTIMENTALE
	if(tipo_struttura_input =13 or tipo_struttura_input=14) then
		n_livello_to_insert := 2;
	--STRUTTURA SEMPLICE
	else  
		n_livello_to_insert := 3;
	end if;

	if(codice_interno_univoco_input is null) then
		codice_interno_univoco_input := next_id;
	end if;
	
        insert into strutture_asl(id,           id_padre,       id_asl,       descrizione_lunga,           n_livello,           entered,      entered_by,          modified,     modified_by, enabled,  tipologia_struttura, obsoleto, confermato,           id_strumento_calcolo, codice_interno_fk,                  stato,       anno, stato_all2, stato_all6,data_congelamento,codice_interno_univoco) 
        values (             next_id, id_padre_to_insert, id_asl_input, descrizione_lunga_input, n_livello_to_insert, current_timestamp, id_utente_input, current_timestamp, id_utente_input,    true, tipo_struttura_input,    false,       true, id_strumento_calcolo_to_insert,           next_id,     stato_input, anno_input,          0,          0,data_congelamento_input,codice_interno_univoco_input);

	return next_id;	
END;
$$;


ALTER FUNCTION public.dpat_insert_struttura(anno_input integer, id_asl_input integer, tipo_struttura_input integer, descrizione_lunga_input text, id_utente_input integer, id_padre_input integer, stato_input integer, data_congelamento_input timestamp without time zone, codice_interno_univoco_input integer) OWNER TO postgres;

--
-- TOC entry 994 (class 1255 OID 16729)
-- Name: dpat_update_struttura(integer, timestamp without time zone, integer, integer, text, integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.dpat_update_struttura(id_input integer, data_scadenza_input timestamp without time zone, id_asl_input integer, tipo_struttura_input integer, descrizione_lunga_input text, id_utente_input integer, id_padre_input integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
  anno_old integer;
  codice_interno_univoco_old integer;
  id_inserito integer;
  rec_nominativo_old_struttura record;
  next_id integer;
  codice_interno_fk_inserito integer;
  stato_to_pass integer;
  data_congelamento_to_pass timestamp without time zone;
BEGIN
	select anno into anno_old from strutture_asl where id = id_input;

	select codice_interno_univoco into codice_interno_univoco_old from strutture_asl where id = id_input;
	
	select stato into stato_to_pass from strutture_asl where id = id_input;
	
	select data_congelamento into data_congelamento_to_pass from strutture_asl where id = id_input;
	
	
	perform dpat_disabilita_struttura(id_input, data_scadenza_input, id_asl_input, tipo_struttura_input, descrizione_lunga_input, id_utente_input, id_padre_input);
  
	id_inserito := (select * from dpat_insert_struttura(anno_old, id_asl_input, tipo_struttura_input, descrizione_lunga_input, id_utente_input,id_padre_input,stato_to_pass,data_congelamento_to_pass,codice_interno_univoco_old));

	codice_interno_fk_inserito := (select codice_interno_fk from strutture_asl where id = id_inserito );

	for rec_nominativo_old_struttura in 
		select *
		from
		  dpat_strumento_calcolo_nominativi_
		where (id_dpat_strumento_calcolo_strutture = (select codice_interno_fk  from strutture_asl where id = id_input) or id_dpat_strumento_calcolo_strutture = codice_interno_fk_inserito)
		  and trashed_date is null
		  and (data_scadenza is null or data_scadenza> current_timestamp)
		order by codice_interno_fk
	      loop
		next_id := (select max(id) +1 from dpat_strumento_calcolo_nominativi_ where id <10000000);
		insert into dpat_strumento_calcolo_nominativi_(id,stato,id_anagrafica_nominativo,id_lookup_qualifica,id_dpat_strumento_calcolo_strutture, id_old_anagrafica_nominativo,
			 confermato   , confermato_da,data_conferma, data_scadenza , codice_interno_fk, modified_by, modified ,
			 entered ,entered_by) 
		values(next_id,rec_nominativo_old_struttura.stato,rec_nominativo_old_struttura.id_anagrafica_nominativo, rec_nominativo_old_struttura.id_lookup_qualifica, id_inserito, rec_nominativo_old_struttura.id_old_anagrafica_nominativo, 
			 rec_nominativo_old_struttura.confermato   , rec_nominativo_old_struttura.confermato_da, rec_nominativo_old_struttura.data_conferma, rec_nominativo_old_struttura.data_scadenza , next_id, 291, current_timestamp , 
			current_timestamp , 291)  ;
		
	end loop;
    return id_inserito;		 
END;
$$;


ALTER FUNCTION public.dpat_update_struttura(id_input integer, data_scadenza_input timestamp without time zone, id_asl_input integer, tipo_struttura_input integer, descrizione_lunga_input text, id_utente_input integer, id_padre_input integer) OWNER TO postgres;

--
-- TOC entry 995 (class 1255 OID 16730)
-- Name: fascicoli_ispettivi_lista_globale(integer, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fascicoli_ispettivi_lista_globale(_riferimento_id integer, _riferimento_id_nome_tab text) RETURNS json
    LANGUAGE plpgsql
    AS $$
DECLARE
	output json;
BEGIN

	 output := (SELECT array_to_json(array_agg(row_to_json(t))) FROM (select f.id as "idFascicoloIspettivo", f.numero as "numero", f.data_inizio as "dataInizio", f.entered as "dataInserimento", concat_ws(' ', co.namefirst, 
	                                                                  co.namelast)::text as "utenteInserimento", ls.description as "statoFascicolo", f.data_chiusura as "dataChiusura" 
										from fascicoli_ispettivi f 
										join lookup_stato_fascicolo ls on ls.code = f.stato
										join access a on a.user_id = f.enteredby 
										join contact co on co.contact_id = a.contact_id
										where f.riferimento_id = _riferimento_id and f.riferimento_id_nome_tab = _riferimento_id_nome_tab and f.trashed_date is null
										order by f.data_inizio desc) t);
	return output;
END;
$$;


ALTER FUNCTION public.fascicoli_ispettivi_lista_globale(_riferimento_id integer, _riferimento_id_nome_tab text) OWNER TO postgres;

--
-- TOC entry 996 (class 1255 OID 16731)
-- Name: fascicolo_insert(json, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fascicolo_insert(_json_anagrafica json, _idutente integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$	
DECLARE
	riferimento_id integer;
	riferimento_tab text;
	resultid integer;
BEGIN
	  -- recupero il riferimento anagrafico
	  riferimento_id := _json_anagrafica ->> 'riferimentoId' ;
	  riferimento_tab := _json_anagrafica ->> 'riferimentoIdNomeTab';

	INSERT INTO fascicoli (enteredby, riferimento_id, riferimento_id_nome_tab) values (_idutente,riferimento_id,riferimento_tab)
	returning id into resultid;

	 return resultid;
	 		
END;
$$;


ALTER FUNCTION public.fascicolo_insert(_json_anagrafica json, _idutente integer) OWNER TO postgres;

--
-- TOC entry 997 (class 1255 OID 16732)
-- Name: fascicolo_ispettivo_close(integer, text, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fascicolo_ispettivo_close(_id_fascicolo_ispettivo integer, _data_chiusura text, _anno_protocollo integer, _numero_protocollo integer, _id_utente integer) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
	id_fascicolo_ispettivo_protocollo integer;
BEGIN
	
	update fascicoli_ispettivi set modifiedby = _id_utente, modified= current_timestamp, stato=2, data_chiusura = to_timestamp(_data_chiusura,'YYYY-MM-DD HH:MI:SS') where id = _id_fascicolo_ispettivo;
	insert into fascicoli_ispettivi_protocolli (id_fascicolo_ispettivo, anno_protocollo, numero_protocollo, enteredby, entered) values (_id_fascicolo_ispettivo, _anno_protocollo, _numero_protocollo, _id_utente, now()) returning id into id_fascicolo_ispettivo_protocollo;

	if(id_fascicolo_ispettivo_protocollo > 0) then
		return 'OK, operazione effettuata con successo.';
	else 
		return 'KO, operazione fallita.';
	end if;
	
END;
$$;


ALTER FUNCTION public.fascicolo_ispettivo_close(_id_fascicolo_ispettivo integer, _data_chiusura text, _anno_protocollo integer, _numero_protocollo integer, _id_utente integer) OWNER TO postgres;

--
-- TOC entry 998 (class 1255 OID 16733)
-- Name: fascicolo_ispettivo_delete(integer, text, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fascicolo_ispettivo_delete(_id_fascicolo integer, _note_elimina text, _id_utente integer) RETURNS text
    LANGUAGE plpgsql
    AS $$	
DECLARE
	conta integer;
	msg text;
BEGIN
	conta := (select count(*) from giornate_ispettive where trashed_date is null and id_fascicolo_ispettivo  = _id_fascicolo);
	if conta > 0 then
		msg = 'NON E'' POSSIBILE CANCELLARE IL FASCICOLO IN QUANTO SONO PRESENTI GIORNATE ISPETTIVE.';
	else
		update fascicoli_ispettivi set modifiedby = _id_utente, note_hd=concat_ws('***',note_hd,'Cancellazione fascicolo avvenuta tramite dbi.'), trashed_date=current_timestamp where id = _id_fascicolo;
		msg = 'OK. Il fascicolo ispettivo e'' stato cancellato.';
	end if;

	return msg;	
END;
$$;


ALTER FUNCTION public.fascicolo_ispettivo_delete(_id_fascicolo integer, _note_elimina text, _id_utente integer) OWNER TO postgres;

--
-- TOC entry 999 (class 1255 OID 16734)
-- Name: fascicolo_ispettivo_dettaglio_globale(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fascicolo_ispettivo_dettaglio_globale(_idfascicolo integer) RETURNS json
    LANGUAGE plpgsql
    AS $$	
DECLARE
	
	campiservizio json;
	anagrafica json;
	fascicolo json;
	dati json;
	utente json;
	datifascicolo json;
	finale json;
	statofascicolo json;
	
	rifid integer;
	rifnometab text;
BEGIN

	rifid := (select riferimento_id from fascicoli_ispettivi  where id = _idfascicolo);
	rifnometab := (select c.riferimento_id_nome_tab from fascicoli_ispettivi c where id = _idfascicolo);
	campiservizio := (select json_object_agg(nome,descrizione) from (select 'utenteInserimento' as nome, concat_ws(' ', co.namefirst, co.namelast)::text as descrizione
								        from fascicoli_ispettivi c 
								        join access a on a.user_id = c.enteredby 
								        join contact co on co.contact_id = a.contact_id
									where id = _idfascicolo 
								  union select 'dataInserimento' as nome, entered::text as descrizione from fascicoli_ispettivi where id = _idfascicolo
								  union select 'idFascicoloIspettivo' as nome, id::text as descrizione from fascicoli_ispettivi where id = _idfascicolo
								  ) b);

	anagrafica:= (select json_object_agg(nome,descrizione) from (select 'partitaIva' as nome, trim(partita_iva) as descrizione from ricerche_anagrafiche_old_materializzata  where riferimento_id = rifid and riferimento_id_nome_tab = rifnometab
								  union select 'riferimentoId' as nome,  rifid::text
								  union select 'riferimentoIdNomeTab' as nome,  rifnometab::text 
								  union select 'ragioneSociale' as nome, ragione_sociale as descrizione from ricerche_anagrafiche_old_materializzata  where riferimento_id = rifid and riferimento_id_nome_tab = rifnometab) c);

	datifascicolo := (select json_object_agg(nome,descrizione) from (select 'numero' as nome, numero as descrizione from fascicoli_ispettivi  where id = _idfascicolo
								  union select 'dataInizio' as nome,  data_inizio::text from fascicoli_ispettivi where id = _idfascicolo 
								  ) b);
								  
	statofascicolo := (select json_object_agg(nome,descrizione) from (select 'stato' as nome, ls.description as descrizione from fascicoli_ispettivi f join lookup_stato_fascicolo ls on ls.code=f.stato where id = _idfascicolo
								  union select 'dataChiusura' as nome,  data_chiusura::text from fascicoli_ispettivi where id = _idfascicolo 
								  ) b);
						

	utente := (select json_object_agg(nome,descrizione) from (select 'userId' as nome, enteredby as descrizione from fascicoli_ispettivi where id = _idfascicolo) d); 

	finale := (select unaccent(concat('{',
	(select concat_ws(' ','"Dati":', datifascicolo, ',
	"Anagrafica":', anagrafica, ',
	"Utente":',utente, ',
	"Stato":', statofascicolo, ',
	"CampiServizio":', campiServizio)),'}'))::json);
	
	raise info 'json finale: %', finale;

    	return finale;
END;
$$;


ALTER FUNCTION public.fascicolo_ispettivo_dettaglio_globale(_idfascicolo integer) OWNER TO postgres;

--
-- TOC entry 1000 (class 1255 OID 16735)
-- Name: fascicolo_ispettivo_insert(json, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fascicolo_ispettivo_insert(_json_anagrafica json, _idutente integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$	
DECLARE
	riferimento_id integer;
	riferimento_tab text;
	resultid integer;
BEGIN
	  -- recupero il riferimento anagrafico
	  riferimento_id := _json_anagrafica ->> 'riferimentoId' ;
	  riferimento_tab := _json_anagrafica ->> 'riferimentoIdNomeTab';

	INSERT INTO fascicoli_ispettivi (enteredby, riferimento_id, riferimento_id_nome_tab) values (_idutente,riferimento_id,riferimento_tab)
	returning id into resultid;

	 return resultid;
	 		
END;
$$;


ALTER FUNCTION public.fascicolo_ispettivo_insert(_json_anagrafica json, _idutente integer) OWNER TO postgres;

--
-- TOC entry 1001 (class 1255 OID 16736)
-- Name: fascicolo_ispettivo_insert_globale(json); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.fascicolo_ispettivo_insert_globale(_json_dati json) RETURNS integer
    LANGUAGE plpgsql
    AS $$	
DECLARE
	anagrafica json; 
	utenti json;
	datigenerici json; -- qui dovrebbero essere incluse anche le note
	
	idfascicolo integer;
	idutente integer;
	output integer;
	
BEGIN
	 -- mi ricavo i singoli oggetti JSON per blocchi
	anagrafica :=  _json_dati ->'Anagrafica'; 
	RAISE INFO 'json anagrafica %',anagrafica;

	utenti :=  _json_dati ->'Utente';
	RAISE INFO 'json utenti %',utenti;
	
	idutente := utenti -> 'userId';
	RAISE INFO 'idutente %',idutente;

	datigenerici := _json_dati ->'Dati';
	RAISE INFO 'json datigenerici %',datigenerici;

	-- STEP 0: INSERIAMO IL RECORD JSON PER LOGO
	INSERT INTO giornate_ispettive_log_json(enteredby, json_cu) values(idutente,_json_dati);
	
	-- chiamo la dbi per il fascicolo
	idfascicolo := (SELECT * from public.fascicolo_ispettivo_insert(anagrafica, idutente));
	
	-- STEP 3: INSERIAMO I DATI DEL CU + linee
	update fascicoli_ispettivi set 
	data_inizio  = (datigenerici ->> 'dataInizio')::timestamp without time zone, 
	numero =  (datigenerici ->> 'numero')::text
        where id = idfascicolo;
	

    	 return idfascicolo;
END;
$$;


ALTER FUNCTION public.fascicolo_ispettivo_insert_globale(_json_dati json) OWNER TO postgres;

--
-- TOC entry 1002 (class 1255 OID 16737)
-- Name: genera_numero_registrazione_da_comune(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.genera_numero_registrazione_da_comune(_id_comune integer) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE 

	_numero_registrazione text;
	_codComune text;
	_codProvincia text;

        
BEGIN	

	select comuni1.cod_comune, lp.cod_provincia  into _codComune, _codProvincia 
		from comuni1 join lookup_province lp on lp.code =  comuni1.cod_provincia::int 
			where comuni1.id = _id_comune;
	_numero_registrazione:= (select genera_numero_registrazione from anagrafica.genera_numero_registrazione(_codComune, _codProvincia));

	return _numero_registrazione;
	      
END;
$$;


ALTER FUNCTION public.genera_numero_registrazione_da_comune(_id_comune integer) OWNER TO postgres;

--
-- TOC entry 1003 (class 1255 OID 16738)
-- Name: gestione_id_alternativo(integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.gestione_id_alternativo(idinput integer, tipoinput integer) RETURNS TABLE(return_id integer, return_alt_id integer, return_code integer, return_nome_campo text, return_nome_tabella text)
    LANGUAGE plpgsql STRICT
    AS $$
DECLARE
	r RECORD;	
BEGIN
	FOR return_id, return_alt_id, return_code,  return_nome_campo, return_nome_tabella
	in

select 

case when tipoInput=-1 then (idInput - valore_start) 
else -1 end as id, 
case when tipoInput>-1 then (idInput + valore_start) 
else -1 end as alt_id, code, nome_campo, nome_tabella
from alt_partizioni where 1=1

and ((tipoInput=-1 and valore_start <= idInput and valore_end >= idInput)
or tipoInput>-1)

and ((tipoInput>-1 and code = tipoInput)
or tipoInput=-1)

    LOOP
        RETURN NEXT;
     END LOOP;
     RETURN;
 END;
$$;


ALTER FUNCTION public.gestione_id_alternativo(idinput integer, tipoinput integer) OWNER TO postgres;

--
-- TOC entry 1004 (class 1255 OID 16739)
-- Name: gestione_ml_id(integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.gestione_ml_id(idinput integer, tipoinput integer) RETURNS TABLE(return_id integer, return_ml_id integer, return_code integer, return_nome_campo text, return_nome_tabella text)
    LANGUAGE plpgsql STRICT
    AS $$
DECLARE
	r RECORD;	
BEGIN
	FOR return_id, return_ml_id, return_code,  return_nome_campo, return_nome_tabella
	in
select 
case when tipoInput=-1 then (idInput - valore_start) 
else -1 end as id, 
case when tipoInput>-1 then (idInput + valore_start) 
else -1 end as alt_id, code, nome_campo, nome_tabella
from ml_partizioni where 1=1
and ((tipoInput=-1 and valore_start <= idInput and valore_end >= idInput)
or tipoInput>-1)
and ((tipoInput>-1 and code = tipoInput)
or tipoInput=-1)

    LOOP
        RETURN NEXT;
     END LOOP;
     RETURN;
 END;
$$;


ALTER FUNCTION public.gestione_ml_id(idinput integer, tipoinput integer) OWNER TO postgres;

--
-- TOC entry 1005 (class 1255 OID 16740)
-- Name: get_all_data_from_gisa_anag(text, text, text, text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_all_data_from_gisa_anag(_ragione_sociale text DEFAULT ''::text, _partita_iva text DEFAULT ''::text, _codice_fiscale text DEFAULT ''::text, _asl text DEFAULT ''::text, _comune text DEFAULT ''::text) RETURNS TABLE(riferimento_id integer, riferimento_id_nome_tab text, ragione_sociale character varying, partita_iva character varying, codice_fiscale character varying, nominativo_rappresentante text, comune_leg character varying, provincia_leg text, indirizzo_leg text, comune character varying, provincia_stab text, indirizzo text, latitudine_stab double precision, longitudine_stab double precision, asl_rif integer, asl character varying)
    LANGUAGE plpgsql
    AS $$	
BEGIN
return  query 
  SELECT t1.* 
  FROM dblink('host=dbGISACAMPANIAL dbname=gisa'::text, 'SELECT distinct 
			riferimento_id, riferimento_id_nome_tab, ragione_sociale, partita_iva, codice_fiscale, nominativo_rappresentante
			, comune_leg, provincia_leg, indirizzo_leg, comune, provincia_stab, indirizzo, latitudine_stab, longitudine_stab
			, asl_rif, asl
			from ricerche_anagrafiche_old_materializzata') as t1(
			riferimento_id integer, riferimento_id_nome_tab text, 
			ragione_sociale character varying, partita_iva character varying, 
			codice_fiscale character varying, nominativo_rappresentante text,
			comune_leg character varying, provincia_leg text, indirizzo_leg text, 
			comune character varying, provincia_stab text, indirizzo text,
			latitudine_stab double precision,longitudine_stab double precision, asl_rif integer, asl character varying) 
			where 1=1 
	                and ( _partita_iva ='' or t1.partita_iva ilike  concat('%',_partita_iva,'%')) 
			and ( _codice_fiscale ='' or t1.codice_fiscale ilike concat('%',_codice_fiscale,'%'))  
			and ( _ragione_sociale ='' or t1.ragione_sociale ilike concat('%',_ragione_sociale,'%'))
			and ( _comune ='' or t1.comune ilike concat('%',_comune,'%')) 
			and ( _asl ='' or t1.asl ilike concat('%',_asl,'%')) ;
			
END;  
$$;


ALTER FUNCTION public.get_all_data_from_gisa_anag(_ragione_sociale text, _partita_iva text, _codice_fiscale text, _asl text, _comune text) OWNER TO postgres;

--
-- TOC entry 1006 (class 1255 OID 16741)
-- Name: get_anagrafica_by_id(integer, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_anagrafica_by_id(_riferimento_id integer, _riferimento_id_nome_tab text) RETURNS TABLE(ragione_sociale text, riferimento_id_nome_tab text, riferimento_id integer, partita_iva text, n_reg text)
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN
RETURN QUERY
	 
select distinct m.ragione_sociale::text, m.riferimento_id_nome_tab, m.riferimento_id, m.partita_iva::text, m.n_reg::text 
from ricerche_anagrafiche_old_materializzata m
where m.riferimento_id = _riferimento_id and m.riferimento_id_nome_tab = _riferimento_id_nome_tab ;
END;
$$;


ALTER FUNCTION public.get_anagrafica_by_id(_riferimento_id integer, _riferimento_id_nome_tab text) OWNER TO postgres;

--
-- TOC entry 1007 (class 1255 OID 16742)
-- Name: get_anagrafica_linee_by_id(integer, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_anagrafica_linee_by_id(_riferimento_id integer, _riferimento_id_nome_tab text) RETURNS TABLE(n_linea text, id_linea integer, norma text, macroarea text, aggregazione text, attivita text, codice_macroarea text, codice_aggregazione text, codice_attivita text)
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN
		RETURN QUERY
		select distinct m.n_linea::text, m.id_linea, m.norma, m.macroarea, m.aggregazione, m.attivita, m.codice_macroarea, m.codice_aggregazione, m.codice_attivita 
		from ricerche_anagrafiche_old_materializzata m
		where m.riferimento_id = _riferimento_id and m.riferimento_id_nome_tab = _riferimento_id_nome_tab 
		--and ( _id_linea = -1 or m.id_linea = _id_linea)
		order by id_linea asc;

END;
$$;


ALTER FUNCTION public.get_anagrafica_linee_by_id(_riferimento_id integer, _riferimento_id_nome_tab text) OWNER TO postgres;

--
-- TOC entry 1008 (class 1255 OID 16743)
-- Name: get_anagrafica_matrici(integer, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_anagrafica_matrici(_riferimento_id integer, _riferimento_id_nome_tab text) RETURNS TABLE(code integer, matrice text)
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN
RETURN QUERY
	select t.code, t.description::text
	from lookup_matrice_controlli t 
	left join anag_dati_autorizzativi_matrici am on am.id_matrice = t.code
	left join anag_dati_autorizzativi ag on ag.id = am.id_anag_dati_autorizzativi
	where t.enabled and am.trashed_date is null
	and ag.riferimento_id = _riferimento_id and ag.riferimento_id_nome_tab = _riferimento_id_nome_tab
	and ag.trashed_date is null
	order by t.description;
END;
$$;


ALTER FUNCTION public.get_anagrafica_matrici(_riferimento_id integer, _riferimento_id_nome_tab text) OWNER TO postgres;

--
-- TOC entry 1009 (class 1255 OID 16744)
-- Name: get_campioni_protocolli(integer, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_campioni_protocolli(_idcampione integer, _tipoverbale text) RETURNS TABLE(anno_protocollo integer, numero_protocollo integer, tipo_verbale text, data_protocollo text, id_documento integer, base64file text, id_campione integer)
    LANGUAGE sql
    AS $$
select 	anno_protocollo , numero_protocollo , tipo_verbale , data_protocollo , id_documento, base64file , id_campione      
	from campioni_verbali_protocolli 

					where id_campione = _idcampione and tipo_verbale = _tipoverbale and trashed_date is null order by entered desc limit 1;
    
$$;


ALTER FUNCTION public.get_campioni_protocolli(_idcampione integer, _tipoverbale text) OWNER TO postgres;

--
-- TOC entry 1010 (class 1255 OID 16745)
-- Name: get_categoria_rischio_qualitativa(integer, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_categoria_rischio_qualitativa(_riferimento_id integer, _riferimento_id_nome_tab text) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
	res double precision;
	categoria text;
BEGIN

        res :=  (select * from public.get_categoria_rischio_media(_riferimento_id,_riferimento_id_nome_tab));
        if res >= 0 AND res <= 3.5 then 
		categoria = 'RISCHIO BASSO';
        elsif res > 3.5 and res <= 4.4 then
		categoria = 'RISCHIO MEDIO';
	else 
		categoria = 'RISCHIO ALTO';
	END IF;

	return categoria;
 END;
$$;


ALTER FUNCTION public.get_categoria_rischio_qualitativa(_riferimento_id integer, _riferimento_id_nome_tab text) OWNER TO postgres;

--
-- TOC entry 1011 (class 1255 OID 16746)
-- Name: get_categoria_rischio_quantitativa(integer, text, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_categoria_rischio_quantitativa(_riferimento_id integer DEFAULT '-1'::integer, _riferimento_id_nome_tab text DEFAULT ''::text, _idcu integer DEFAULT '-1'::integer) RETURNS TABLE(categoria_linea integer)
    LANGUAGE plpgsql
    AS $$
DECLARE
   rec integer;
   convert_rif_nome_tab text;
BEGIN

    if _riferimento_id_nome_tab = 'opu_stabilimento' then
	convert_rif_nome_tab = 'opu_relazione_stabilimento_linee_produttive';
    elsif _riferimento_id_nome_tab = 'sintesis_stabilimento' then
	convert_rif_nome_tab = 'sintesis_relazione_stabilimento_linee_produttive';
    else
	convert_rif_nome_tab='organization';
    end if;

    if _idcu > 0 then
	return query 
		select categoria_quantitativa from linee_attivita_controlli_ufficiali where trashed_date is null and id_controllo_ufficiale = _idcu;
    else 
	  FOR rec IN
        select id_linea from ricerche_anagrafiche_old_materializzata  where riferimento_id  = _riferimento_id and riferimento_id_nome_tab = _riferimento_id_nome_tab
     LOOP
        RETURN QUERY
        with cte as (SELECT    
                 -- categoria di rischio da recuperare sia da cu che da EX ANTE
		 categoria_quantitativa --(select categoria_rischio_default from master_list_flag_linee_attivita  where trashed is null and id_linea = (	
					-- select id_linea_produttiva from opu_relazione_stabilimento_linee_produttive  where id = rec)) 
		 from linee_attivita_controlli_ufficiali l
		 join ticket t on t.ticketid = l.id_controllo_ufficiale and l.trashed_date is null and t.trashed_date is null  
		 where id_linea_attivita = rec and t.provvedimenti_prescrittivi = 5 and t.tipologia = 3 --and t.closed is not null 
		 and riferimento_nome_tab  = convert_rif_nome_tab
		 order by t.assigned_date desc limit 1 -- controllo se è opu
		)
	  select 
		  categoria_quantitativa 
	 from cte; --rec in input dovrebbe avere la singola linea
     END LOOP;

    end if;
		
   
END
$$;


ALTER FUNCTION public.get_categoria_rischio_quantitativa(_riferimento_id integer, _riferimento_id_nome_tab text, _idcu integer) OWNER TO postgres;

--
-- TOC entry 1012 (class 1255 OID 16747)
-- Name: get_categorie_merceologiche(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_categorie_merceologiche() RETURNS TABLE(code integer, categoria text)
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN
RETURN QUERY
	select m.code, m.description::text
	from lookup_categoria_merceologica m
	where m.enabled
	order by m.description;
END;
$$;


ALTER FUNCTION public.get_categorie_merceologiche() OWNER TO postgres;

--
-- TOC entry 1013 (class 1255 OID 16748)
-- Name: get_categorizzazzione_osa(integer, timestamp without time zone, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_categorizzazzione_osa(integer, timestamp without time zone, integer) RETURNS public.categorizzazzione_osa
    LANGUAGE plpgsql STRICT
    AS $_$
DECLARE
	cursore 				refcursor ;
	my_record 				categorizzazzione_osa ;
	id_t int					;
	tipo_operatore_t int			;
	categoria_rischio_t int			;
	range_da_t int 				;
	range_a_t int				;
	intervallo_mesi_t int			;
	data_prossumo_cu_t timestamp		;
	query text;
	
BEGIN
	open cursore for select id,tipo_operatore,range_da,range_a,categoria_rischio,intervallo_prossimo_cu_mesi
				from parametri_categorizzazzione_osa  
				where tipo_operatore = $1 	;
								
	LOOP
	fetch cursore into id_t,tipo_operatore_t,range_da_t,range_a_t,categoria_rischio_t,intervallo_mesi_t;
	EXIT WHEN NOT FOUND; 
	
	if( range_a_t !=0)
	then	
		if( $3 >=range_da_t and $3<=range_a_t)
		then
			my_record.tipo_operatore := tipo_operatore_t 	;
			my_record.punteggio	 :=	$3		;
			my_record.categoria_rischio := categoria_rischio_t ;
			my_record.intervallo_mesi := intervallo_mesi_t ;
			my_record.data_controllo :=$2;
			
		end if;
	else
		if($3 >=range_da_t )
		then
			my_record.tipo_operatore := tipo_operatore_t 	;
			my_record.punteggio	 :=	$3		;
			my_record.categoria_rischio := categoria_rischio_t ;
			my_record.intervallo_mesi := intervallo_mesi_t ;
			my_record.data_controllo :=$2;
			
		end if;
	end if;
END LOOP;
close cursore ;


open cursore for select (my_record.data_controllo) +  my_record.intervallo_mesi * interval  '1 month' ;

	fetch cursore into my_record.data_prossimo_controllo;
	return my_record ;
close cursore ;	
END;
$_$;


ALTER FUNCTION public.get_categorizzazzione_osa(integer, timestamp without time zone, integer) OWNER TO postgres;

--
-- TOC entry 235 (class 1259 OID 16749)
-- Name: lookup_org_catrischio; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_org_catrischio (
    code integer NOT NULL,
    description character varying(300) NOT NULL,
    short_description character varying(300),
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true,
    versione double precision,
    versione_alfonso text,
    num_chk integer
);


ALTER TABLE public.lookup_org_catrischio OWNER TO postgres;

--
-- TOC entry 1014 (class 1255 OID 16757)
-- Name: get_checklist_by_idcontrollo(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_checklist_by_idcontrollo(_id_controllo integer) RETURNS SETOF public.lookup_org_catrischio
    LANGUAGE plpgsql
    AS $$
DECLARE
	_riferimento_id_nome_tab text;
	_id_linea_ml integer;
	conta integer;

BEGIN

	conta := (select count(*) from linee_attivita_controlli_ufficiali  where id_controllo_ufficiale = _id_controllo and trashed_date is null);   
	if conta > 0 then
	        _riferimento_id_nome_tab := (select riferimento_nome_tab from linee_attivita_controlli_ufficiali  where id_controllo_ufficiale = _id_controllo and trashed_date is null);
	        if _riferimento_id_nome_tab ilike '%opu_%' then 
			_id_linea_ml := (select id_attivita from get_linee_attivita(-1,'opu_stabilimento', false, _id_controllo));
		elsif _riferimento_id_nome_tab ilike '%sintesis_%' then
			_id_linea_ml := (select coalesce(id_rel_ateco_attivita, id_attivita) from get_linee_attivita(-1,'sintesis_stabilimento', false, _id_controllo));
		else -- si considerano solo i casi organization (pratiche suap e apicoltura al momento non prevedono la gestione)
			_id_linea_ml := (select id_attivita from get_linee_attivita(-1,'organization', false, _id_controllo));
		end if;
		
		RETURN QUERY
		select c.*
		from lookup_org_catrischio c
		left join rel_checklist_sorv_ml rel on rel.id_checklist = c.code
		where c.enabled and rel.enabled and rel.id_linea = _id_linea_ml; 
 	
	end if;
	
   END;
   $$;


ALTER FUNCTION public.get_checklist_by_idcontrollo(_id_controllo integer) OWNER TO postgres;

--
-- TOC entry 1015 (class 1255 OID 16758)
-- Name: get_chiamata_ws_sicra_inserisci_protocollo_e_anagrafiche(integer, text, text, text, text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_chiamata_ws_sicra_inserisci_protocollo_e_anagrafiche(_id_giornata_ispettiva integer, _file text, _oggetto text, _nomeallegato text, _tipofile text, _tipoverbale text) RETURNS text
    LANGUAGE plpgsql STRICT
    AS $$
DECLARE
	ret text;
	_cognomenome text;
	_commento text;
BEGIN

_cognomenome := 'GISA';
_commento := 'Documento caricato per Verbale: '||_tipoverbale||' su Giornata Ispettiva: '||_id_giornata_ispettiva;

select 
concat('<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
 <soapenv:Header/>
   <soapenv:Body>
 <tem:InserisciProtocolloEAnagrafiche>
 <tem:ProtoIn>
   <tem:TipoDocumento>', _tipoverbale, '</tem:TipoDocumento>
   <tem:Oggetto>', _oggetto, '</tem:Oggetto>
   <tem:Origine>A</tem:Origine>
   <tem:MittentiDestinatari>
   <tem:item>
   <tem:CognomeNome>', _cognomenome, '</tem:CognomeNome>
   </tem:item>
   </tem:MittentiDestinatari>
   <tem:AggiornaAnagrafiche>N</tem:AggiornaAnagrafiche>
   <tem:Allegati>
   <tem:item>
   <tem:TipoFile>', _tipofile, '</tem:TipoFile>
   <tem:Image>', _file, '</tem:Image>
   <tem:Commento>', _commento, '</tem:Commento>
   <tem:NomeAllegato>', _nomeallegato, '</tem:NomeAllegato>
   </tem:item>
   </tem:Allegati>
   </tem:ProtoIn>
   </tem:InserisciProtocolloEAnagrafiche>
   </soapenv:Body>
</soapenv:Envelope>') into ret;


 RETURN ret;
 END;
$$;


ALTER FUNCTION public.get_chiamata_ws_sicra_inserisci_protocollo_e_anagrafiche(_id_giornata_ispettiva integer, _file text, _oggetto text, _nomeallegato text, _tipofile text, _tipoverbale text) OWNER TO postgres;

--
-- TOC entry 1016 (class 1255 OID 16759)
-- Name: get_chiamata_ws_sicra_inserisci_protocollo_e_anagrafiche(text, text, text, text, text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_chiamata_ws_sicra_inserisci_protocollo_e_anagrafiche(_entita text, _file text, _oggetto text, _nomeallegato text, _tipofile text, _tipoverbale text) RETURNS text
    LANGUAGE plpgsql STRICT
    AS $$

DECLARE
	ret text;
	_cognomenome_rappresentante text;
	_cf_rappresentante text;
	_commento text;
	_id_entita integer;
	_tipo_entita text;
BEGIN

_commento := 'Documento caricato per verbale: '||_tipoverbale||' su ' ||_entita;

select split_part(_entita, ':', 1), split_part(_entita, ':', 2)::int into _tipo_entita, _id_entita;

IF _tipo_entita ilike '%Giornata Ispettiva%' THEN

select r.nominativo_rappresentante, r.codice_fiscale_rappresentante into _cognomenome_rappresentante, _cf_rappresentante
from fascicoli_ispettivi f
left join ricerche_anagrafiche_old_materializzata r on r.riferimento_id = f.riferimento_id and r.riferimento_id_nome_tab = f.riferimento_id_nome_tab
left join giornate_ispettive g on g.id_fascicolo_ispettivo = f.id
where g.id = _id_entita limit 1;

ELSIF _tipo_entita ilike '%Campione%' THEN

select r.nominativo_rappresentante, r.codice_fiscale_rappresentante into _cognomenome_rappresentante, _cf_rappresentante
from fascicoli_ispettivi f
left join ricerche_anagrafiche_old_materializzata r on r.riferimento_id = f.riferimento_id and r.riferimento_id_nome_tab = f.riferimento_id_nome_tab
left join giornate_ispettive g on g.id_fascicolo_ispettivo = f.id
left join campioni c on c.id_giornata_ispettiva = g.id
where c.id = _id_entita limit 1;

END IF;

IF length(trim(_cognomenome_rappresentante)) = 0  OR _cognomenome_rappresentante IS NULL THEN
_cognomenome_rappresentante := '-ASSENTE-';
END IF;
IF length(trim(_cf_rappresentante)) = 0 OR _cf_rappresentante IS NULL THEN
_cf_rappresentante := '-ASSENTE-';
END IF;

RAISE INFO '_cognomenome_rappresentante %', _cognomenome_rappresentante;
RAISE INFO '_cf_rappresentante %', _cf_rappresentante;

select 
concat('<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
 <soapenv:Header/>
   <soapenv:Body>
 <tem:InserisciProtocolloEAnagrafiche>
 <tem:ProtoIn>
   <tem:TipoDocumento>', 'GISA', '</tem:TipoDocumento>
   <tem:Oggetto>', _oggetto, '</tem:Oggetto>
   <tem:Origine>A</tem:Origine>
   <tem:MittentiDestinatari>
   <tem:item>
   <tem:CognomeNome>', _cognomenome_rappresentante, '</tem:CognomeNome>
   <tem:CodiceFiscale>', _cf_rappresentante, '</tem:CodiceFiscale>
   </tem:item>
   </tem:MittentiDestinatari>
   <tem:AggiornaAnagrafiche>N</tem:AggiornaAnagrafiche>
   <tem:Allegati>
   <tem:item>
   <tem:TipoFile>', _tipofile, '</tem:TipoFile>
   <tem:Image>', _file, '</tem:Image>
   <tem:Commento>', _commento, '</tem:Commento>
   <tem:NomeAllegato>', _nomeallegato, '</tem:NomeAllegato>
   </tem:item>
   </tem:Allegati>
   </tem:ProtoIn>
   </tem:InserisciProtocolloEAnagrafiche>
   </soapenv:Body>
</soapenv:Envelope>') into ret;


 RETURN ret;
 END;
$$;


ALTER FUNCTION public.get_chiamata_ws_sicra_inserisci_protocollo_e_anagrafiche(_entita text, _file text, _oggetto text, _nomeallegato text, _tipofile text, _tipoverbale text) OWNER TO postgres;

--
-- TOC entry 1017 (class 1255 OID 16760)
-- Name: get_chiamata_ws_sicra_leggi_protocollo(integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_chiamata_ws_sicra_leggi_protocollo(_anno integer, _numero integer) RETURNS text
    LANGUAGE plpgsql STRICT
    AS $$
DECLARE
	ret text;	
BEGIN


select 
concat('<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:LeggiProtocollo>
         <tem:AnnoProtocollo>', _anno, '</tem:AnnoProtocollo>
         <tem:NumeroProtocollo>', _numero, '</tem:NumeroProtocollo>
      </tem:LeggiProtocollo>
   </soapenv:Body>
</soapenv:Envelope>') into ret;


 RETURN ret;
 END;
$$;


ALTER FUNCTION public.get_chiamata_ws_sicra_leggi_protocollo(_anno integer, _numero integer) OWNER TO postgres;

--
-- TOC entry 1018 (class 1255 OID 16761)
-- Name: get_codice_richiesto_ml8(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_codice_richiesto_ml8(idlinea integer) RETURNS integer
    LANGUAGE plpgsql STRICT
    AS $$
DECLARE
codiceNazionale text;
output integer;
BEGIN
output := -1;
codiceNazionale:=(select codice_nazionale_richiesto from master_list_linea_attivita where id = idlinea);


IF (codiceNazionale <> ''::text)
THEN output:= 1;
END IF;

IF (codiceNazionale = 'API'::text)
THEN output:= 2;
END IF;

return output ;
 END;
$$;


ALTER FUNCTION public.get_codice_richiesto_ml8(idlinea integer) OWNER TO postgres;

--
-- TOC entry 1019 (class 1255 OID 16762)
-- Name: get_codici_evento_motivo_cu(integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_codici_evento_motivo_cu(_idindicatore integer DEFAULT NULL::integer, _cod_raggruppamento integer DEFAULT NULL::integer) RETURNS text[]
    LANGUAGE plpgsql
    AS $$
DECLARE  
 eventi text[];  
BEGIN 

IF _idindicatore = -1 THEN _idindicatore := null; END IF;
IF _cod_raggruppamento = -1 THEN _cod_raggruppamento := null; END IF;

IF _cod_raggruppamento is null THEN
select cod_raggruppamento into _cod_raggruppamento from dpat_indicatore_new where id = _idindicatore;
_idindicatore := null;
END IF;

IF _idindicatore is null AND _cod_raggruppamento is null THEN
return eventi;
END IF;

select array_agg(mot.codice_evento) into eventi
from lookup_eventi_motivi_cu mot
join rel_motivi_eventi_cu rel on rel.id_evento_cu = mot.code and rel.trashed_date is null
where 
( _idindicatore is null or rel.id_indicatore = _idindicatore )and 
(_cod_raggruppamento is null or rel.cod_raggrup_ind = _cod_raggruppamento);

return eventi;
END $$;


ALTER FUNCTION public.get_codici_evento_motivo_cu(_idindicatore integer, _cod_raggruppamento integer) OWNER TO postgres;

--
-- TOC entry 1020 (class 1255 OID 16763)
-- Name: get_comuni(integer, character varying, character varying, integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_comuni(_id integer DEFAULT NULL::integer, _nome character varying DEFAULT NULL::character varying, _cod_regione character varying DEFAULT NULL::character varying, _id_provincia integer DEFAULT NULL::integer, _id_asl integer DEFAULT NULL::integer) RETURNS TABLE(id integer, cod_comune character varying, cod_regione character varying, cod_provincia integer, nome character varying, istat character varying, cap character varying, cod_nazione integer, id_asl integer)
    LANGUAGE sql
    AS $$
 SELECT id,
    cod_comune, 
    cod_regione, 
    cod_provincia::integer,
    nome,
    istat,
    cap,
    cod_nazione,
    codiceistatasl::integer as _id_asl
from public.comuni1 c
where 
    (_id is null or c.id = _id) 
    and (_nome is null or c.nome ilike _nome || '%')
    and (_cod_regione is null or c.cod_regione ilike _cod_regione || '%')
    and (cod_provincia::integer is null or c.cod_provincia::integer = _id_provincia)
    and (_id_asl is null or c.codiceistatasl::integer = _id_asl)

order by nome $$;


ALTER FUNCTION public.get_comuni(_id integer, _nome character varying, _cod_regione character varying, _id_provincia integer, _id_asl integer) OWNER TO postgres;

--
-- TOC entry 1021 (class 1255 OID 16764)
-- Name: get_cu_richiede_checklist_libera(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_cu_richiede_checklist_libera(idcu integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
   DECLARE
flag boolean;   

altId integer;
stabId integer;
provvedimenti integer;
idLinea integer;

BEGIN
flag := false;
provvedimenti := -1;
idLinea := -1;

altId := (select alt_id from ticket where ticketid = idcu);

if altId<=0 THEN
return false;
END IF;

stabId := (select id from sintesis_stabilimento where alt_id = altId);

provvedimenti := (select provvedimenti_prescrittivi from ticket where ticketid = idCu);
if provvedimenti <> 5 THEN
return false;
END IF; 

idLinea := (select rel.id_linea_produttiva from sintesis_relazione_stabilimento_linee_produttive rel
join ml8_linee_attivita_nuove_materializzata linee on linee.id_nuova_linea_attivita = rel.id_linea_produttiva
join opu_lookup_norme_master_list norme on norme.code = linee.id_norma
where norme.codice_norma ilike '1069-09' and rel.id_stabilimento = stabId limit 1);

if idLinea > 0 THEN
flag := true;
END IF;


	RETURN flag;
	
END
$$;


ALTER FUNCTION public.get_cu_richiede_checklist_libera(idcu integer) OWNER TO postgres;

--
-- TOC entry 1022 (class 1255 OID 16765)
-- Name: get_cu_richiede_checklist_macelli(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_cu_richiede_checklist_macelli(idcu integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
   DECLARE
flag boolean;   
idlinea integer;
idpiano integer;

altId integer;
stabId integer;
tipoPartizione integer;

BEGIN
	flag := false;
tipoPartizione := -1;
idlinea := -1;
idpiano := -1;

altId := (select alt_id from ticket where ticketid = idcu);
stabId := (select id_stabilimento from ticket where ticketid = idcu);

if altId > 0 THEN
tipoPartizione := (select return_code from gestione_id_alternativo(100000001, -1));
END IF;

if tipoPartizione = -1 and stabId > 0 THEN
tipoPartizione := 2;
END IF;

IF tipoPartizione = 6 or tipoPartizione = 2 

THEN
idlinea := (
--select slac.id_linea_attivita from sintesis_linee_attivita_controlli_ufficiali slac
--join sintesis_relazione_stabilimento_linee_produttive rel on slac.id_linea_attivita = rel.id
--join ml8_linee_attivita_nuove_materializzata linee on linee.id_nuova_linea_attivita = rel.id_linea_produttiva
--where slac.id_controllo_ufficiale = idcu  and linee.codice_attivita in ('MS.B-MS.B10-MS.B10.100', 'MS.040-MS.040.200-852IT5A101') 
select slac.id_linea_attivita from 
linee_attivita_controlli_ufficiali slac
where slac.id_controllo_ufficiale = idcu  
and slac.trashed_date is null and codice_linea in ('MS.B-MS.B10-MS.B10.100', 'MS.040-MS.040.200-852IT5A101') 
limit 1);
END IF;

--IF tipoPartizione = 2 THEN

--idlinea := (
--select olac.id_linea_attivita from opu_linee_attivita_controlli_ufficiali olac
--join opu_relazione_stabilimento_linee_produttive rel on olac.id_linea_attivita = rel.id
--join ml8_linee_attivita_nuove_materializzata linee on linee.id_nuova_linea_attivita = rel.id_linea_produttiva
--where olac.id_controllo_ufficiale = idcu and linee.codice_attivita in ('MS.B-MS.B10-MS.B10.100', 'MS.040-MS.040.200-852IT5A101') limit 1);

--END IF;

idpiano := (select tcu.pianomonitoraggio from tipocontrolloufficialeimprese tcu 
join dpat_indicatore_new ind on ind.id = tcu.pianomonitoraggio
where tcu.idcontrollo = idcu and tcu.enabled and ind.alias_indicatore ilike 'A13_U'
limit 1);

IF idlinea>0 and idpiano>0 THEN
flag := true;
END IF;
	RETURN flag;
	
END
$$;


ALTER FUNCTION public.get_cu_richiede_checklist_macelli(idcu integer) OWNER TO postgres;

--
-- TOC entry 1023 (class 1255 OID 16766)
-- Name: get_dati_acque_reflue(integer, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_dati_acque_reflue(_riferimento_id integer, _riferimento_id_nome_tab text) RETURNS TABLE(id integer, depurazione_reflui boolean, id_stato_impianto integer, gestore_impianto text, id_processo_depurativo integer, potenzialita_impianto_ae text, recettore_scarico text, recettore_finale text, codice_ulia text, enteredby integer, modifiedby integer, entered timestamp without time zone, modified timestamp without time zone, trashed_date timestamp without time zone, riferimento_id integer, riferimento_id_nome_tab text)
    LANGUAGE plpgsql
    AS $$
DECLARE
	
BEGIN 
	
	RETURN  query 
		select * from anag_acque_reflue;
END;
$$;


ALTER FUNCTION public.get_dati_acque_reflue(_riferimento_id integer, _riferimento_id_nome_tab text) OWNER TO postgres;

--
-- TOC entry 1024 (class 1255 OID 16767)
-- Name: get_dati_autorizzativi(integer, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_dati_autorizzativi(_riferimento_id integer, _riferimento_id_nome_tab text) RETURNS TABLE(id integer, id_aia text, tipo_autorizzazione integer, num_decreto text, data_decreto text, nota text, burc text, enteredby integer, modifiedby integer, entered timestamp without time zone, modified timestamp without time zone, trashed_date timestamp without time zone, riferimento_id integer, riferimento_id_nome_tab text)
    LANGUAGE plpgsql
    AS $$
DECLARE
	
BEGIN 
	
	RETURN QUERY
		select o.id,  o.id_aia, o.tipo_autorizzazione, o.num_decreto, o.data_decreto, o.nota, o.burc, o.enteredby, o.modifiedby, o.entered, o.modified, o.trashed_date,
		o.riferimento_id, o.riferimento_id_nome_tab
		from anag_dati_autorizzativi o 
		left join lookup_autorizzazione_tipo l on l.code::integer = o.tipo_autorizzazione
		where o.riferimento_id = _riferimento_id and o.riferimento_id_nome_tab =  _riferimento_id_nome_tab
		and o.trashed_date is null;	

END;
$$;


ALTER FUNCTION public.get_dati_autorizzativi(_riferimento_id integer, _riferimento_id_nome_tab text) OWNER TO postgres;

--
-- TOC entry 1025 (class 1255 OID 16768)
-- Name: get_dati_autorizzativi_matrici(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_dati_autorizzativi_matrici(_id_dati_autorizzativi integer) RETURNS TABLE(id integer, id_matrice integer, id_anag_dati_autorizzativi integer, entered timestamp without time zone, enteredby integer, modified timestamp without time zone, modifiedby integer, trashed_date timestamp without time zone)
    LANGUAGE plpgsql
    AS $$
DECLARE
	
BEGIN 
	
	RETURN QUERY
		select o.id, o.id_matrice, o.id_anag_dati_autorizzativi, o.entered, o.enteredby, o.modified, o.modifiedby, o.trashed_date 
		from anag_dati_autorizzativi_matrici o  
		where o.id_anag_dati_autorizzativi = _id_dati_autorizzativi and o.trashed_date is null;	

END;
$$;


ALTER FUNCTION public.get_dati_autorizzativi_matrici(_id_dati_autorizzativi integer) OWNER TO postgres;

--
-- TOC entry 1026 (class 1255 OID 16769)
-- Name: get_dipartimento(integer, text, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_dipartimento(_riferimento_id integer, _riferimento_id_nome_tab text, _id_utente integer) RETURNS TABLE(id integer, nome text)
    LANGUAGE plpgsql
    AS $$
DECLARE
	id_asl_recuperato integer;
	ruolo_utente integer;
	asl_recuperata text;
	id_asl_utente integer;
	asl_utente text;
BEGIN
	-- recupero ruolo utente
	ruolo_utente := (select role_id from access_ where user_id  = _id_utente);
	raise info 'ruolo_utente: %', ruolo_utente;
	-- recupero ASL dello stabilimento
	id_asl_recuperato := (select asl_rif from ricerche_anagrafiche_old_materializzata where 
			      riferimento_id = _riferimento_id and riferimento_id_nome_tab = _riferimento_id_nome_tab and tipo_attivita =1 limit 1);
	asl_recuperata := (select asl from ricerche_anagrafiche_old_materializzata where  
			      riferimento_id = _riferimento_id and riferimento_id_nome_tab = _riferimento_id_nome_tab and tipo_attivita =1 limit 1);	
	-- recupero ASL dell'utente
	select ad.site_id, lsi.description into id_asl_utente, asl_utente
	from access_dati ad left join lookup_site_id lsi on lsi.code = ad.site_id
	where ad.user_id = _id_utente and ad.site_id > 0;		      	

	raise info 'id_asl_recuperato: %', id_asl_recuperato;
	raise info 'asl_recuperata: %', asl_recuperata;
	raise info 'id_asl_utente: %', id_asl_utente;
	raise info 'asl_utente: %', asl_utente;
			      	      	      
	-- se lo stabilimento è fisso, recupero ASL 
	if id_asl_recuperato > 0 then
		return query select id_asl_recuperato, asl_recuperata;
	-- se lo stabilimento è mobile e l'utente ha l'ASL, recupero ASL
	elsif (id_asl_recuperato is null or id_asl_recuperato <= 0) and id_asl_utente > 0 then
		return query select id_asl_utente, asl_utente;
	else -- è mobile o è un altro scenario...
		return query select code, description::text from lookup_site_id where enabled and code <> 16 order by code;
	end if;
	
 END;
$$;


ALTER FUNCTION public.get_dipartimento(_riferimento_id integer, _riferimento_id_nome_tab text, _id_utente integer) OWNER TO postgres;

--
-- TOC entry 1159 (class 1255 OID 21497)
-- Name: get_documenti_campioni(text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_documenti_campioni(cf text) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE esito text;
BEGIN

select json_agg(
json_build_object(
    'TipoVerbale', cp.tipo_verbale, 
	'GiornataIspettiva', cp.id_campione, 
	'AnnoProtocollo', cp.anno_protocollo, 
	'DataProtocollo', cp.data_protocollo, 
	'NumeroProtocollo', cp.numero_protocollo,
    'IdFascicoloIspettivo', gi.id_fascicolo_ispettivo, 
	'TipoTecnica', ltc.description, 
	'RagioneSociale', ric.ragione_sociale))
from campioni_verbali_protocolli cp
left join campioni ca on ca.id = cp.id_campione
left join giornate_ispettive gi on ca.id_giornata_ispettiva = gi.id
left join lookup_tipo_controllo ltc on ltc.code = gi.id_tecnica
left join fascicoli_ispettivi fi on fi.id = gi.id_fascicolo_ispettivo
left join ricerche_anagrafiche_old_materializzata ric on ric.riferimento_id = fi.riferimento_id and ric.riferimento_id_nome_tab = fi.riferimento_id_nome_tab
where cp.esito = 'OK' and cp.cf_rappresentante ilike cf into esito;

IF (esito is null)
THEN esito = '[{}]';
END IF;

 RETURN esito;
 END;
$$;


ALTER FUNCTION public.get_documenti_campioni(cf text) OWNER TO postgres;

--
-- TOC entry 1158 (class 1255 OID 21496)
-- Name: get_documenti_giornate_ispettive(text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_documenti_giornate_ispettive(cf text) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE esito text;
BEGIN

SELECT json_agg(
json_build_object(
    'TipoVerbale', gp.tipo_verbale, 
	'GiornataIspettiva', gp.id_giornata_ispettiva, 
	'AnnoProtocollo', gp.anno_protocollo, 
	'DataProtocollo', gp.data_protocollo, 
	'NumeroProtocollo', gp.numero_protocollo,
    'IdFascicoloIspettivo', gi.id_fascicolo_ispettivo, 
	'TipoTecnica', ltc.description, 
	'RagioneSociale', ric.ragione_sociale))
from giornate_ispettive_verbali_protocolli gp
left join giornate_ispettive gi on gp.id_giornata_ispettiva = gi.id
left join lookup_tipo_controllo ltc on ltc.code = gi.id_tecnica
left join fascicoli_ispettivi fi on fi.id = gi.id_fascicolo_ispettivo
left join ricerche_anagrafiche_old_materializzata ric on ric.riferimento_id = fi.riferimento_id and ric.riferimento_id_nome_tab = fi.riferimento_id_nome_tab
where gp.esito = 'OK' and gp.cf_rappresentante ilike cf into esito;

IF (esito is null)
THEN esito = '[{}]';
END IF;

 RETURN esito;
 END;
$$;


ALTER FUNCTION public.get_documenti_giornate_ispettive(cf text) OWNER TO postgres;

--
-- TOC entry 236 (class 1259 OID 16770)
-- Name: emissioni_in_atmosfera_camini; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.emissioni_in_atmosfera_camini (
    id integer NOT NULL,
    codice_camino text,
    fasi_lavorativa text,
    inquinanti text,
    sistema_abbattimento text
);


ALTER TABLE public.emissioni_in_atmosfera_camini OWNER TO postgres;

--
-- TOC entry 1027 (class 1255 OID 16775)
-- Name: get_emissioni_atmosfera_camini(integer, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_emissioni_atmosfera_camini(_riferimento_id integer, _riferimento_id_nome_tab text) RETURNS SETOF public.emissioni_in_atmosfera_camini
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN
RETURN QUERY
	select *
	from  emissioni_in_atmosfera_camini;
END;
$$;


ALTER FUNCTION public.get_emissioni_atmosfera_camini(_riferimento_id integer, _riferimento_id_nome_tab text) OWNER TO postgres;

--
-- TOC entry 1028 (class 1255 OID 16776)
-- Name: get_esami_documentazione(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_esami_documentazione(_id_tecnica integer) RETURNS TABLE(code integer, esame text, id_tecnica integer)
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN
RETURN QUERY
	select e.code, e.description::text, e.id_tecnica
	from lookup_esami e
	where e.enabled
	and ( _id_tecnica = -1 or e.id_tecnica = _id_tecnica)
	order by e.id_tecnica, e.description;
END;
$$;


ALTER FUNCTION public.get_esami_documentazione(_id_tecnica integer) OWNER TO postgres;

--
-- TOC entry 1029 (class 1255 OID 16777)
-- Name: get_fascicoli_ispettivi_protocolli(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_fascicoli_ispettivi_protocolli(_idfascicolo integer) RETURNS TABLE(anno_protocollo integer, numero_protocollo integer, id_fascicolo_ispettivo integer)
    LANGUAGE sql
    AS $$
select 	anno_protocollo , numero_protocollo ,  id_fascicolo_ispettivo      
	from fascicoli_ispettivi_protocolli 

					where id_fascicolo_ispettivo = _idfascicolo and trashed_date is null order by entered desc limit 1;
    
$$;


ALTER FUNCTION public.get_fascicoli_ispettivi_protocolli(_idfascicolo integer) OWNER TO postgres;

--
-- TOC entry 1030 (class 1255 OID 16778)
-- Name: get_fasi_lavorazione(integer, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_fasi_lavorazione(_riferimento_id integer, _riferimento_id_nome_tab text) RETURNS TABLE(id integer, tipo_quadro text, tipo_impianto text, punti_emissione text, fasi_lavorazione text, inquinanti text, impianti_abbattimento text, entered timestamp without time zone, enteredby integer, trashed_date timestamp without time zone, modified timestamp without time zone, modifiedby integer, selezionato boolean)
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

	RETURN QUERY
	select f.*, a.entered, a.enteredby, a.trashed_date, a.modified, a.modifiedby, 
	case when a.riferimento_id is not null then true else false end as selezionato
	from fasi_lavorazione f 
	left join anagrafica_fasi_lavorazione a on a.id_fase_lavorazione = f.id and a.riferimento_id = _riferimento_id and a.riferimento_id_nome_tab = _riferimento_id_nome_tab
	where a.trashed_date is null; 
	
END;
$$;


ALTER FUNCTION public.get_fasi_lavorazione(_riferimento_id integer, _riferimento_id_nome_tab text) OWNER TO postgres;

--
-- TOC entry 1031 (class 1255 OID 16779)
-- Name: get_giornata_ispettiva_gruppo_ispettivo_componenti(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_giornata_ispettiva_gruppo_ispettivo_componenti(_id_giornata_ispettiva integer) RETURNS TABLE(id integer, nominativo text, id_struttura integer, nome_struttura text, id_qualifica integer, nome_qualifica text)
    LANGUAGE plpgsql
    AS $$

BEGIN
	
	return query
		select distinct c.id_componente, concat_ws(' ', cc.namefirst, cc.namelast)::text, c.id_struttura, c.nome_struttura::text, ac.role_id, r.role::text
		from giornata_ispettiva_gruppo_ispettivo c
	        left join access_ ac on ac.user_id = c.id_componente 
	        left join role r on r.role_id= ac.role_id
	        left join contact cc on cc.contact_id = ac.contact_id 
		where id_giornata_ispettiva = _id_giornata_ispettiva
		order by 4,2 asc; 

END;
$$;


ALTER FUNCTION public.get_giornata_ispettiva_gruppo_ispettivo_componenti(_id_giornata_ispettiva integer) OWNER TO postgres;

--
-- TOC entry 1162 (class 1255 OID 21698)
-- Name: get_giornate_ispettive_allegati(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_giornate_ispettive_allegati(_id_giornata_ispettiva integer) RETURNS TABLE(codice_allegato text, nome_allegato text, oggetto_allegato text, entered timestamp without time zone, enteredby integer, id_giornata_ispettiva integer)
    LANGUAGE sql
    AS $$

select 	codice_allegato , nome_allegato , oggetto_allegato, entered , enteredby , id_giornata_ispettiva      
	from giornate_ispettive_allegati

					where id_giornata_ispettiva = _id_giornata_ispettiva and trashed_date is null order by entered desc;
    
$$;


ALTER FUNCTION public.get_giornate_ispettive_allegati(_id_giornata_ispettiva integer) OWNER TO postgres;

--
-- TOC entry 1032 (class 1255 OID 16780)
-- Name: get_giornate_ispettive_protocolli(integer, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_giornate_ispettive_protocolli(_id_giornata_ispettiva integer, _tipoverbale text) RETURNS TABLE(anno_protocollo integer, numero_protocollo integer, tipo_verbale text, data_protocollo text, id_documento integer, base64file text, id_giornata_ispettiva integer)
    LANGUAGE sql
    AS $$
select 	anno_protocollo , numero_protocollo , tipo_verbale , data_protocollo , id_documento, base64file , id_giornata_ispettiva      
	from giornate_ispettive_verbali_protocolli 

					where id_giornata_ispettiva = _id_giornata_ispettiva and tipo_verbale = _tipoverbale and trashed_date is null order by entered desc limit 1;
    
$$;


ALTER FUNCTION public.get_giornate_ispettive_protocolli(_id_giornata_ispettiva integer, _tipoverbale text) OWNER TO postgres;

--
-- TOC entry 1033 (class 1255 OID 16781)
-- Name: get_gruppo_ispettivo_componenti(integer, integer, integer, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_gruppo_ispettivo_componenti(_anno integer DEFAULT NULL::integer, _id_qualifica integer DEFAULT '-1'::integer, _id_dipartimento integer DEFAULT '-1'::integer, _id_struttura text DEFAULT ''::text) RETURNS TABLE(id integer, nominativo text, id_struttura integer, nome_struttura text, id_qualifica integer, nome_qualifica text)
    LANGUAGE plpgsql
    AS $$
DECLARE
	lista_strutture text;
BEGIN
	lista_strutture := (select replace(replace(_id_struttura,'(',''''),')',''''));
	raise info 'lista: %', lista_strutture;
	raise info 'string to array input: %', string_to_array(lista_strutture,',');
	return query
		select d.id_anagrafica_nominativo, d.nominativo, d.id_struttura_semplice, concat_ws('->', (select description from lookup_site_id where enabled and code = d.id_asl),d.desc_strutt_complessa,d.desc_strutt_semplice), _id_qualifica, d.qualifica
		from public.dpat_get_nominativi(_id_dipartimento::integer, _anno::integer, null::text,null::integer,null::text,null,null, _id_qualifica) d
		--where 1=1 and (_id_struttura = '' or string_to_array(d.id_Struttura_semplice::text,',') <@ string_to_array('8167,8365'::text,',')); 
		where 1=1 and (_id_struttura = '' or string_to_array(d.id_Struttura_semplice::text,',') <@ string_to_array(lista_strutture,','))
		order by 4,2 asc; 

END;
$$;


ALTER FUNCTION public.get_gruppo_ispettivo_componenti(_anno integer, _id_qualifica integer, _id_dipartimento integer, _id_struttura text) OWNER TO postgres;

--
-- TOC entry 1034 (class 1255 OID 16782)
-- Name: get_gruppo_ruolo_utente(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_gruppo_ruolo_utente(_id_utente integer) RETURNS TABLE(id_gruppo_ruolo integer, descrizione_gruppo_ruolo text)
    LANGUAGE sql
    AS $$
select g.code as id_gruppo_ruolo, g.description as descrizione_gruppo_ruolo
FROM access a
LEFT JOIN rel_gruppo_ruoli rgr on rgr.id_ruolo = a.role_id
LEFT JOIN lookup_gruppo_ruoli g on g.code = rgr.id_gruppo
where a.user_id = _id_utente and g.code in (11,15,16) 
UNION
select g.code as id_gruppo_ruolo, g.description as descrizione_gruppo_ruolo
FROM access_ext a
LEFT JOIN rel_gruppo_ruoli rgr on rgr.id_ruolo = a.role_id
LEFT JOIN lookup_gruppo_ruoli g on g.code = rgr.id_gruppo
where a.user_id = _id_utente and g.code in (11,15,16)
--UNION
--select g.code as id_gruppo_ruolo, g.description as descrizione_gruppo_ruolo
--FROM lookup_gruppo_ruoli g
--where g.code = 11
limit 1;
    
$$;


ALTER FUNCTION public.get_gruppo_ruolo_utente(_id_utente integer) OWNER TO postgres;

--
-- TOC entry 1035 (class 1255 OID 16783)
-- Name: get_has_linee_categorizzabili(integer, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_has_linee_categorizzabili(_riferimentoid integer, _riferimentoidnometab text) RETURNS boolean
    LANGUAGE plpgsql STRICT
    AS $$
DECLARE
riferimentoId integer;
BEGIN

riferimentoId :=-1;

select r.riferimento_id into riferimentoId from ricerche_anagrafiche_old_materializzata r
left join master_list_flag_linee_attivita flag on flag.codice_univoco = concat_ws('-', r.codice_macroarea, r.codice_aggregazione, r.codice_attivita)
where r.riferimento_id = _riferimentoId and r.riferimento_id_nome_tab = _riferimentoIdNomeTab and flag.categorizzabili;

IF riferimentoId > 0 THEN
return true;
END IF;

return false ;

 END;
$$;


ALTER FUNCTION public.get_has_linee_categorizzabili(_riferimentoid integer, _riferimentoidnometab text) OWNER TO postgres;

--
-- TOC entry 1036 (class 1255 OID 16784)
-- Name: get_has_only_linee_noscia(integer, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_has_only_linee_noscia(_riferimentoid integer, _riferimentoidnometab text) RETURNS boolean
    LANGUAGE plpgsql STRICT
    AS $$
DECLARE
riferimentoId integer;
BEGIN

riferimentoId :=-1;

select r.riferimento_id into riferimentoId from ricerche_anagrafiche_old_materializzata r
left join master_list_flag_linee_attivita flag on flag.codice_univoco = concat_ws('-', r.codice_macroarea, r.codice_aggregazione, r.codice_attivita)
where r.riferimento_id = _riferimentoId and r.riferimento_id_nome_tab = _riferimentoIdNomeTab and flag.no_scia and r.riferimento_id not in (select r.riferimento_id from ricerche_anagrafiche_old_materializzata r
left join master_list_flag_linee_attivita flag on flag.codice_univoco = concat_ws('-', r.codice_macroarea, r.codice_aggregazione, r.codice_attivita)
where r.riferimento_id = _riferimentoId and r.riferimento_id_nome_tab = _riferimentoIdNomeTab and flag.no_scia is not true);

IF riferimentoId > 0 THEN
return true;
END IF;

return false ;

 END;
$$;


ALTER FUNCTION public.get_has_only_linee_noscia(_riferimentoid integer, _riferimentoidnometab text) OWNER TO postgres;

--
-- TOC entry 1037 (class 1255 OID 16785)
-- Name: get_indirizzo_napoli(integer, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_indirizzo_napoli(_toponimo integer DEFAULT NULL::integer, _comune_start text DEFAULT NULL::text) RETURNS TABLE(via text, descrizione_provincia text, id integer, comune integer, cod_provincia text, provincia text, cap text, descrizione_comune text, nazione text, latitudine double precision, longitudine double precision, tipologia_sede integer, comune_testo text, toponimo integer, civico text, descrizione_toponimo text)
    LANGUAGE plpgsql
    AS $$
DECLARE

BEGIN


FOR "via", "descrizione_provincia", "id", "comune", "cod_provincia", "provincia", "cap", "descrizione_comune", "nazione",
    "latitudine", "longitudine", "tipologia_sede", "comune_testo", "toponimo", "civico", "descrizione_toponimo"
    in
    select
	   distinct c.indirizzo, 'napoli', null, 5279, '063', '63', trim(c.cap), 'napoli', 'italia', 
	   null, null, null, 'napoli', lt.code, c.numeri, c.toponimo  
	from cap c join lookup_toponimi lt on trim(c.toponimo) ilike trim(lt.description)
			where (lt.code = _toponimo) and c.indirizzo ilike concat('%',_comune_start, '%') order by c.indirizzo limit 50
    /*select
	   distinct i.via, 'napoli', i.id, 5279, '063', i.provincia, c.cap, 'napoli', i.nazione, 
	   i.latitudine, i.longitudine, null, i.comune_testo, i.toponimo, i.civico, c.toponimo  
	from opu_indirizzo i join cap c on (i.via ilike c.indirizzo) 
			where (i.comune = 5279 and i.toponimo = _toponimo) and i.via ilike concat('%',_comune_start, '%') order by i.via limit 50*/ 
		
       LOOP	 
	   RETURN NEXT;
	END LOOP;
	RETURN;
   
END;
$$;


ALTER FUNCTION public.get_indirizzo_napoli(_toponimo integer, _comune_start text) OWNER TO postgres;

--
-- TOC entry 1038 (class 1255 OID 16786)
-- Name: get_items(integer[]); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_items(p_ids integer[]) RETURNS TABLE(code integer, description text, gestione_altro boolean)
    LANGUAGE plpgsql
    AS $$
DECLARE

BEGIN

 RETURN QUERY 
     select t.code, t.description::text, t.gestione_altro
    from lookup_tipi_verifica t 
    where t.code = any (p_ids);
 END;
$$;


ALTER FUNCTION public.get_items(p_ids integer[]) OWNER TO postgres;

--
-- TOC entry 1039 (class 1255 OID 16787)
-- Name: get_linea_attivita_noscia(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_linea_attivita_noscia() RETURNS TABLE(codice_attivita text, path_descrizione text, description text)
    LANGUAGE sql
    AS $$
	select ml8.codice, concat(ln.description, '-> ', ml8.path_descrizione) path_descrizione , ln.description
		from ml8_linee_attivita_nuove_materializzata ml8 
			join master_list_flag_linee_attivita mlf on mlf.codice_univoco = ml8.codice
			join opu_lookup_norme_master_list ln on code = ml8.id_norma
		where mlf.no_scia = true;
$$;


ALTER FUNCTION public.get_linea_attivita_noscia() OWNER TO postgres;

--
-- TOC entry 1040 (class 1255 OID 16788)
-- Name: get_linee_attivita(integer, text, boolean, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_linee_attivita(_riferimentoid integer, _riferimentoidnometab text, _primario boolean, _idcu integer) RETURNS TABLE(id integer, riferimento_id integer, id_rel_ateco_attivita integer, id_attivita_masterlist integer, mappato boolean, primario boolean, entered timestamp without time zone, entered_by integer, modified timestamp without time zone, modified_by integer, trashed_date timestamp without time zone, macroarea text, aggregazione text, attivita text, codice_linea text, categoria text, linea_attivita text, codice_istat text, descrizione_codice_istat text, id_attivita integer, enabled boolean)
    LANGUAGE plpgsql
    AS $$
DECLARE
r RECORD;	

BEGIN


IF (_riferimentoIdNomeTab = 'organization') THEN
FOR 
id , riferimento_id , id_rel_ateco_attivita , id_attivita_masterlist , mappato, primario, entered, entered_by, modified, modified_by, 
trashed_date, macroarea , aggregazione , attivita , codice_linea, categoria , linea_attivita , codice_istat , descrizione_codice_istat, id_attivita, enabled
in

select distinct
v.id , v.org_id , v.id_rel_ateco_attivita , v.id_attivita_masterlist , v.mappato, v.primario, v.entered, v.entered_by, v.modified, v.modified_by, 
v.trashed_date, v.macroarea , v.aggregazione , v.attivita , v.codice, v.categoria , coalesce(v.linea_attivita, v.attivita) as linea_attivita , v.codice_istat , v.descrizione_codice_istat, -1, true 
from org_linee_attivita_view v
left join linee_attivita_controlli_ufficiali lcu on v.id=lcu.id_linea_attivita
--left join ticket t on t.org_id = v.org_id
where 1=1 
and ((_riferimentoId>0 and v.org_id = _riferimentoId) or (_riferimentoId=-1))
and ((_idcu>0 and (lcu.id_controllo_ufficiale=_idcu and lcu.trashed_date is null)) or (_idcu=-1))

LOOP
RETURN NEXT;
END LOOP;
END IF;

IF (_riferimentoIdNomeTab = 'opu_stabilimento' or _riferimentoIdNomeTab = 'opu_relazione_stabilimento_linee_produttive') THEN
FOR 
id , riferimento_id , id_rel_ateco_attivita , id_attivita_masterlist , mappato, primario, entered, entered_by, modified, modified_by, trashed_date, macroarea , aggregazione , 
attivita , codice_linea, categoria , linea_attivita , codice_istat , descrizione_codice_istat, id_attivita, enabled
in

select  distinct
v.id , v.org_id , v.id_rel_ateco_attivita , -1 , null, v.primario, null, -1, null, -1, null, v.macroarea , null , null , v.codice, v.categoria , v.linea_attivita , v.codice_istat , null, v.id_attivita, v.enabled
from opu_linee_attivita_stabilimenti_view v
left join linee_attivita_controlli_ufficiali lcu on lcu.id_linea_attivita = v.id 
where 1=1 
and ((_riferimentoId>0 and v.org_id = _riferimentoId and v.enabled) or (_riferimentoId=-1))
and ((_idcu>0 and (lcu.id_controllo_ufficiale=_idcu and lcu.trashed_date is null)) or (_idcu=-1))

LOOP
RETURN NEXT;
END LOOP;
END IF;

IF (_riferimentoIdNomeTab = 'sintesis_stabilimento' or _riferimentoIdNomeTab = 'sintesis_relazione_stabilimento_linee_produttive') THEN
FOR 
id , riferimento_id , id_rel_ateco_attivita , id_attivita_masterlist , mappato, primario, entered, entered_by, modified, modified_by, 
trashed_date, macroarea , aggregazione , attivita , codice_linea, categoria , linea_attivita , codice_istat , descrizione_codice_istat, id_attivita, enabled
in

select  distinct
v.id , v.alt_id , v.id_rel_ateco_attivita , -1 , null, v.primario, null, -1, null, -1, null, v.macroarea , null , null , 
v.codice, v.categoria , v.linea_attivita , v.codice_istat , null, -1, v.enabled
from sintesis_linee_attivita_stabilimenti_view v
left join linee_attivita_controlli_ufficiali lcu on lcu.id_linea_attivita = v.id 
where 1=1 
and ((_riferimentoId>0 and v.alt_id = _riferimentoId and v.enabled) or (_riferimentoId=-1))
and ((_idcu>0 and (lcu.id_controllo_ufficiale=_idcu and lcu.trashed_date is null)) or (_idcu=-1))

LOOP
RETURN NEXT;
END LOOP;
END IF;


IF (_riferimentoIdNomeTab = 'suap_ric_scia_stabilimento') THEN
FOR 
id , riferimento_id , id_rel_ateco_attivita , id_attivita_masterlist , mappato, primario, entered, entered_by, modified, modified_by, 
trashed_date, macroarea , aggregazione , attivita , codice_linea, categoria , linea_attivita , codice_istat , descrizione_codice_istat, id_attivita, enabled
in

select  distinct
v.id , v.alt_id , v.id_rel_ateco_attivita , -1 , null, v.primario, null, -1, null, -1, null, v.macroarea , null , null , v.codice,
v.categoria , v.linea_attivita , v.codice_istat , null, -1, v.enabled
from suap_ric_scia_linee_attivita_stabilimenti_view v
left join linee_attivita_controlli_ufficiali lcu on lcu.id_linea_attivita = v.id 
where 1=1 
and ((_riferimentoId>0 and v.alt_id = _riferimentoId and v.enabled) or (_riferimentoId=-1))
and ((_idcu>0 and (lcu.id_controllo_ufficiale=_idcu and lcu.trashed_date is null)) or (_idcu=-1))


LOOP
RETURN NEXT;
END LOOP;
END IF;


IF (_riferimentoIdNomeTab = 'apicoltura_imprese') THEN
FOR 
id , riferimento_id , id_rel_ateco_attivita , id_attivita_masterlist , mappato, primario, entered, entered_by, modified, modified_by, 
trashed_date, macroarea , aggregazione , attivita ,codice_linea, categoria , linea_attivita , codice_istat , descrizione_codice_istat, id_attivita, enabled
in

select  distinct
v.id_linea , v.riferimento_id , -1 , -1 , null, false, null, -1, null, -1, null, v.macroarea , null , null , 
concat_ws('-',v.codice_macroarea,v.codice_aggregazione, v.codice_attivita), v.aggregazione as categoria , v.attivita , -1 , null, -1, true
from  ricerche_anagrafiche_old_materializzata  v
join ticket t on (t.id_apiario = v.riferimento_id and v.riferimento_id_nome_tab = 'apicoltura_imprese')
where 1=1
and ((_riferimentoId>0 and v.riferimento_id = _riferimentoId) or (_riferimentoId=-1))
and ((_idcu>0 and t.ticketid=_idcu and t.trashed_date is null) or (_idcu=-1))


LOOP
RETURN NEXT;
END LOOP;
END IF;

/*
IF (_riferimentoIdNomeTab = 'anagrafica.stabilimenti') THEN
FOR 
id , riferimento_id , id_rel_ateco_attivita , id_attivita_masterlist , mappato, primario, entered, entered_by, modified, modified_by, trashed_date, 
macroarea , aggregazione , attivita , codice_linea, categoria , linea_attivita , codice_istat , descrizione_codice_istat, id_attivita, enabled
in
select  distinct
v.id , v.alt_id , -1 , -1 , null, false, null, -1, null, -1, null, v.macroarea , null , null , 'OPR-OPR-X', v.categoria , v.linea_attivita , -1 , null, -1, true
from  anagrafica.linee_attivita_stabilimenti_view  v
left join linee_attivita_controlli_ufficiali lcu on lcu.id_linea_attivita = v.id 
where 1=1 
and ((_riferimentoId>0 and v.alt_id = _riferimentoId) or (_riferimentoId=-1))
and ((_idcu>0 and lcu.id_controllo_ufficiale=_idcu and lcu.trashed_date is null ) or (_idcu=-1))
*/
     RETURN;
 END;
$$;


ALTER FUNCTION public.get_linee_attivita(_riferimentoid integer, _riferimentoidnometab text, _primario boolean, _idcu integer) OWNER TO postgres;

--
-- TOC entry 1160 (class 1255 OID 21553)
-- Name: get_lista_documenti_sicra(text, text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_lista_documenti_sicra(_username text, _password text, _cf text) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE esito text;
BEGIN

IF (_username = '' or _password = '' or _cf = '')
THEN 
	esito = '[{"Errore":"Valorizzare correttamente i campi di input."}]';
	return esito;
END IF;

select count(*) from access 
where username = _username and
password = md5(_password) 
into esito;

IF (esito = '0')
THEN 
	esito = '[{"Errore":"Utente Non Autorizzato"}]';
	return esito;
END IF;

select 
	replace ( ((select * from get_documenti_giornate_ispettive(_cf)) 
	|| 
	(select * from get_documenti_campioni(_cf))), '][', ',')
into esito;

 RETURN esito;
 END;
$$;


ALTER FUNCTION public.get_lista_documenti_sicra(_username text, _password text, _cf text) OWNER TO postgres;

--
-- TOC entry 1041 (class 1255 OID 16789)
-- Name: get_lista_sottoattivita(integer, integer, boolean); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_lista_sottoattivita(id_controllo integer, tipo_sottoattivita integer, cerca_trashed boolean) RETURNS TABLE(ticketid integer, descrizione_sottoattivita text, trashed_date timestamp without time zone)
    LANGUAGE plpgsql STRICT
    AS $$
DECLARE
	r RECORD;
	 	
BEGIN
		FOR 
ticketid,	descrizione_sottoattivita, trashed_date
		in
		
		select t.ticketid, l.description, t.trashed_date
		from ticket t left join lookup_tipologia_cu_e_sottoattivita l on t.tipologia = l.code
		where t.id_controllo_ufficiale = id_controllo::text 
		and ((tipo_sottoattivita>0 and t.tipologia = tipo_sottoattivita) or (tipo_sottoattivita=-1))
		and ((cerca_trashed is false and t.trashed_date is null) or (cerca_trashed is true)) 

		
	
    LOOP
        RETURN NEXT;
     END LOOP;
     RETURN;
    
    LOOP
        RETURN NEXT;
     END LOOP;
     RETURN;
 END;
$$;


ALTER FUNCTION public.get_lista_sottoattivita(id_controllo integer, tipo_sottoattivita integer, cerca_trashed boolean) OWNER TO postgres;

--
-- TOC entry 1042 (class 1255 OID 16790)
-- Name: get_max_rev_ml(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_max_rev_ml() RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE 
max integer;

BEGIN	
select max(rev) into max from master_list_macroarea where trashed_date is null;

return max;
	
END;
$$;


ALTER FUNCTION public.get_max_rev_ml() OWNER TO postgres;

--
-- TOC entry 1043 (class 1255 OID 16791)
-- Name: get_motivi_controllo_ufficiale(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_motivi_controllo_ufficiale(_idcu integer) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE  
	jsonOutput text;
BEGIN 
	select to_jsonb(array_agg(r))::text into jsonOutput
FROM (
select 
tcu.idcontrollo as id_controllo,
UPPER(case when tcu.tipoispezione = 89 then 'PIANO DI MONITORAGGIO' else 'ATTIVITA' end)::text as tipo_motivo,
UPPER(case when tcu.tipoispezione = 89 then indpia.alias_indicatore else indatt.alias_indicatore end)::text as alias_motivo,
UPPER(case when tcu.tipoispezione = 89 then indpia2.descrizione ||' >> '||indpia.descrizione else indatt2.descrizione||' >> '||indatt.descrizione end)::text as descrizione_motivo,
UPPER(str.pathdes)::text as per_conto_di,
UPPER(case when tcu.tipoispezione = 89 then indpia.codice_interno_attivita_gestione_cu else indatt.codice_interno_attivita_gestione_cu end)::text as cod_interno_motivo
from tipocontrolloufficialeimprese tcu
left join dpat_indicatore_new indatt on indatt.id = tcu.tipoispezione
left join dpat_piano_attivita_new indatt2 on indatt2.id = indatt.id_piano_attivita
left join dpat_indicatore_new indpia on indpia.id = tcu.pianomonitoraggio
left join dpat_piano_attivita_new indpia2 on indpia2.id = indpia.id_piano_attivita
left join dpat_strutture_asl str on str.id = tcu.id_unita_operativa
where tcu.idcontrollo = _idcu and tcu.enabled and (tcu.tipoispezione>0 or tcu.pianomonitoraggio>0)
order by tipo_motivo asc, alias_motivo asc) r;

	return jsonOutput;

END $$;


ALTER FUNCTION public.get_motivi_controllo_ufficiale(_idcu integer) OWNER TO postgres;

--
-- TOC entry 1044 (class 1255 OID 16792)
-- Name: get_motivi_giornata_ispettiva(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_motivi_giornata_ispettiva(_id_tecnica integer) RETURNS TABLE(code integer, motivo text, id_tecnica integer)
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN
RETURN QUERY
	select m.code, m.description::text, m.id_tecnica
	from lookup_motivi m
	where m.enabled
	and ( _id_tecnica = -1 or m.id_tecnica = _id_tecnica)
	order by m.id_tecnica, m.description;
END;
$$;


ALTER FUNCTION public.get_motivi_giornata_ispettiva(_id_tecnica integer) OWNER TO postgres;

--
-- TOC entry 1045 (class 1255 OID 16793)
-- Name: get_percontodi_strutture_dipartimento(integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_percontodi_strutture_dipartimento(_anno integer, _id_dipartimento integer) RETURNS TABLE(id_dipartimento integer, dipartimento text, tipologia text, descrizione text, appartenenza text, id integer)
    LANGUAGE plpgsql
    AS $$
DECLARE

BEGIN 

	
	return query
	SELECT 
	strutt_semplice.id_asl as id_asl_struttura_semplice,
	asl.description::text as dipartimento,
	tipooia.description::text as tipologia,
	strutt_semplice.descrizione::text as descrizione_struttura_semplice, 
        strutt_complessa.descrizione::text as appartenenza, 
        strutt_semplice.id as id_struttura_semplice	
	FROM dpat_strutture_asl strutt_complessa
	LEFT JOIN dpat_strutture_asl strutt_semplice on strutt_semplice.id_padre = strutt_complessa.id and 
                                           strutt_semplice.disabilitato = false and strutt_semplice.stato = 2 and strutt_semplice.enabled
        LEFT JOIN lookup_site_id asl on asl.code = strutt_semplice.id_asl
	LEFT JOIN lookup_tipologia_nodo_oia tipooia ON strutt_complessa.tipologia_struttura = tipooia.code 
	where strutt_complessa.disabilitato = false and  strutt_complessa.tipologia_struttura in(13,14) and strutt_complessa.stato=2 and strutt_complessa.enabled
        and (strutt_complessa.id_asl = _id_dipartimento or _id_dipartimento = -1) 
        and strutt_complessa.id_strumento_calcolo in (select dpat_strumento_calcolo.id 
			                          from dpat_strumento_calcolo 
			                          where (dpat_strumento_calcolo.id_asl = _id_dipartimento or _id_dipartimento = -1) and 
			                                (strutt_complessa.anno = _anno or _anno is null) 
			                          ) and  strutt_semplice.id >0
	order by strutt_complessa.descrizione::text,strutt_semplice.descrizione::text ;

END;
$$;


ALTER FUNCTION public.get_percontodi_strutture_dipartimento(_anno integer, _id_dipartimento integer) OWNER TO postgres;

--
-- TOC entry 1046 (class 1255 OID 16794)
-- Name: get_programmi_campionamento_categorie_merceologiche(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_programmi_campionamento_categorie_merceologiche() RETURNS TABLE(code integer, categoria_merceologica text, nome_programma_campionamento text, nome_programma_campionamento_macrocategoria text)
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN
RETURN QUERY
	select id, p.categoria_merceologica, p.programma_campionamento,  p.macrocategoria 
	from programmi_campionamento_categorie_merceologiche p;
END;
$$;


ALTER FUNCTION public.get_programmi_campionamento_categorie_merceologiche() OWNER TO postgres;

--
-- TOC entry 237 (class 1259 OID 16795)
-- Name: anag_storico_modifiche; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.anag_storico_modifiche (
    id integer NOT NULL,
    riferimento_id integer,
    riferimento_id_nome_tab text,
    id_nuovo_stato integer,
    id_vecchio_stato integer,
    data_cambio_stato text,
    nota text,
    enteredby integer,
    entered timestamp without time zone DEFAULT now(),
    trashed_date timestamp without time zone
);


ALTER TABLE public.anag_storico_modifiche OWNER TO postgres;

--
-- TOC entry 1047 (class 1255 OID 16801)
-- Name: get_storico_cambio_stato_anag(integer, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_storico_cambio_stato_anag(_riferimento_id integer, _riferimento_id_nome_tab text) RETURNS SETOF public.anag_storico_modifiche
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN
RETURN QUERY
	select * from anag_storico_modifiche 
	where riferimento_id = _riferimento_id and  
	trashed_date is null  and
	riferimento_id_nome_tab = _riferimento_id_nome_tab 
	order by entered desc;
END;
$$;


ALTER FUNCTION public.get_storico_cambio_stato_anag(_riferimento_id integer, _riferimento_id_nome_tab text) OWNER TO postgres;

--
-- TOC entry 1048 (class 1255 OID 16802)
-- Name: get_tecniche_by_id_anagrafica(integer, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_tecniche_by_id_anagrafica(_riferimento_id integer, _riferimento_id_nome_tab text) RETURNS TABLE(id integer, nome text)
    LANGUAGE plpgsql
    AS $$
DECLARE
	check_linea_moll int;
	check_esistenza_anag int;
	check_esistenza_macello int;
BEGIN 
	
	RETURN QUERY
		select code, description::text from lookup_tipo_controllo where enabled order by description; -- escono le tecniche BASE + quelle ad hoc
	

END;
$$;


ALTER FUNCTION public.get_tecniche_by_id_anagrafica(_riferimento_id integer, _riferimento_id_nome_tab text) OWNER TO postgres;

--
-- TOC entry 1049 (class 1255 OID 16803)
-- Name: get_tipi_analisi(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_tipi_analisi() RETURNS TABLE(id integer, livello1 text, livello2 text, livello3 text)
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN
RETURN QUERY
	select m.progressivo::integer, m.descrizione_analita_livello_uno::text, m.descrizione_analita_livello_due::text, m.descrizione_analita_livello_tre::text
	from analiti m
	where m.enabled
	order by m.descrizione_analita_livello_uno;
END;
$$;


ALTER FUNCTION public.get_tipi_analisi() OWNER TO postgres;

--
-- TOC entry 1050 (class 1255 OID 16804)
-- Name: get_tipi_attivita(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_tipi_attivita() RETURNS TABLE(code integer, tipo text)
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN
RETURN QUERY
	select m.code, m.tipo::text
	from lookup_tipo_attivita m
	where m.enabled
	order by m.tipo;
END;
$$;


ALTER FUNCTION public.get_tipi_attivita() OWNER TO postgres;

--
-- TOC entry 1051 (class 1255 OID 16805)
-- Name: get_tipi_verifica(integer[]); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_tipi_verifica(matrici integer[]) RETURNS TABLE(code integer, tipo_verifica text)
    LANGUAGE plpgsql
    AS $$
DECLARE

  where_condition text;
  matrici_new int[];
BEGIN
	matrici_new := array[3, 2, 1, 6, 7, 8, 4, 5];
	raise info 'matrici convertita%', matrici_new;
	where_condition = '1';
	/*if( @> ARRAY[1,2,3]) then 
		where_condition = ''; --emissioni in acqua;
	elsif ( @> ARRAY[7,8]) then
		where_condition = ''; --emissioni in aria
	elsif ( @> ARRAY[4]) then
		where_condition = ''; --Rifiuti 3.2.5
	elsif ( @> ARRAY[5]) then
		where_condition = ''; --Rumore
	elsif ( @> ARRAY[6]) then
		where_condition = ''; --Altro
	elsif ( @> ARRAY[9]) then
		where_condition = '7 or code=8'; 
	end if;*/
	
RETURN QUERY
	select t.code, t.description::text
	from lookup_tipi_verifica t 
	where t.enabled and t.code = where_condition::integer
	order by t.description;
END;
$$;


ALTER FUNCTION public.get_tipi_verifica(matrici integer[]) OWNER TO postgres;

--
-- TOC entry 1052 (class 1255 OID 16806)
-- Name: get_tipi_verifica(text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_tipi_verifica(matrici text) RETURNS TABLE(code integer, tipo_verifica text, gestione_altro boolean)
    LANGUAGE plpgsql
    AS $$
DECLARE
	result int[];
BEGIN
	-- execute query 1;
	result := (select * from get_tipi_verifica_ids(matrici));
	raise info '%', result;
	return query 
	select t.code, t.description::text, t.gestione_altro from get_items(result) t;
END;
$$;


ALTER FUNCTION public.get_tipi_verifica(matrici text) OWNER TO postgres;

--
-- TOC entry 238 (class 1259 OID 16807)
-- Name: matrici; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.matrici (
    matrice_id integer NOT NULL,
    nome character varying(254),
    id_padre integer,
    livello integer NOT NULL,
    id_old integer,
    nuova_gestione boolean DEFAULT true,
    note character varying(1024),
    enabled boolean DEFAULT true,
    multipla_sel boolean DEFAULT false,
    codice_esame text,
    foodex2_codice text
);


ALTER TABLE public.matrici OWNER TO postgres;

--
-- TOC entry 1053 (class 1255 OID 16815)
-- Name: get_tipi_verifica(public.matrici[]); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_tipi_verifica(public.matrici[]) RETURNS TABLE(code integer, tipo_verifica text)
    LANGUAGE plpgsql
    AS $$
DECLARE

  where_condition text;
  
BEGIN

	raise info 'matrici convertita%', matrici::int[];
	where_condition = '1';
	/*if( @> ARRAY[1,2,3]) then 
		where_condition = ''; --emissioni in acqua;
	elsif ( @> ARRAY[7,8]) then
		where_condition = ''; --emissioni in aria
	elsif ( @> ARRAY[4]) then
		where_condition = ''; --Rifiuti 3.2.5
	elsif ( @> ARRAY[5]) then
		where_condition = ''; --Rumore
	elsif ( @> ARRAY[6]) then
		where_condition = ''; --Altro
	elsif ( @> ARRAY[9]) then
		where_condition = '7 or code=8'; 
	end if;*/
	
RETURN QUERY
	select t.code, t.description::text
	from lookup_tipi_verifica t 
	where t.enabled and t.code = where_condition::integer
	order by t.description;
END;
$$;


ALTER FUNCTION public.get_tipi_verifica(public.matrici[]) OWNER TO postgres;

--
-- TOC entry 1054 (class 1255 OID 16816)
-- Name: get_tipi_verifica_ids(text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_tipi_verifica_ids(matrici text) RETURNS integer[]
    LANGUAGE plpgsql
    AS $$
DECLARE
  where_condition text;
  matrici_new integer[];

 where_condition_1 text;
 where_condition_2 text;
 where_condition_3 text;
 where_condition_4 text;
 where_condition_5 text;
 where_condition_6 text;
 where_finale text;
 
BEGIN
	matrici_new := matrici::int[];
	raise info 'matrici convertita%', matrici_new;
	raise info 'test: %', matrici_new && ARRAY[1,2,3];
	where_condition_1 ='';
	where_condition_2 ='';
	where_condition_3 ='';
	where_condition_4 ='';
	where_condition_5 ='';
	where_condition_6 ='';
	where_finale = '';

	if( matrici_new && '{1,2,3}'::int[]) then 
		where_condition_1= '3,';		--emissioni in acqua;
	end if;
	if ( matrici_new && '{7,8}'::int[]) then
		where_condition_2 = '2,';--emissioni in aria
	end if;
	if ( matrici_new && '{4}'::int[]) then
		where_condition_3 = '4,';  --Rifiuti 3.2.5
	end if;
	if ( matrici_new && '{5}'::int[]) then
		where_condition_4 = '9,'; --Rumore
	end if;
	if ( matrici_new && '{6}'::int[]) then
		--Altro
		where_condition_5 = '10,';
	end if;
	if ( matrici_new && '{9}'::int[]) then
		where_condition_6 = '7,8,5,6,1';
	end if;

	raise info 'query 1 %', where_condition_1;
	raise info 'query 2 %', where_condition_2;
	raise info 'query 3 %', where_condition_3;
	raise info 'query 4 %', where_condition_4;
	raise info 'query 5 %', where_condition_5;
	raise info 'query 6 %', where_condition_6;

       --costruire la lista definitiva con gli id
       where_finale = concat('{',where_condition_1,where_condition_2,where_condition_3,where_condition_4, where_condition_5, where_condition_6,'}');
       where_finale = replace(where_finale,',}','}');
       raise info 'query finale %', where_finale::int[];

       return where_finale::int[];
END;
$$;


ALTER FUNCTION public.get_tipi_verifica_ids(matrici text) OWNER TO postgres;

--
-- TOC entry 1163 (class 1255 OID 21877)
-- Name: get_utenti(text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_utenti(username_input text, password_input text) RETURNS SETOF public.utente
    LANGUAGE sql
    AS $$
SELECT *
from access
where trashed_date is null and (username_input is null or username = username_input) and (password_input is null or password = md5(password_input)) and enabled
$$;


ALTER FUNCTION public.get_utenti(username_input text, password_input text) OWNER TO postgres;

--
-- TOC entry 1055 (class 1255 OID 16817)
-- Name: getpunteggioaccumulato_ct(integer, character varying, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.getpunteggioaccumulato_ct(_id_anagrafica integer, _nome_colonna character varying, _idcu integer) RETURNS integer
    LANGUAGE plpgsql STRICT
    AS $$
DECLARE
 punteggio integer;
BEGIN 
	punteggio:= (select getpunteggioaccumulato_ct_ from public.getpunteggioaccumulato_ct_(_nome_colonna,_idcu));
	return punteggio;
END;
$$;


ALTER FUNCTION public.getpunteggioaccumulato_ct(_id_anagrafica integer, _nome_colonna character varying, _idcu integer) OWNER TO postgres;

--
-- TOC entry 1056 (class 1255 OID 16818)
-- Name: getpunteggioaccumulato_ct_(character varying, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.getpunteggioaccumulato_ct_(_nome_colonna character varying, _idcu integer) RETURNS integer
    LANGUAGE sql
    AS $$

SELECT sum (punteggio)::integer

FROM ticket
where
    tipologia=3
    and trashed_date is null
    and provvedimenti_prescrittivi in(3,4)
    and assigned_date > (current_date - interval '5 years')
    and closed is not null
    and (
(_nome_colonna = 'org_id') and (org_id = (select org_id from ticket where ticketid = _idcu and trashed_date is null))
OR     
(_nome_colonna = 'id_stabilimento') and (id_stabilimento = (select id_stabilimento from ticket where ticketid = _idcu and trashed_date is null))
OR
(_nome_colonna = 'alt_id') and (alt_id = (select alt_id from ticket where ticketid = _idcu and trashed_date is null))
   );
$$;


ALTER FUNCTION public.getpunteggioaccumulato_ct_(_nome_colonna character varying, _idcu integer) OWNER TO postgres;

--
-- TOC entry 1057 (class 1255 OID 16819)
-- Name: giornata_ispettiva_dettaglio_globale(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.giornata_ispettiva_dettaglio_globale(_idgiornataispettiva integer) RETURNS json
    LANGUAGE plpgsql
    AS $$	
DECLARE
	tecnicacu json;
	daticu json;
	anagrafica json;
	utente json;
	dipartimento json;
	motivi json;
	linee json;
	gruppoispettivo json;
	esami json;
	tipiverifica json;
	percontodi json;
	campiservizio json;
	fasilavorazione json;
	fascicolo json;
	matrici json;
	emissioniatmosfera json;
	finale json;
	id_tecnica integer;
	anno_controllo integer;
	id_dipartimento integer;
	rifid integer;
	tipologia_operatore integer;
	rifnometab text;
	lineacontrollo text;
	path_linea text;
	
BEGIN

	---fasilavorazione := to_json('[]'::text);
	-- chiamo la dbi puntuale per ogni blocco
	-- STEP 1: recuperiamo la tecnica es: "Tecnica":{ "nome":"Ispezione AIA straordinaria","id":2},
	   
	id_tecnica := (select c.id_tecnica  from giornate_ispettive c where id = _idgiornataispettiva); 
	anno_controllo := (select date_part('year',data_inizio)::integer from giornate_ispettive where id = _idgiornataispettiva);
	rifid := (select riferimento_id from giornate_ispettive where id = _idgiornataispettiva);
	id_dipartimento := (select c.id_dipartimento from giornate_ispettive c where id = _idgiornataispettiva);
	rifnometab := (select c.riferimento_id_nome_tab from giornate_ispettive c where id = _idgiornataispettiva);
	--tipologia_operatore := (select distinct m.tipologia_operatore from ricerche_anagrafiche_old_materializzata m where m.riferimento_id = rifid and m.riferimento_id_nome_tab = rifnometab );
	--lineacontrollo := (select codice_linea from linee_attivita_giornate_ispettive  where  id_giornata_ispettiva  = _idgiornataispettiva and trashed_date is null);

	--path_linea := (select path_descrizione from ml8_linee_attivita_nuove_materializzata where codice = lineacontrollo and livello = 3 limit 1);
	
	-- costruzione dei json
	tecnicacu := (select json_object_agg(nome,descrizione) from (select 'nome' as nome, description as descrizione from lookup_tipo_controllo where code = id_tecnica 
							union select 'id' as nome,  id_tecnica::text) a); 
        --tecnicacu := (select json_object_agg('Tecnica', tecnicacu));
	raise info 'json tecnica ricostruito%', tecnicacu;
	daticu := (select json_object_agg(nome,descrizione) from (select 'note' as nome, note as descrizione from giornate_ispettive where id = _idgiornataispettiva
								  union select 'dataInizio' as nome,  data_inizio::text from giornate_ispettive where id = _idgiornataispettiva 
								  union select 'dataFine' as nome,  data_fine::text from giornate_ispettive where id = _idgiornataispettiva 
								  union select 'oraInizio' as nome,  coalesce(ore::text,'') from giornate_ispettive where id = _idgiornataispettiva 
								  union select 'oraFine' as nome,  coalesce(ora_fine::text,'') from giornate_ispettive where id = _idgiornataispettiva 
								  union select 'conclusa' as nome,  coalesce(conclusa_verifica::text,'') from giornate_ispettive where id = _idgiornataispettiva 
								  ) b);
	--daticu := (select json_object_agg('Dati', daticu));
	raise info 'json daticu ricostruito%', daticu;
	campiservizio := (select json_object_agg(nome,descrizione) from (select 'stato' as nome, l.description as descrizione 
									 from giornate_ispettive c join lookup_stato_cu l on l.code = c.stato 
									 where id = _idgiornataispettiva
								  union select 'utenteInserimento' as nome, concat_ws(' ', co.namefirst, co.namelast)::text as descrizione
								        from giornate_ispettive c 
								        join access a on a.user_id = c.enteredby 
								        join contact co on co.contact_id = a.contact_id
									where id = _idgiornataispettiva 
								  union select 'dataInserimento' as nome, entered::text as descrizione from giornate_ispettive where id = _idgiornataispettiva
								  union select 'idGiornataIspettiva' as nome, id::text as descrizione from giornate_ispettive where id = _idgiornataispettiva 
								  ) b);

	anagrafica := (select json_object_agg(nome,descrizione) from (select 'partitaIva' as nome, trim(partita_iva) as descrizione from ricerche_anagrafiche_old_materializzata  where riferimento_id = rifid and riferimento_id_nome_tab = rifnometab
								  union select 'riferimentoId' as nome,  rifid::text
								  union select 'riferimentoIdNomeTab' as nome,  rifnometab::text 
								  union select 'ragioneSociale' as nome, ragione_sociale as descrizione from ricerche_anagrafiche_old_materializzata  where riferimento_id = rifid and riferimento_id_nome_tab = rifnometab) c);
	--anagrafica := (select json_object_agg('Anagrafica', anagrafica));
	raise info 'json anagrafica ricostruito%', anagrafica;

	utente := (select json_object_agg(nome,descrizione) from (select 'userId' as nome, enteredby as descrizione from giornate_ispettive where id = _idgiornataispettiva) d); 
	--utente := (select json_object_agg('Utente', utente));
	raise info 'json utente ricostruito%', utente;

	dipartimento := (select json_object_agg(nome,descrizione) from (select 'nome' as nome,  description as descrizione from lookup_site_id where code= id_dipartimento
								union select 'id' as nome, id_dipartimento::text) e); 
	--asl := (select json_object_agg('Asl', asl));
	raise info 'json asl ricostruito%', dipartimento;
				  
	--"Linee":[{"codice":"MS.020-MS.020.500-852IT3A401","nome":"path completo","id":"192439"}],
	--linee := (SELECT array_to_json(array_agg(row_to_json(t))) FROM (select lineacontrollo as codice, path_linea as nome, (select id_linea_attivita from linee_attivita_giornate_ispettive  where trashed_date is null and id_giornata_ispettiva = _idgiornataispettiva) as id 
	--									from giornate_ispettive where id = _idgiornataispettiva) t);
	--linee := (select json_object_agg('Linee', linee));


	--06/07
	linee := (SELECT array_to_json(array_agg(row_to_json(t))) FROM (select codice_linea as codice, replace(coalesce(ml.path_descrizione,''), '''', '''''') as nome, l.id_linea_attivita as id 
									from giornate_ispettive c
									left join linee_attivita_giornate_ispettive l on l.id_giornata_ispettiva=c.id and l.trashed_date is null			
									left join master_list_linea_attivita m on m.codice_univoco = l.codice_linea
									left join ml8_linee_attivita_nuove_materializzata ml on ml.id_attivita = m.id
									where c.id = _idgiornataispettiva and c.trashed_date is null) t);
	raise info 'json linee ricostruito%', linee;


	gruppoispettivo := (SELECT array_to_json(array_agg(row_to_json(t))) FROM (select distinct d.nominativo as nominativo, c.id_componente as id, d.qualifica as qualifica, c.nome_struttura as struttura,
										c.responsabile, c.referente
										from giornata_ispettiva_gruppo_ispettivo c
										join public.dpat_get_nominativi(-1,anno_controllo,null,null,null,c.id_struttura,null,-1) d on d.id_anagrafica_nominativo = c.id_componente
										left join access_ ac on ac.user_id = c.id_componente -- è giusto?
										where id_giornata_ispettiva = _idgiornataispettiva) t);

	--gruppoispettivo := (select json_object_agg('GruppoIspettivo', gruppoispettivo));
	raise info 'json gruppoispettivo ricostruito %', gruppoispettivo;


										
	tipiverifica := (SELECT array_to_json(array_agg(row_to_json(t))) FROM (select l.description as nome,  l.code as id 
										from giornate_ispettive_tipi_verifica c
										join lookup_tipi_verifica l on l.code = c.id_tipo_verifica
										where c.id_giornata_ispettiva = _idgiornataispettiva) t);
	--tipiverifica := (select json_object_agg('TipiVerifica', tipiverifica));
	raise info 'json tipi verifica %', tipiverifica;
	
	percontodi := (SELECT array_to_json(array_agg(row_to_json(t))) FROM (select o.descrizione_lunga as nome, o.id as id 
										from giornate_ispettive_per_conto_di c
										join oia_nodo o on o.id = c.id_percontodi
										where c.id_giornata_ispettiva = _idgiornataispettiva) t);
	raise info 'json per conto di %', percontodi;

	emissioniatmosfera := (SELECT array_to_json(array_agg(row_to_json(t))) FROM (select e.fasi_lavorativa as "fasiLavorativa", c.note, 
											c.parametri_analizzati as "parametriAnalizzati", 
											e.codice_camino as "codiceCamino", e.id, 
											c.data_sopralluogo_2016 as "dataSopralluogo2016", 
											e.sistema_abbattimento as "sistemaAbbattimento", 
											e.inquinanti, c.esito_conforme as "esitoConforme",
											c.superamenti_limiti_normativi as "superamentiLimitiNormativi" 
											from  
											giornate_ispettive_emissioni_in_atmosfera_camini c
											join emissioni_in_atmosfera_camini e on e.id = c.id_emissioni_in_atmosfera_camini 
											join giornate_ispettive cu on cu.id = c.id_giornata_ispettiva
											where cu.trashed_date is null and c.trashed_date is null
											and c.id_giornata_ispettiva = _idgiornataispettiva) t);
												
	raise info 'json emissioni atmosfera %', emissioniatmosfera;

										
	fascicolo := (select json_object_agg(nome,descrizione) from (select 'numero' as nome,  numero as descrizione from fascicoli_ispettivi  where id in (select id_fascicolo_ispettivo from giornate_ispettive where id = _idgiornataispettiva and trashed_date is null) 
								union select 'id' as nome, id_fascicolo_ispettivo::text as descrizione from giornate_ispettive where id = _idgiornataispettiva) e); 
								
	raise info 'json fascicolo %', fascicolo;

	matrici := (SELECT array_to_json(array_agg(row_to_json(t))) FROM (select l.description as nome,  l.code as id, c.conclusa
										from giornate_ispettive_matrici c
										join lookup_matrice_controlli l on l.code = c.id_matrice
										where c.id_giornata_ispettiva = _idgiornataispettiva) t);

	raise info 'json matrici %', matrici;
		
	
	if (tecnicacu ->> 'id')::int = 2 then
		-- RECUPERO I MOTIVI E GLI ESAMI RICHIESTI
		motivi := (SELECT array_to_json(array_agg(row_to_json(t))) FROM (select l.description as nome,  l.code as id 
										from giornate_ispettive_motivi c
										join lookup_motivi l on l.code = c.id_motivo 
										where c.id_giornata_ispettiva = _idgiornataispettiva) t);
		--motivi := (select json_object_agg('Motivi', motivi));
		raise info 'json motivi ricostruito %', motivi;

		esami := (SELECT array_to_json(array_agg(row_to_json(t))) FROM (select l.description as nome,  l.code as id 
										from giornate_ispettive_esami c
										join lookup_esami l on l.code = c.id_esame 
										where c.id_giornata_ispettiva = _idgiornataispettiva) t);
		--esami := (select json_object_agg('Esami', esami));
		raise info 'json esami ricostruito %', esami;

		finale := (select unaccent(concat('{',
		(select concat_ws(' ', '"Tecnica":', tecnicacu, ',"Dati":', daticu, ',"Anagrafica":', anagrafica, ',"Utente":',utente, ',"Dipartimento":', dipartimento, ',"Linee":', linee, ',"GruppoIspettivo":', gruppoispettivo, 
		',"Esami":', esami,
		',"PerContoDi":', percontodi,
		',"TipiVerifica":', tipiverifica,
		',"FascicoloIspettivo":', fascicolo,
		',"Matrici":', coalesce(matrici,array_to_json('{}'::int[])),
		',"CampiServizio":', campiServizio,
		--',"FasiLavorazione":', coalesce(fasilavorazione,to_json('[]'::text)),
		',"EmissioniAtmosferaCamini":', coalesce(emissioniatmosfera,array_to_json('{}'::int[])),
		',"Motivi":', motivi)),'}'))::json);

		
	-- se si tratta di AIA ordinaria
	elsif (tecnicacu ->> 'id')::int = 1 then
		-- RECUPERO SOLO GLI ESAMI
		esami := (SELECT array_to_json(array_agg(row_to_json(t))) FROM (select l.description as nome,  l.code as id 
										from giornate_ispettive_esami c
										join lookup_esami l on l.code = c.id_esame 
										where c.id_giornata_ispettiva = _idgiornataispettiva) t);
		--esami := (select json_object_agg('Esami', esami));
		raise info 'json esami ricostruito %', esami;

		finale := (select unaccent(concat('{',
		(select concat_ws(' ', '"Tecnica":', tecnicacu, ',"Dati":', daticu, ',"Anagrafica":', anagrafica, ',"Utente":',utente, ',"Dipartimento":', dipartimento, ',"Linee":', linee, ',"GruppoIspettivo":', gruppoispettivo, 
		',"Esami":', esami,
		',"PerContoDi":', percontodi,
		',"FascicoloIspettivo":', fascicolo,
		',"Matrici":', coalesce(matrici,array_to_json('{}'::int[])),
		',"CampiServizio":', campiServizio,
		--',"FasiLavorazione":', coalesce(fasilavorazione,to_json('[]'::text)),
		',"EmissioniAtmosferaCamini":', coalesce(emissioniatmosfera,array_to_json('{}'::int[])),
		',"TipiVerifica":', tipiverifica)),'}'))::json);
		
	else
		-- do nothing per altre tecniche
		RAISE INFO 'la tecnica non prevede aggiunte di campi';
		finale := (select unaccent(concat('{',
		(select concat_ws(' ', '"Tecnica":', tecnicacu, ',"Dati":', daticu, ',"Anagrafica":', anagrafica, ',"Utente":',utente, ',"Dipartimento":', dipartimento, ',"Linee":', linee, ',"GruppoIspettivo":', gruppoispettivo, 
		',"PerContoDi":', percontodi,
		',"FascicoloIspettivo":', fascicolo,
		',"Matrici":', coalesce(matrici,array_to_json('{}'::int[])),
		',"CampiServizio":', campiServizio,
		--',"FasiLavorazione":', coalesce(fasilavorazione,to_json('[]'::text)),
		',"EmissioniAtmosferaCamini":', coalesce(emissioniatmosfera,array_to_json('{}'::int[])),
		',"TipiVerifica":', tipiverifica)),'}'))::json);
	end if;
	
	raise info 'json finale: %', finale;

    	return finale;
END;
$$;


ALTER FUNCTION public.giornata_ispettiva_dettaglio_globale(_idgiornataispettiva integer) OWNER TO postgres;

--
-- TOC entry 1058 (class 1255 OID 16821)
-- Name: giornata_ispettiva_get_verbale_a6(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.giornata_ispettiva_get_verbale_a6(_id_giornata_ispettiva integer) RETURNS json
    LANGUAGE plpgsql
    AS $$
DECLARE
	output json;
BEGIN

	-- output := (SELECT (row_to_json(t)) FROM (select id as "idGiornataIspettiva", l.description as "stato", c.data_inizio as "dataInizio", c.entered as "dataInserimento", concat_ws(' ', co.namefirst, co.namelast)::text as "utenteInserimento"
	--									from  controlli_ufficiali c
	--									join access a on a.user_id = c.enteredby 
	--									join contact co on co.contact_id = a.contact_id
	--								        join lookup_stato_cu l on l.code = c.stato 
	--									where c.id =  _id_giornata_ispettiva
	--									order by c.data_inizio desc) t);

	output := (select * from public.giornata_ispettiva_dettaglio_globale(_id_giornata_ispettiva));

	return output;
	
END;
$$;


ALTER FUNCTION public.giornata_ispettiva_get_verbale_a6(_id_giornata_ispettiva integer) OWNER TO postgres;

--
-- TOC entry 1059 (class 1255 OID 16822)
-- Name: giornata_ispettiva_insert_anagrafica(json, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.giornata_ispettiva_insert_anagrafica(_json_anagrafica json, _idutente integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$	
DECLARE
	riferimento_id integer;
	riferimento_tab text;
	resultid integer;
BEGIN
	  -- recupero il riferimento anagrafico
	  riferimento_id := _json_anagrafica ->> 'riferimentoId' ;
	  riferimento_tab := _json_anagrafica ->> 'riferimentoIdNomeTab';

	INSERT INTO giornate_ispettive (enteredby, riferimento_id, riferimento_id_nome_tab) values (_idutente,riferimento_id,riferimento_tab)
	returning id into resultid;

	  return resultid;
	 		
END;
$$;


ALTER FUNCTION public.giornata_ispettiva_insert_anagrafica(_json_anagrafica json, _idutente integer) OWNER TO postgres;

--
-- TOC entry 1060 (class 1255 OID 16823)
-- Name: giornata_ispettiva_insert_emissioni_in_atmosfera_camini(json, integer, integer, integer, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.giornata_ispettiva_insert_emissioni_in_atmosfera_camini(_json_datifasilavorazione json, _idgiornataispettiva integer, _idutente integer, _riferimento_id integer, _riferimento_id_nome_tab text) RETURNS integer
    LANGUAGE plpgsql
    AS $$	
DECLARE
	i json; 
	id_emissioni_camini integer;
BEGIN


	  FOR i IN SELECT * FROM json_array_elements(_json_datifasilavorazione) 
	  LOOP
	      RAISE INFO 'id %', i->>'id';
	    

		if ((i->>'id')::integer) <0 then
			-- fai insert in anag_emissioni_in_atmosfera_camini
			insert into emissioni_in_atmosfera_camini(codice_camino, fasi_lavorativa, inquinanti, sistema_abbattimento) values((i->>'codiceCamino')::text, (i->>'fasiLavorativa')::text, (i->>'inquinanti')::text, (i->>'sistemaAbbattimento')::text) 
			returning id into id_emissioni_camini;
			insert into anag_emissioni_in_atmosfera_camini( id_emissioni_in_atmosfera_camini,enteredby, riferimento_id, riferimento_id_nome_tab) values(id_emissioni_camini, _idutente, _riferimento_id, _riferimento_id_nome_tab);
		else
			id_emissioni_camini := (i->>'id')::integer;
		end if;		
	                                                            
	        INSERT INTO giornate_ispettive_emissioni_in_atmosfera_camini  (id_giornata_ispettiva, id_emissioni_in_atmosfera_camini, esito_conforme, note, data_sopralluogo_2016, parametri_analizzati, superamenti_limiti_normativi,
	                                                                      entered, enteredby) values
	                                                                     (_idgiornataispettiva,
	                                                                      id_emissioni_camini,
	                                                                     (i->>'esitoConforme')::boolean,
	                                                                     (i->>'note')::text,
	                                                                     (i->>'dataSopralluogo2016')::text,
	                                                                     (i->>'parametriAnalizzati')::text,
	                                                                     (i->>'superamentiLimitiNormativi')::text,
	                                                                     now(),
								             _idutente);
	  END LOOP;

    	 return 1;
END;
$$;


ALTER FUNCTION public.giornata_ispettiva_insert_emissioni_in_atmosfera_camini(_json_datifasilavorazione json, _idgiornataispettiva integer, _idutente integer, _riferimento_id integer, _riferimento_id_nome_tab text) OWNER TO postgres;

--
-- TOC entry 1061 (class 1255 OID 16824)
-- Name: giornata_ispettiva_insert_esami(json, integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.giornata_ispettiva_insert_esami(_json_datiesami json, _idgiornataispettiva integer, _idutente integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$	
DECLARE
	i json; 
BEGIN
	  FOR i IN SELECT * FROM json_array_elements(_json_datiesami) 
	  LOOP
	      RAISE NOTICE 'id %', i->>'id'; 
	      INSERT INTO giornate_ispettive_esami (id_giornata_ispettiva, id_esame, enteredby) values
		 (_idgiornataispettiva, (i->>'id')::integer, _idutente);
	  END LOOP;

    	 return 1;
END;
$$;


ALTER FUNCTION public.giornata_ispettiva_insert_esami(_json_datiesami json, _idgiornataispettiva integer, _idutente integer) OWNER TO postgres;

--
-- TOC entry 1062 (class 1255 OID 16825)
-- Name: giornata_ispettiva_insert_fasi_lavorazione(json, integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.giornata_ispettiva_insert_fasi_lavorazione(_json_datifasilavorazione json, _idgiornataispettiva integer, _idutente integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$	
DECLARE
	i json; 
BEGIN
	  FOR i IN SELECT * FROM json_array_elements(_json_datifasilavorazione) 
	  LOOP
	      RAISE INFO 'id %', i->>'id';
	      INSERT INTO giornate_ispettive_fase_lavorazione (id_giornata_ispettiva, id_fase_lavorazione, enteredby) values(_idgiornataispettiva,(i->>'id')::integer,_idutente);
			
	  END LOOP;

    	 return 1;
END;
$$;


ALTER FUNCTION public.giornata_ispettiva_insert_fasi_lavorazione(_json_datifasilavorazione json, _idgiornataispettiva integer, _idutente integer) OWNER TO postgres;

--
-- TOC entry 1063 (class 1255 OID 16826)
-- Name: giornata_ispettiva_insert_globale(json); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.giornata_ispettiva_insert_globale(_json_dati json) RETURNS integer
    LANGUAGE plpgsql
    AS $$	
DECLARE
	anagrafica json; 
	utenti json;
	tecnicacu json;
	lineacu json;
	oggetticu json;
	motivicu json;
	gruppoispettivo json;
	percontodi json;
	esami json;
	tipiverifica json;
	datigenerici json; -- qui dovrebbero essere incluse anche le note
	dipartimento json;
	emissioni_in_atmosfera json;
        fascicolo json;
        matrici json;
        
	idcontrollo integer;
	idutente integer;
	output integer;
	
BEGIN
	 -- mi ricavo i singoli oggetti JSON per blocchi
	tecnicacu :=  _json_dati ->'Tecnica';
	RAISE INFO 'json tecnica %',tecnicacu;

	anagrafica :=  _json_dati ->'Anagrafica'; 
	RAISE INFO 'json anagrafica %',anagrafica;

	utenti :=  _json_dati ->'Utente';
	RAISE INFO 'json utenti %',utenti;
	
	idutente := utenti -> 'userId';
	RAISE INFO 'idutente %',idutente;

	lineacu :=  _json_dati ->'Linee';
	RAISE INFO 'json lineacu %',lineacu;

	tipiverifica :=  _json_dati ->'TipiVerifica';
	RAISE INFO 'json TipiVerifica %',tipiverifica;

	esami :=  _json_dati ->'Esami';
	RAISE INFO 'json esami %',esami;
       
        gruppoispettivo :=  _json_dati ->'GruppoIspettivo';
	RAISE INFO 'json gruppoispettivo %',gruppoispettivo;

	percontodi :=  _json_dati ->'PerContoDi';
	RAISE INFO 'json per conto di %',percontodi;
	
	datigenerici := _json_dati ->'Dati';
	RAISE INFO 'json datigenerici %',datigenerici;

	dipartimento := _json_dati -> 'Dipartimento';
	RAISE INFO 'json dipartimento %',dipartimento;

	emissioni_in_atmosfera := _json_dati -> 'EmissioniAtmosferaCamini';
	RAISE INFO 'json dipartimento %', emissioni_in_atmosfera;

	fascicolo := _json_dati -> 'FascicoloIspettivo';
	RAISE INFO 'json fascicolo %',fascicolo;

	matrici := _json_dati -> 'Matrici';
	RAISE INFO 'json matrici %',matrici;
  
	-- STEP 0: INSERIAMO IL RECORD JSON PER LOGO
	INSERT INTO giornate_ispettive_log_json(enteredby, json_cu) values(idutente,_json_dati);
	
	-- chiamo la dbi puntuale per ogni blocco
	-- STEP 1: INSERIAMO IL RECORD IN TICKET PER OTTENERE IL TICKETID
	idcontrollo := (SELECT * from public.giornata_ispettiva_insert_anagrafica(anagrafica, idutente));
	-- STEP 2: INSERIAMO LA TECNICA
	output := (SELECT * from public.giornata_ispettiva_insert_tecnica(tecnicacu, idcontrollo));

	raise info 'stampaaaaaaa %', length(datigenerici ->> 'dataFine');
	-- STEP 3: INSERIAMO I DATI DEL CU + linee
	update giornate_ispettive set stato=1, note = (datigenerici ->> 'note'), id_dipartimento = (dipartimento ->> 'id')::int, 
	data_inizio  = (datigenerici ->> 'dataInizio')::timestamp without time zone, 
	data_fine = (case when length(datigenerici ->> 'dataFine') > 0 then (datigenerici ->> 'dataFine')::timestamp without time zone else null end), 
	ore = (datigenerici ->> 'oraInizio'), 
	ora_fine = (datigenerici ->> 'oraFine')
	where id = idcontrollo;
	output := (SELECT * from public.giornata_ispettiva_insert_linee(lineacu, idcontrollo, anagrafica ->> 'riferimentoIdNomeTab'));
	
	-- se si tratta di AIA straordinaria
	if (tecnicacu ->> 'id')::int = 2 then
		-- STEP 4: INSERIAMO I MOTIVI E GLI ESAMI RICHIESTI
		motivicu :=  _json_dati ->'Motivi';
		RAISE INFO 'json motivicu %',motivicu;
		output :=(SELECT * from public.giornata_ispettiva_insert_motivi(motivicu, idcontrollo,idutente));	
		output :=(SELECT * from public.giornata_ispettiva_insert_esami(esami, idcontrollo, idutente));	
	-- se si tratta di AIA ordinaria
	elsif (tecnicacu ->> 'id')::int = 1 then
		--STEP 4: INSERIAMO GLI ESAMI RICHIESTI
		output :=(SELECT * from public.giornata_ispettiva_insert_esami(esami, idcontrollo, idutente));
	else
		-- do nothing per altre tecniche
		RAISE INFO 'la tecnica non prevede aggiunte di campi';
	end if;

	-- STEP 5: INSERIAMO I tipi di verifica comuni a tutte e 3 le tecniche
	output := (SELECT * from public.giornata_ispettiva_insert_tipiverifica(tipiverifica, idcontrollo, idutente));
	
	-- STEP 6: INSERIAMO I COMPONENTI DEL NUCLEO
	output := (SELECT * FROM public.giornata_ispettiva_insert_gruppo_ispettivo(gruppoispettivo,idcontrollo));

	-- STEP 7: INSERIAMO I percontodi
	output := (SELECT * FROM public.giornata_ispettiva_insert_percontodi(percontodi,idcontrollo,idutente));

	-- STEP 8: INSERIAMO le fasi
	output := (SELECT * FROM public.giornata_ispettiva_insert_emissioni_in_atmosfera_camini(emissioni_in_atmosfera,idcontrollo,idutente, (anagrafica ->> 'riferimentoId')::integer, anagrafica ->> 'riferimentoIdNomeTab'));

        -- STEP 9: INSERIAMO i fascicoli
	update giornate_ispettive set id_fascicolo_ispettivo = (fascicolo ->>'id')::integer where id = idcontrollo;

	-- STEP 10: INSERIAMO la matrice
	output :=(SELECT * from public.giornata_ispettiva_insert_matrici(matrici, idcontrollo, idutente));

    	 return idcontrollo;
END;
$$;


ALTER FUNCTION public.giornata_ispettiva_insert_globale(_json_dati json) OWNER TO postgres;

--
-- TOC entry 1064 (class 1255 OID 16827)
-- Name: giornata_ispettiva_insert_gruppo_ispettivo(json, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.giornata_ispettiva_insert_gruppo_ispettivo(_json_daticonnucleo json, _idgiornataispettiva integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$	
DECLARE
	i json; 
BEGIN
	  FOR i IN SELECT * FROM json_array_elements(_json_daticonnucleo) 
	  LOOP
	      RAISE INFO 'id nominativo %', i->>'id';
	      RAISE INFO 'struttura %', i->>'Struttura';
	      RAISE INFO 'id struttura %', (i->>'Struttura')::json ->> 'id'; 
	
		 INSERT INTO giornata_ispettiva_gruppo_ispettivo (id_giornata_ispettiva, id_componente, enabled, referente, responsabile, id_struttura, nome_struttura) values (_idgiornataispettiva, (i->>'id')::integer,true, (i->> 'referente')::boolean, (i->>'responsabile')::boolean, 
		 (i->>'idStruttura')::integer, (i->>'struttura')::text);
	  END LOOP;


    	 return 1;
END;
$$;


ALTER FUNCTION public.giornata_ispettiva_insert_gruppo_ispettivo(_json_daticonnucleo json, _idgiornataispettiva integer) OWNER TO postgres;

--
-- TOC entry 1065 (class 1255 OID 16828)
-- Name: giornata_ispettiva_insert_linee(json, integer, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.giornata_ispettiva_insert_linee(_json_linea json, _idgiornataispettiva integer, _riferimento_nome_tab text) RETURNS integer
    LANGUAGE plpgsql
    AS $$	
DECLARE
	i json; 
BEGIN
	  -- per quante sono le linee, inserisci 
	  FOR i IN SELECT * FROM json_array_elements(_json_linea) 
	  LOOP
	      RAISE NOTICE 'id %', i->>'id';
		-- can do some processing here
		  INSERT INTO linee_attivita_giornate_ispettive (id_giornata_ispettiva, id_linea_attivita, codice_linea, riferimento_nome_tab) values
		  (_idgiornataispettiva, (i->>'id')::integer, i->>'codice', _riferimento_nome_tab);
	  END LOOP;

    	 return 1;
END;
$$;


ALTER FUNCTION public.giornata_ispettiva_insert_linee(_json_linea json, _idgiornataispettiva integer, _riferimento_nome_tab text) OWNER TO postgres;

--
-- TOC entry 1066 (class 1255 OID 16829)
-- Name: giornata_ispettiva_insert_matrici(json, integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.giornata_ispettiva_insert_matrici(_json_datimatrici json, _idgiornataispettiva integer, _idutente integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$	
DECLARE
	i json; 
BEGIN
	  FOR i IN SELECT * FROM json_array_elements(_json_datimatrici) 
	  LOOP
	      RAISE NOTICE 'id %', i->>'id'; 
	      INSERT INTO giornate_ispettive_matrici (id_giornata_ispettiva, id_matrice, conclusa, enteredby) values
		 (_idgiornataispettiva, (i->>'id')::integer, (i->>'conclusa')::text, _idutente);
	  END LOOP;

    	 return 1;
END;
$$;


ALTER FUNCTION public.giornata_ispettiva_insert_matrici(_json_datimatrici json, _idgiornataispettiva integer, _idutente integer) OWNER TO postgres;

--
-- TOC entry 1067 (class 1255 OID 16830)
-- Name: giornata_ispettiva_insert_motivi(json, integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.giornata_ispettiva_insert_motivi(_json_daticonmotivi json, _idgiornataispettiva integer, _idutente integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$	
DECLARE
	i json; 
BEGIN
	  FOR i IN SELECT * FROM json_array_elements(_json_daticonmotivi) 
	  LOOP
	      RAISE INFO 'id %', i->>'id';
	      INSERT INTO giornate_ispettive_motivi (id_giornata_ispettiva, id_motivo, enteredby) values(_idgiornataispettiva,(i->>'id')::integer,_idutente);
			
	  END LOOP;

    	 return 1;
END;
$$;


ALTER FUNCTION public.giornata_ispettiva_insert_motivi(_json_daticonmotivi json, _idgiornataispettiva integer, _idutente integer) OWNER TO postgres;

--
-- TOC entry 1068 (class 1255 OID 16831)
-- Name: giornata_ispettiva_insert_percontodi(json, integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.giornata_ispettiva_insert_percontodi(_json_datipercontodi json, _idgiornataispettiva integer, _idutente integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$	
DECLARE
	i json; 
BEGIN
	  FOR i IN SELECT * FROM json_array_elements(_json_datipercontodi) 
	  LOOP
	      RAISE INFO 'id %', i->>'id';
	      INSERT INTO giornate_ispettive_per_conto_di (id_giornata_ispettiva, id_percontodi, enteredby) values(_idgiornataispettiva,(i->>'id')::integer,_idutente);
			
	  END LOOP;

    	 return 1;
END;
$$;


ALTER FUNCTION public.giornata_ispettiva_insert_percontodi(_json_datipercontodi json, _idgiornataispettiva integer, _idutente integer) OWNER TO postgres;

--
-- TOC entry 1069 (class 1255 OID 16832)
-- Name: giornata_ispettiva_insert_tecnica(json, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.giornata_ispettiva_insert_tecnica(_json_tecnica json, _idgiornataispettiva integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$	
BEGIN
	  -- effettuo l'update in quanto il record CU esiste gia'
	  UPDATE giornate_ispettive  set id_tecnica  = (_json_tecnica ->> 'id')::int where id = _idgiornataispettiva;
	  return 1;		
END;
$$;


ALTER FUNCTION public.giornata_ispettiva_insert_tecnica(_json_tecnica json, _idgiornataispettiva integer) OWNER TO postgres;

--
-- TOC entry 1070 (class 1255 OID 16833)
-- Name: giornata_ispettiva_insert_tipiverifica(json, integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.giornata_ispettiva_insert_tipiverifica(_json_daticontipiverifica json, _idgiornataispettiva integer, _idutente integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$	
DECLARE
	i json; 
BEGIN
	  FOR i IN SELECT * FROM json_array_elements(_json_daticontipiverifica) 
	  LOOP
	      RAISE INFO 'id %', i->>'id';
	      INSERT INTO giornate_ispettive_tipi_verifica (id_giornata_ispettiva, id_tipo_verifica, enteredby) values(_idgiornataispettiva,(i->>'id')::integer,_idutente);
			
	  END LOOP;

    	 return 1;
END;
$$;


ALTER FUNCTION public.giornata_ispettiva_insert_tipiverifica(_json_daticontipiverifica json, _idgiornataispettiva integer, _idutente integer) OWNER TO postgres;

--
-- TOC entry 1071 (class 1255 OID 16834)
-- Name: giornate_ispettive_lista_globale(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.giornate_ispettive_lista_globale(_id_fascicolo_ispettivo integer) RETURNS json
    LANGUAGE plpgsql
    AS $$
DECLARE
	output json;
BEGIN

	 output := (SELECT array_to_json(array_agg(row_to_json(t))) FROM (select id as "idGiornataIspettiva", l.description as "stato", c.data_inizio as "dataInizio", c.entered as "dataInserimento", concat_ws(' ', co.namefirst, co.namelast)::text as "utenteInserimento"
										from  giornate_ispettive c
										join access a on a.user_id = c.enteredby 
										join contact co on co.contact_id = a.contact_id
									        join lookup_stato_cu l on l.code = c.stato 
										where c.id_fascicolo_ispettivo =  _id_fascicolo_ispettivo and c.trashed_date is null 
										order by c.data_inizio desc) t);


	return output;
	
END;
$$;


ALTER FUNCTION public.giornate_ispettive_lista_globale(_id_fascicolo_ispettivo integer) OWNER TO postgres;

--
-- TOC entry 1072 (class 1255 OID 16835)
-- Name: giornate_ispettive_lista_globale(integer, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.giornate_ispettive_lista_globale(_riferimento_id integer, _riferimento_id_nome_tab text) RETURNS json
    LANGUAGE plpgsql
    AS $$
DECLARE
	output json;
BEGIN

	 output := (SELECT array_to_json(array_agg(row_to_json(t))) FROM (select id as "idGiornataIspettiva", s.description as "stato", l.description as "tecnica", data_inizio as "dataInizio", c.entered as "dataInserimento", concat_ws(' ', co.namefirst, co.namelast)::text as "utenteInserimento"
										from controlli_ufficiali c 
										join lookup_stato_cu s on s.code = c.stato
										join lookup_tipo_controllo l on l.code=c.id_tecnica
										join access a on a.user_id = c.enteredby 
										join contact co on co.contact_id = a.contact_id
										where c.riferimento_id = _riferimento_id and c.riferimento_id_nome_tab = _riferimento_id_nome_tab and c.trashed_date is null
										order by c.data_inizio desc) t);
	return output;
END;
$$;


ALTER FUNCTION public.giornate_ispettive_lista_globale(_riferimento_id integer, _riferimento_id_nome_tab text) OWNER TO postgres;

--
-- TOC entry 1073 (class 1255 OID 16836)
-- Name: has_evento_motivo_cu(text, integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.has_evento_motivo_cu(_codice_evento text DEFAULT NULL::text, _idindicatore integer DEFAULT NULL::integer, _cod_raggruppamento integer DEFAULT NULL::integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
DECLARE  
 esito boolean; 
 codici_evento text[]; 
 codice_recuperato text;
BEGIN 
codice_recuperato := '';

select * into codici_evento from get_codici_evento_motivo_cu(_idindicatore,_cod_raggruppamento);

select unnest into codice_recuperato from (select unnest(codici_evento)) aa where unnest = _codice_evento;

IF codice_recuperato <> '' AND codice_recuperato = _codice_evento THEN
return true;
ELSE
return false;
END IF;

END $$;


ALTER FUNCTION public.has_evento_motivo_cu(_codice_evento text, _idindicatore integer, _cod_raggruppamento integer) OWNER TO postgres;

--
-- TOC entry 1074 (class 1255 OID 16837)
-- Name: has_matrice_anagrafica(integer, text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.has_matrice_anagrafica(_riferimento_id integer, _riferimento_id_nome_tab text, _matrice text) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
DECLARE
	conta_record integer;
BEGIN 
	conta_record := (select count(id_matrice) from anag_dati_autorizzativi_matrici a
	join anag_dati_autorizzativi ad on ad.id = a.id_anag_dati_autorizzativi
	where ad.riferimento_id = _riferimento_id and ad.riferimento_id_nome_tab = _riferimento_id_nome_tab
	and a.id_matrice = (select code from lookup_matrice_controlli where description ilike _matrice and enabled)
	and ad.trashed_date is null);

	if(conta_record > 0) then
		return true;
	else 
		return false;
	end if;
	
END;
$$;


ALTER FUNCTION public.has_matrice_anagrafica(_riferimento_id integer, _riferimento_id_nome_tab text, _matrice text) OWNER TO postgres;

--
-- TOC entry 1075 (class 1255 OID 16838)
-- Name: import_from_aia(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.import_from_aia() RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
   rec text;
BEGIN

     FOR rec IN
        SELECT distinct aia.id_aia from import_aia_anagrafiche aia 
     LOOP
        raise info 'id_aia: % ', rec;
         perform (select * from importa_anagrafica_aia(rec));
     END LOOP;

     return 1;
END
$$;


ALTER FUNCTION public.import_from_aia() OWNER TO postgres;

--
-- TOC entry 1076 (class 1255 OID 16839)
-- Name: import_from_gisa_anag(integer, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.import_from_gisa_anag(_riferimento_id integer, _riferimento_id_nome_tab text) RETURNS integer
    LANGUAGE plpgsql
    AS $$	
declare
	result integer;
	query text;
	idLog integer;
	
        soggetto_indirizzo_comune text;
	soggetto_indirizzo_nazione text;
	lineaattivita_1_data_inizio_attivita  text;
	toponimo_soggfis  text;
	latitudine_stab  text;
	cap_soggfis  text;
	codice_fiscale  text;
	latitudine_leg  text;
	toponimo_sede_legale  text;
	via_soggfis  text;
	autorizzazione_nota  text;
	data_nascita_rapp_leg  text;
	partita_iva  text;
	lineaattivita_1_data_fine_attivita  text;
	autorizzazione_id_aia  text;
	comune_nascita_rapp_leg  text;
	comune_estero_sede_legale  text;
	civico_stab  text;
	autorizzazione_numero  text;
	cf_resp_stab  text;
	civico_sede_legale  text;
	nome_resp_stab  text;
	nome_rapp_leg  text;
	email_impresa  text;
	longitudine_stab  text;
	cod_provincia_soggfis  text;
	responsabile_codice_fiscale text;
	id_impresa_recuperata  text;
	email_rapp_leg  text;
	cod_comune_stab  text;
	lineaattivita_1_codice_univoco_ml  text;	
	cap_leg  text;
	longitudine_leg  text;
	autorizzazione_data  text;
	lineaattivita_1_tipo_carattere_attivita  text;
	nazione_nascita_rapp_leg  text;
	sesso_rapp_leg  text;
	id_rapp_legale_recuperato  text;
	cognome_resp_stab  text;
	toponimo_stab  text;
	autorizzazione_tipo  text;
	ragione_sociale  text;
	cognome_rapp_leg  text;
	civico_soggfis  text;
	denominazione_stab  text;
	id_stabilimento  text;
	autorizzazione_burc  text;
	telefono_rapp_leg  text;
	comune_residenza_estero_soggfis  text;
	nazione_sede_legale  text;
	via_sede_legale  text;
	cod_provincia_sede_legale  text;
	lineaattivita_1_num_riconoscimento  text;
	codice_fiscale_rappresentante  text;
	cap_stab  text;
	lineaattivita_1_tipo_attivita  text;
	cod_provincia_stab  text;
	tipo_impresa  text;
	cod_comune_sede_legale  text;
	via_stab text;

BEGIN

 result := -1;
 idLog := -1;
 query := '';
 
	select 
	t1.soggetto_indirizzo_comune , --ok
	t1.soggetto_indirizzo_nazione , --ok
	t1.linea_1_data_inizio , --ok
	t1.toponimo_soggfis , --ok
	t1.latitudine_stab , --ok
	t1.cap_soggfis ,--ok
	t1.codice_fiscale ,--ok
	t1.latitudine_leg ,--ok
	t1.toponimo_sede_legale ,--ok
	t1.via_soggfis ,--ok
	t1.autorizzazione_nota ,--ok
	t1.data_nascita_rapp_leg ,--ok
	t1.partita_iva ,--ok
	t1.lineaattivita_1_data_fine_attivita ,--ok
	t1.autorizzazione_id_aia ,--ok
	t1.comune_nascita_rapp_leg ,--ok
	t1.comune_estero_sede_legale ,--ok
	t1.civico_stab ,--ok
	t1.autorizzazione_numero ,--ok
	t1.cf_resp_stab ,--ok
	t1.civico_sede_legale ,--ok
	t1.nome_resp_stab ,--ok
	t1.nome_rapp_leg ,--ok
	t1.email_impresa ,--ok
	t1.longitudine_stab ,--ok
	t1.cod_provincia_soggfis ,--ok
	t1.responsabile_codice_fiscale ,--ok
	t1.id_impresa_recuperata , --ok
	t1.email_rapp_leg , --ok
	t1.cod_comune_stab , --ok
	t1.lineaattivita_1_codice_univoco_ml ,--ok
	t1.cap_leg , --ok
	t1.longitudine_leg , --ok
	t1.autorizzazione_data , --ok
	t1.lineaattivita_1_tipo_carattere_attivita , --ok
	t1.nazione_nascita_rapp_leg ,--ok
	t1.sesso_rapp_leg ,--ok
	t1.id_rapp_legale_recuperato ,--ok
	t1.cognome_resp_stab , --ok
	t1.toponimo_stab , --ok
	t1.autorizzazione_tipo , --ok
	t1.ragione_sociale , --ok
	t1.cognome_rapp_leg , --ok
	t1.civico_soggfis , --ok
	t1.denominazione_stab , --ok
	t1.id_stabilimento , --ok
	t1.autorizzazione_burc , --ok
	t1.telefono_rapp_leg , --ok
	t1.comune_residenza_estero_soggfis , --ok
	t1.nazione_sede_legale , --ok
	t1.via_sede_legale , --ok
	t1.cod_provincia_sede_legale ,--ok
	t1.lineaattivita_1_num_riconoscimento , --ok
	t1.codice_fiscale_rappresentante , --ok
	t1.cap_stab , --ok
	t1.lineaattivita_1_tipo_attivita , --ok
	t1.cod_provincia_stab , --ok
	t1.tipo_impresa , --ok
	t1.cod_comune_sede_legale , --ok
	t1.via_stab  --ok
	
 into 
        soggetto_indirizzo_comune,
        soggetto_indirizzo_nazione , 
	lineaattivita_1_data_inizio_attivita ,
	toponimo_soggfis ,
	latitudine_stab ,
	cap_soggfis ,
	codice_fiscale ,
	latitudine_leg ,
	toponimo_sede_legale ,
	via_soggfis ,
	autorizzazione_nota ,
	data_nascita_rapp_leg ,
	partita_iva ,
	lineaattivita_1_data_fine_attivita ,
	autorizzazione_id_aia ,
	comune_nascita_rapp_leg ,
	comune_estero_sede_legale ,
	civico_stab ,
	autorizzazione_numero ,
	cf_resp_stab ,
	civico_sede_legale ,
	nome_resp_stab ,
	nome_rapp_leg ,
	email_impresa ,
	longitudine_stab ,
	cod_provincia_soggfis,
	responsabile_codice_fiscale,
	id_impresa_recuperata ,
	email_rapp_leg ,
	cod_comune_stab ,
	lineaattivita_1_codice_univoco_ml ,	
	cap_leg ,
	longitudine_leg ,
	autorizzazione_data ,
	lineaattivita_1_tipo_carattere_attivita ,
	nazione_nascita_rapp_leg ,
	sesso_rapp_leg ,
	id_rapp_legale_recuperato ,
	cognome_resp_stab ,
	toponimo_stab ,
	autorizzazione_tipo ,
	ragione_sociale ,
	cognome_rapp_leg ,
	civico_soggfis ,
	denominazione_stab ,
	id_stabilimento ,
	autorizzazione_burc ,
	telefono_rapp_leg ,
	comune_residenza_estero_soggfis ,
	nazione_sede_legale ,
	via_sede_legale ,
	cod_provincia_sede_legale ,
	lineaattivita_1_num_riconoscimento ,
	codice_fiscale_rappresentante ,
	cap_stab ,
	lineaattivita_1_tipo_attivita ,
	cod_provincia_stab ,
	tipo_impresa ,
	cod_comune_sede_legale ,
	via_stab
 
	FROM dblink('host=dbGISACAMPANIAL  dbname=gisa'::text, 'SELECT 
	soggetto_indirizzo_comune,
	soggetto_indirizzo_nazione,
	linea_1_data_inizio,
	soggetto_indirizzo_toponimo,
	stabilimento_indirizzo_latitudine,
	soggetto_indirizzo_cap,
	operatore_codice_fiscale,
	operatore_indirizzo_latitudine,
	operatore_indirizzo_toponimo,
	soggetto_indirizzo_via,
	autorizzazione_nota,
	soggetto_data_nascita,
	operatore_partita_iva,
	linea_1_data_fine,
	autorizzazione_id_aia,
	soggetto_comune_nascita,
	operatore_indirizzo_comune_estero,
	stabilimento_indirizzo_civico,
	autorizzazione_numero,
	soggetto_codice_fiscale,
	operatore_indirizzo_civico,
	responsabile_nome,
	soggetto_nome,
	operatore_mail,
	stabilimento_indirizzo_longitudine,
	soggetto_indirizzo_provincia,
	responsabile_codice_fiscale,
	id_impresa_recuperata, 
	soggetto_mail,
	stabilimento_indirizzo_comune,
	linea_1_codice_univoco_ml,
	operatore_indirizzo_cap,
	operatore_indirizzo_latitudine,
	autorizzazione_data, 
	linea_1_tipo_carattere,
	soggetto_nazione_nascita,
	soggetto_sesso,
	id_rapp_legale_recuperato,
	responsabile_cognome,
	stabilimento_indirizzo_toponimo,
	autorizzazione_tipo,
	operatore_ragione_sociale,
	soggetto_cognome,
	soggetto_indirizzo_civico,
	stabilimento_denominazione,
	id_stabilimento,
	autorizzazione_burc,
	soggetto_telefono,
	soggetto_indirizzo_comune_estero,
	operatore_indirizzo_nazione,
	operatore_indirizzo_via,
	operatore_indirizzo_provincia,
	linea_1_num_riconoscimento,
	soggetto_codice_fiscale,
	stabilimento_indirizzo_cap,
	linea_1_tipo_attivita,
	stabilimento_indirizzo_provincia,
	operatore_tipo_impresa,
	operatore_indirizzo_comune,
	stabilimento_indirizzo_via
	from get_dati_per_import_gisa_anag('||_riferimento_id||','''||_riferimento_id_nome_tab||''')'::text)  as
	t1(soggetto_indirizzo_comune text, --ok
	soggetto_indirizzo_nazione text, --ok
	linea_1_data_inizio text, --ok
	toponimo_soggfis text, --ok
	latitudine_stab text, --ok
	cap_soggfis text,--ok
	codice_fiscale text,--ok
	latitudine_leg text,--ok
	toponimo_sede_legale text,--ok
	via_soggfis text,--ok
	autorizzazione_nota text,--ok
	data_nascita_rapp_leg text,--ok
	partita_iva text,--ok
	lineaattivita_1_data_fine_attivita text,--ok
	autorizzazione_id_aia text,--ok
	comune_nascita_rapp_leg text,--ok
	comune_estero_sede_legale text,--ok
	civico_stab text,--ok
	autorizzazione_numero text,--ok
	cf_resp_stab text,--ok
	civico_sede_legale text,--ok
	nome_resp_stab text,--ok
	nome_rapp_leg text,--ok
	email_impresa text,--ok
	longitudine_stab text,--ok
	cod_provincia_soggfis text,--ok
	responsabile_codice_fiscale text,--ok
	id_impresa_recuperata text, --ok
	email_rapp_leg text, --ok
	cod_comune_stab text, --ok
	lineaattivita_1_codice_univoco_ml text,	--ok
	cap_leg text, --ok
	longitudine_leg text, --ok
	autorizzazione_data text, --ok
	lineaattivita_1_tipo_carattere_attivita text, --ok
	nazione_nascita_rapp_leg text,--ok
	sesso_rapp_leg text,--ok
	id_rapp_legale_recuperato text,--ok
	cognome_resp_stab text, --ok
	toponimo_stab text, --ok
	autorizzazione_tipo text, --ok
	ragione_sociale text, --ok
	cognome_rapp_leg text, --ok
	civico_soggfis text, --ok
	denominazione_stab text, --ok
	id_stabilimento text, --ok
	autorizzazione_burc text, --ok
	telefono_rapp_leg text, --ok
	comune_residenza_estero_soggfis text, --ok
	nazione_sede_legale text, --ok
	via_sede_legale text, --ok
	cod_provincia_sede_legale text,--ok
	lineaattivita_1_num_riconoscimento text, --ok
	codice_fiscale_rappresentante text, --ok
	cap_stab text, --ok
	lineaattivita_1_tipo_attivita text, --ok
	cod_provincia_stab text, --ok
	tipo_impresa text, --ok
	cod_comune_sede_legale text, --ok
	via_stab text --ok
	);

raise info '[import_from_gisa_anag] select * from import_from_gisa_anag (%,''%'');', _riferimento_id, _riferimento_id_nome_tab;	
raise info 'comune  nascita %', length(lineaattivita_1_data_fine_attivita);

query := concat(concat('select * from public.insert_gestione_anagrafica(
''"cod_comune_soggfis"=>', 
case when soggetto_indirizzo_comune is null then '-1' else concat('"',soggetto_indirizzo_comune,'"') end,'', ', ', 
'"nazione_soggfis"=>"106"', ', ', 
'"lineaattivita_1_data_inizio_attivita"=>', 
case when (lineaattivita_1_data_inizio_attivita) is null then 'null' else concat('"',lineaattivita_1_data_inizio_attivita,'"') end,'', ', ', 
'"toponimo_soggfis"=>',
case when (toponimo_soggfis) is null then '-1' else concat('"',toponimo_soggfis,'"') end,'', ', ', 
'"latitudine_stab"=>',
case when (latitudine_stab) is null then '0' else concat('"',latitudine_stab,'"') end,'', ', ', 
'"cap_soggfis"=>"',cap_soggfis,'"', ', ',
'"codice_fiscale"=>"',codice_fiscale,'"', ', ',
'"latitudine_leg"=>',
case when (latitudine_leg) is null then '0' else concat('"',latitudine_leg,'"') end,'', ', ', 
'"toponimo_sede_legale"=>',
case when (toponimo_sede_legale) is null then '-1' else concat('"',toponimo_sede_legale,'"') end,'', ', ', 
'"via_soggfis"=>"',via_soggfis,'"', ', ',
'"autorizzazione_nota"=>NULL', ', ', 
'"data_nascita_rapp_leg"=>', 
case when length(data_nascita_rapp_leg) = 0 then 'null' else concat('"',data_nascita_rapp_leg,'"') end,'', ', ', 
'"partita_iva"=>"',partita_iva,'"', ', ',
'"lineaattivita_1_data_fine_attivita"=>',
case when lineaattivita_1_data_fine_attivita is null then 'null' else concat('"',lineaattivita_1_data_fine_attivita,'"') end,'', ', ', 
'"autorizzazione_id_aia"=>NULL', ', ',  
'"comune_nascita_rapp_leg"=>',
case when comune_nascita_rapp_leg is null then '-1' else concat('"',comune_nascita_rapp_leg,'"') end,'', ', ', 
'"comune_estero_sede_legale"=>"',comune_estero_sede_legale,'"', ', ',
'"civico_stab"=>"',civico_stab,'"', ', ',
'"autorizzazione_numero"=>NULL', ', ',
'"cf_resp_stab"=>"',cf_resp_stab,'"', ', ', 
'"civico_sede_legale"=>"',civico_sede_legale,'"', ', ',
'"nome_resp_stab"=>"',nome_resp_stab,'"', ', ', 
'"email_impresa"=>"',email_impresa,'"', ', ',
'"longitudine_stab"=>',
case when (longitudine_stab) is null then '0' else concat('"',longitudine_stab,'"') end,'', ', ', 
'"cod_provincia_soggfis"=>',
case when cod_provincia_soggfis is null then '-1' else concat('"',cod_provincia_soggfis,'"') end,'', ', ', 
'"email_rapp_leg"=>"',email_rapp_leg,'"', ', ', 
''), 
concat('',
'"cod_comune_stab"=>',
case when cod_comune_stab is null then '-1' else concat('"',cod_comune_stab,'"') end,'', ', ', 
'"lineaattivita_1_codice_univoco_ml"=>"NON.MAPP."', ', ',  
'"cap_leg"=>"',cap_leg,'"', ', ',
'"longitudine_leg"=>',
case when (longitudine_leg) is null then '0' else concat('"',longitudine_leg,'"') end,'', ', ', 
'"autorizzazione_data"=>NULL', ', ',  
'"lineaattivita_1_tipo_carattere_attivita"=>',
case when lineaattivita_1_tipo_carattere_attivita is null then '-1' else concat('"',lineaattivita_1_tipo_carattere_attivita,'"') end,'', ', ', 
'"nazione_nascita_rapp_leg"=>"106"', ', ',
'"sesso_rapp_leg"=>"',sesso_rapp_leg,'"', ', ', 
'"id_rapp_legale_recuperato"=>',
case when id_rapp_legale_recuperato is null then '-1' else concat('"',id_rapp_legale_recuperato,'"') end,'', ', ', 
'"cognome_resp_stab"=>"',cognome_resp_stab,'"', ', ',
'"toponimo_stab"=>',
case when toponimo_stab is null then '-1' else concat('"',toponimo_stab,'"') end,'', ', ', 
'"autorizzazione_tipo"=>NULL', ', ', 
'"ragione_sociale"=>"',replace(replace(ragione_sociale,'"','\"'),'''',''''''),'"', ', ',
'"cognome_rapp_leg"=>"',cognome_rapp_leg,'"', ', ',
'"civico_soggfis"=>"',civico_soggfis,'"', ', ', 
'"denominazione_stab"=>NULL', ', ', -------------------------------------> recuperaòa
'"id_stabilimento"=>',
case when id_stabilimento is null then '-1' else concat('"',id_stabilimento,'"') end,'', ', ', 
'"autorizzazione_burc"=>NULL', ', ', 
'"telefono_rapp_leg"=>NULL', ', ',
'"comune_residenza_estero_soggfis"=>"','"', ', ', 
'"nazione_sede_legale"=>"106"', ', ',
'"via_sede_legale"=>"',via_sede_legale,'"', ', ', 
'"cod_provincia_sede_legale"=>',
case when cod_provincia_sede_legale is null then '-1' else concat('"',cod_provincia_sede_legale,'"') end,'', ', ', 
'"lineaattivita_1_num_riconoscimento"=>"',lineaattivita_1_num_riconoscimento,'"', ', ',
'"codice_fiscale_rappresentante"=>"',codice_fiscale_rappresentante,'"', ', ',
'"cap_stab"=>"',cap_stab,'"', ', ',
'"lineaattivita_1_tipo_attivita"=>',
case when lineaattivita_1_tipo_attivita is null then '-1' else concat('"',lineaattivita_1_tipo_attivita,'"') end,'', ', ', 
''),
concat('',
'"cod_provincia_stab"=>',
case when cod_provincia_stab is null then '-1' else concat('"',cod_provincia_stab,'"') end,'', ', ', 
'"tipo_impresa"=>',
case when tipo_impresa is null then '-1' else concat('"',tipo_impresa,'"') end,'', ', ', 
'"cod_comune_sede_legale"=>',
case when cod_comune_sede_legale is null then '-1' else concat('"',cod_comune_sede_legale,'"') end,'', ', ', 
'"via_stab"=>"',via_stab,'"', '''::hstore', ', ',
'''''','::hstore ', ', ',
'964',', ',
'-1',', ',
'''''', ', ',
'-1','',
')')
);


raise info '[import_from_gisa_anag] %', query;

insert into log_import_gisa_remoto(riferimento_id_remoto, riferimento_id_nome_tab_remoto, dbi) values(_riferimento_id, _riferimento_id_nome_tab, query) returning id into idLog;

execute query into result;

update log_import_gisa_remoto set riferimento_id = result, riferimento_id_nome_tab = 'opu_stabilimento', modified = now(), output = result where id = idLog;

if (result > 0) THEN
	UPDATE opu_stabilimento set linee_pregresse=true where id = result;
END IF;

return result;

EXCEPTION WHEN OTHERS THEN
raise notice '% %', SQLERRM, SQLSTATE;
insert into log_import_gisa_remoto(riferimento_id_remoto, riferimento_id_nome_tab_remoto, dbi, output, error) values(_riferimento_id, _riferimento_id_nome_tab, query, result, concat('[',SQLSTATE, '] ', SQLERRM ));
return result;
END;

$$;


ALTER FUNCTION public.import_from_gisa_anag(_riferimento_id integer, _riferimento_id_nome_tab text) OWNER TO postgres;

--
-- TOC entry 1077 (class 1255 OID 16841)
-- Name: importa_anagrafica_aia(text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.importa_anagrafica_aia(_idaia text) RETURNS integer
    LANGUAGE plpgsql STRICT
    AS $$
DECLARE 

_idIndirizzoOperatore integer;
_idIndirizzoStabilimento integer;
_idIndirizzoSoggetto integer;
_idOperatore integer;
_idStabilimento integer;
_idSoggetto integer;
_numeroRegistrazione text;
_numeroRegistrazioneLinea text;
_noteHd text;
_refresh boolean;
r record;
_indice integer;
BEGIN

_noteHd := '[INSERITO PER IMPORT AIA '||_idAia||']';
_indice := 0;

-- insert into opu_indirizzo (sede legale)
insert into opu_indirizzo(via, cap, provincia, nazione, latitudine, longitudine, comune, toponimo, note_hd) 
select i.indirizzo, c.cap, p.code, 'ITALIA', i.coordinate_geografiche_y::double precision, i.coordinate_geografiche_x::double precision, c.id, 100, _noteHd
from import_aia_anagrafiche i
join comuni1 c on c.nome = i.comune
join lookup_province p on p.cod_provincia = i.pr
where i.id_aia = _idAia returning id into _idIndirizzoOperatore;
raise info '_idIndirizzoOperatore %', _idIndirizzoOperatore;

-- insert into opu_indirizzo (sede operativa)
insert into opu_indirizzo(via, cap, provincia, nazione, latitudine, longitudine, comune, toponimo, note_hd) 
select i.indirizzo, c.cap, p.code, 'ITALIA', i.coordinate_geografiche_y::double precision, i.coordinate_geografiche_x::double precision, c.id, 100, _noteHd
from import_aia_anagrafiche i
join comuni1 c on c.nome = i.comune
join lookup_province p on p.cod_provincia = i.pr
where i.id_aia = _idAia returning id into _idIndirizzoStabilimento;
raise info '_idIndirizzoStabilimento %', _idIndirizzoStabilimento;

-- insert into opu_indirizzo (residenza soggetto)
insert into opu_indirizzo(via, cap, provincia, nazione,comune, toponimo, note_hd) 
select '', '', -1, '', -1, -1, _noteHd returning id into _idIndirizzoSoggetto;
raise info '_idIndirizzoSoggetto %', _idIndirizzoSoggetto;

-- insert into opu_soggetto_fisico (soggetto anonimo con codice fiscale ND)
insert into opu_soggetto_fisico (nome, cognome, codice_fiscale, indirizzo_id, note_hd) 
select 'NDN', 'NDC', 'ND', _idIndirizzoSoggetto, _noteHd returning id into _idSoggetto;
raise info '_idSoggetto %', _idSoggetto;

-- insert into opu_operatore
insert into opu_operatore(codice_fiscale_impresa, partita_iva, ragione_sociale, id_indirizzo, note_internal_use_only_hd)
select codice_fiscale, codice_fiscale, ragione_sociale, _idIndirizzoOperatore, _noteHd
from import_aia_anagrafiche 
where id_aia = _idAia returning id into _idOperatore;
raise info '_idOperatore %', _idOperatore;

-- Numero registrazione
_numeroRegistrazione := (select * from genera_numero_registrazione_da_comune((select comune from opu_indirizzo where id = _idIndirizzoStabilimento)));
raise info '_numeroRegistrazione %', _numeroRegistrazione;

-- insert into opu_stabilimento (con numero di registrazione generato, asl dell'indirizzo)
insert into opu_stabilimento (id_asl, id_operatore, id_soggetto_fisico, id_indirizzo, numero_registrazione, tipo_attivita, stato, notes_hd, entered)
select c.codiceistatasl::integer, _idOperatore, _idSoggetto, _idIndirizzoStabilimento, _numeroRegistrazione, 1, 99, _noteHd, now()
from import_aia_anagrafiche i
join comuni1 c on c.nome = i.comune
where i.id_aia = _idAia returning id into _idStabilimento;
raise info '_idStabilimento %', _idStabilimento;

-- insert into opu_rel_operatore_soggetto_fisico
insert into opu_rel_operatore_soggetto_fisico(id_operatore, id_soggetto_fisico, tipo_soggetto_fisico) 
select _idOperatore, _idSoggetto, 1;

-- insert into opu_relazione_stabilimento_linee_produttive

FOR r IN SELECT * FROM import_aia_linee_principali where id_aia = _idAia
    LOOP
    
SELECT _indice+1 into _indice;
SELECT _numeroRegistrazione||LPAD(_indice::text, 3, '0') into _numeroRegistrazioneLinea;

insert into opu_relazione_stabilimento_linee_produttive (id_linea_produttiva, id_stabilimento, stato, primario, numero_registrazione, codice_univoco_ml, tipo_carattere, enabled, note_hd)

select ml8.id_nuova_linea_attivita, _idStabilimento, 99, true, _numeroRegistrazioneLinea, ml8.codice, 1, true, _noteHd
from ml8_linee_attivita_nuove_materializzata ml8 where ml8.macroarea ilike r.denominazione_categoria_impianto and ml8.aggregazione ilike r.codice_ipcc_principale and ml8.attivita ilike r.descrizione_att_principale;

raise info 'Inserita linea principale % _idStabilimento % _numeroRegistrazioneLinea %', _indice, _idStabilimento, _numeroRegistrazioneLinea;
END LOOP;


FOR r IN SELECT * FROM import_aia_linee_secondarie where id_aia = _idAia
    LOOP
    
SELECT _indice+1 into _indice;
SELECT _numeroRegistrazione||LPAD(_indice::text, 3, '0') into _numeroRegistrazioneLinea;

insert into opu_relazione_stabilimento_linee_produttive (id_linea_produttiva, id_stabilimento, stato, primario, numero_registrazione, codice_univoco_ml, tipo_carattere, enabled, note_hd)

select ml8.id_nuova_linea_attivita, _idStabilimento, 99, false, _numeroRegistrazioneLinea, ml8.codice, 1, true, _noteHd
from ml8_linee_attivita_nuove_materializzata ml8 where ml8.macroarea ilike r.denominazione_categoria_impianto and ml8.aggregazione ilike r.codice_ipcc_secondaria and ml8.attivita ilike r.descrizione_att_secondaria;

raise info 'Inserita linea secondaria % _idStabilimento % _numeroRegistrazioneLinea %', _indice, _idStabilimento, _numeroRegistrazioneLinea;
END LOOP;

-- insert into select * from anag_dati_autorizzativi 

 insert into anag_dati_autorizzativi(riferimento_id, riferimento_id_nome_tab, id_aia, tipo_autorizzazione, num_decreto, data_decreto, nota, burc)
 select _idStabilimento, 'opu_stabilimento', i.id_aia, a.code, i.num_decreto_dirigenziale, i.data_decreto_dirigenziale, i.nota_su_decreto, i.burc
 from import_aia_decreti i
 join lookup_autorizzazione_tipo a on a.description ilike i.autorizzazione
 where i.id_aia = _idAia;
raise info 'Inseriti decreti _idStabilimento %', _idStabilimento;

 -- Log import AIA
 -- Qui rivedrei la tabella di log. Forse facciamo prima a usare id_aia invece di id di import_aia che è diventata una tabella di appoggio. In questa versione loggo tutti gli id relativi all'id_aia importato (11 record perchè su import_aia a causa della duplicazione dei decreti ci sono 11 righe). In alternativa una tabella di log per ogni entità di partenza (log_anagrafiche, log_decreti, log_linee_principali, log_linee_secondarie) ma mi sembra inutile

 insert into log_import_aia (id_import_aia, riferimento_id, riferimento_id_nome_tab)
 select id, _idStabilimento, 'opu_stabilimento'
 from import_aia where id_aia = _idAia;

 -- Refresh

 _refresh := (select * from refresh_anagrafica(_idStabilimento, 'opu'));

 raise info 'Terminato inserimento _idStabilimento %', _idStabilimento;

RETURN _idStabilimento;
 END;
$$;


ALTER FUNCTION public.importa_anagrafica_aia(_idaia text) OWNER TO postgres;

--
-- TOC entry 1078 (class 1255 OID 16843)
-- Name: inc_lock(text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.inc_lock(_ip text, _username text) RETURNS integer
    LANGUAGE sql
    AS $_$
	update tb_accesslock set badcount=badcount+1, last=now() where ip=$1 and username=$2 returning badcount;
 
$_$;


ALTER FUNCTION public.inc_lock(_ip text, _username text) OWNER TO postgres;

--
-- TOC entry 1079 (class 1255 OID 16844)
-- Name: infasa_storico_operazioni_utenti(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.infasa_storico_operazioni_utenti() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   DECLARE
   t timestamp;
   BEGIN
   if old.action != new.action or old.command != new.command then 
   INSERT INTO storico_operazioni_utenti(user_id, username, ip, interaction_time, "action", command, object_id, table_name)
    VALUES (NEW.user_id, NEW.username, NEW.last_ip, NEW.last_interaction_time, NEW.action, NEW.command, NEW.object_id, NEW.table_name);
   end if;
    RETURN NEW;
   END
$$;


ALTER FUNCTION public.infasa_storico_operazioni_utenti() OWNER TO postgres;

--
-- TOC entry 1080 (class 1255 OID 16845)
-- Name: inserisci_id_alternativo_opu(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.inserisci_id_alternativo_opu() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   DECLARE
   alternativeId integer;
   
   BEGIN

   alternativeId = (select return_alt_id from  gestione_id_alternativo(NEW.id, 2));
   update opu_stabilimento set alt_id = alternativeId where id = NEW.id;
     
    RETURN NEW;
   END
$$;


ALTER FUNCTION public.inserisci_id_alternativo_opu() OWNER TO postgres;

--
-- TOC entry 1081 (class 1255 OID 16846)
-- Name: inserisci_id_alternativo_ric(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.inserisci_id_alternativo_ric() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   DECLARE
   alternativeId integer;
   
   BEGIN

   alternativeId = (select return_alt_id from  gestione_id_alternativo(NEW.id, 4));
   update suap_ric_scia_stabilimento set alt_id = alternativeId where id = NEW.id;
     
    RETURN NEW;
   END
$$;


ALTER FUNCTION public.inserisci_id_alternativo_ric() OWNER TO postgres;

--
-- TOC entry 1082 (class 1255 OID 16847)
-- Name: inserisci_id_alternativo_sintesis(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.inserisci_id_alternativo_sintesis() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   DECLARE
   alternativeId integer;
   
   BEGIN

   alternativeId = (select return_alt_id from  gestione_id_alternativo(NEW.id, 6));
   update sintesis_stabilimento set alt_id = alternativeId where id = NEW.id;
     
    RETURN NEW;
   END
$$;


ALTER FUNCTION public.inserisci_id_alternativo_sintesis() OWNER TO postgres;

--
-- TOC entry 1083 (class 1255 OID 16848)
-- Name: inserisci_nel_log(text, text, text, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.inserisci_nel_log(_url text, _request text, _response text DEFAULT NULL::text, _id_utente integer DEFAULT NULL::integer) RETURNS TABLE(_idout integer)
    LANGUAGE plpgsql
    AS $$
DECLARE

	
BEGIN

	IF (length(trim(_response)) = 0) THEN
		_response := '### TENTATIVO DI CHIAMATA AI SERVIZI ###';
	END IF;

	IF _id_utente is null or _id_utente = -1 THEN
			_id_utente := 6567;
	END IF;
	
	return query
	insert into ws_storico_chiamate (url, request, response, id_utente, data)
		values (_url, _request, _response, _id_utente, now()) returning id;
					
END;
$$;


ALTER FUNCTION public.inserisci_nel_log(_url text, _request text, _response text, _id_utente integer) OWNER TO postgres;

--
-- TOC entry 1084 (class 1255 OID 16849)
-- Name: insert_anag_dati_aggiuntivi(integer, text, text, text, text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.insert_anag_dati_aggiuntivi(_riferimento_id integer, _riferimento_id_nome_tab text, _denominazione_stabilimento text, _nome_responsabile text, _cognome_responsabile text, _cf_responsabile text) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE 
	id_anag_dati_aggiuntivi integer;
BEGIN	
	insert into anag_dati_aggiuntivi(riferimento_id , riferimento_id_nome_tab, denominazione_stabilimento, nome_responsabile, cognome_responsabile, cf_responsabile) 
	values(_riferimento_id, _riferimento_id_nome_tab, _denominazione_stabilimento, _nome_responsabile, _cognome_responsabile, _cf_responsabile) returning id into id_anag_dati_aggiuntivi;

	return id_anag_dati_aggiuntivi;
	      
END;
$$;


ALTER FUNCTION public.insert_anag_dati_aggiuntivi(_riferimento_id integer, _riferimento_id_nome_tab text, _denominazione_stabilimento text, _nome_responsabile text, _cognome_responsabile text, _cf_responsabile text) OWNER TO postgres;

--
-- TOC entry 1085 (class 1255 OID 16850)
-- Name: insert_anagrafica_fasi_lavorazione(integer, text, integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.insert_anagrafica_fasi_lavorazione(_riferimento_id integer, _riferimento_id_nome_tab text, _id integer, _userid integer) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN
	insert into anagrafica_fasi_lavorazione(enteredby, riferimento_id, riferimento_id_nome_tab, id_fase_lavorazione, note_hd) values
	(_userid, _riferimento_id, _riferimento_id_nome_tab, _id, 'Inserimento effettuato dalla dbi');

	return 'OK';

END;
$$;


ALTER FUNCTION public.insert_anagrafica_fasi_lavorazione(_riferimento_id integer, _riferimento_id_nome_tab text, _id integer, _userid integer) OWNER TO postgres;

--
-- TOC entry 1086 (class 1255 OID 16851)
-- Name: insert_cu_canili(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.insert_cu_canili() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   DECLARE
   tipo integer;
   idCanile integer;
   insertQuery text;
   BEGIN
	tipo := ( select tipologia from organization where org_id = NEW.org_id ) ;
	if tipo = 10 and NEW.tipologia = 3 then
		idCanile := ( select org_id_c from organization where org_id = NEW.org_id ) ;
		if NEW.closed is null then
			insertQuery := 'INSERT INTO cu_canili(id_canile, id_controllo, data_inizio_controllo) VALUES(' || idCanile || ',' || NEW.ticketid || ',''' || NEW.assigned_date || ''')';
		else
			insertQuery := 'INSERT INTO cu_canili(id_canile, id_controllo, data_inizio_controllo, chiuso) VALUES(' || idCanile || ',' || NEW.ticketid || ',''' || NEW.assigned_date || ''''  || ',''' || NEW.closed || ''')';
		end if;
		PERFORM dblink_connect('canina-conn','host=dbservercanina dbname=canina');
		PERFORM dblink_exec('canina-conn',insertQuery);
		PERFORM dblink_disconnect('canina-conn');
	end if;
    RETURN NEW;
   END
$$;


ALTER FUNCTION public.insert_cu_canili() OWNER TO postgres;

--
-- TOC entry 1087 (class 1255 OID 16852)
-- Name: insert_cu_colonie(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.insert_cu_colonie() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   DECLARE
   tipo integer;
   idCanile integer;
   insertQuery text;
   BEGIN
	tipo := ( select tipologia from organization where org_id = NEW.org_id ) ;
	if tipo = 16 and NEW.tipologia = 3 then
		idCanile := ( select org_id_c from organization where org_id = NEW.org_id ) ;
		if NEW.closed is null then
			insertQuery := 'INSERT INTO cu_colonie(id_canile, id_controllo, data_inizio_controllo) VALUES(' || idCanile || ',' || NEW.ticketid || ',''' || NEW.assigned_date || ''')';
		else
			insertQuery := 'INSERT INTO cu_colonie(id_canile, id_controllo, data_inizio_controllo, chiuso) VALUES(' || idCanile || ',' || NEW.ticketid || ',''' || NEW.assigned_date || ''''  || ',''' || NEW.closed || ''')';
		end if;
		PERFORM dblink_connect('felina-conn','host=dbservercanina dbname=felina');
		PERFORM dblink_exec('felina-conn',insertQuery);
		PERFORM dblink_disconnect('felina-conn');
	end if;
    RETURN NEW;
   END
$$;


ALTER FUNCTION public.insert_cu_colonie() OWNER TO postgres;

--
-- TOC entry 1088 (class 1255 OID 16853)
-- Name: insert_cu_operatori_commerciali(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.insert_cu_operatori_commerciali() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   DECLARE
   tipo integer;
   idOperatoreCommerciale integer;
   insertQuery text;
   BEGIN
	tipo := ( select tipologia from organization where org_id = NEW.org_id ) ;
	if tipo = 20 and NEW.tipologia = 3 then
		idOperatoreCommerciale := ( select org_id_c from organization where org_id = NEW.org_id ) ;
		if NEW.closed is null then
			insertQuery := 'INSERT INTO cu_operatori_commerciali(id_operatore_commerciale, id_controllo, data_inizio_controllo) VALUES(' || idOperatoreCommerciale || ',' || NEW.ticketid || ',''' || NEW.assigned_date || ''')';
		else
			insertQuery := 'INSERT INTO cu_operatori_commerciali(id_operatore_commerciale, id_controllo, data_inizio_controllo, chiuso) VALUES(' || idOperatoreCommerciale || ',' || NEW.ticketid || ',''' || NEW.assigned_date || ''''  || ',''' || NEW.closed || ''')';
		end if;
		PERFORM dblink_connect('canina-conn','host=dbservercanina dbname=canina');
		PERFORM dblink_exec('canina-conn',insertQuery);
		PERFORM dblink_disconnect('canina-conn');
	end if;
    RETURN NEW;
   END
$$;


ALTER FUNCTION public.insert_cu_operatori_commerciali() OWNER TO postgres;

--
-- TOC entry 1089 (class 1255 OID 16854)
-- Name: insert_dati_autorizzativi(integer, text, integer, text, integer, text, text, text, text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.insert_dati_autorizzativi(_riferimento_id integer, _riferimento_id_nome_tab text, _id_utente integer, _id_aia text, _id_autorizzazione integer, _num_decreto text, _data_decreto text, _nota text, _burc text, _id_matrici text) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
	  id_opu_result integer;
	  matrici text[];
          i text;
BEGIN

 
	matrici := string_to_array(_id_matrici,',');
	raise info 'matrici %', matrici;
	
	insert into anag_dati_autorizzativi(riferimento_id , riferimento_id_nome_tab, id_aia, tipo_autorizzazione, num_decreto, data_decreto, nota, burc) values
	                               (_riferimento_id, _riferimento_id_nome_tab,_id_aia, _id_autorizzazione, _num_decreto, _data_decreto, _nota, _burc) 
	                          
	returning id into id_opu_result;

	FOREACH i IN ARRAY matrici --loop through each element in array matrici
	LOOP
	 raise info '%', i;
		insert into anag_dati_autorizzativi_matrici (id_anag_dati_autorizzativi, id_matrice, enteredby) values (id_opu_result, i::integer, _id_utente);	
	END LOOP;

	if id_opu_result > 0 then
		return 'OK, operazione effettuata con successo.';
	else
		return 'KO, operazione non effettuata.';
	end if;

END;
$$;


ALTER FUNCTION public.insert_dati_autorizzativi(_riferimento_id integer, _riferimento_id_nome_tab text, _id_utente integer, _id_aia text, _id_autorizzazione integer, _num_decreto text, _data_decreto text, _nota text, _burc text, _id_matrici text) OWNER TO postgres;

--
-- TOC entry 1090 (class 1255 OID 16855)
-- Name: insert_gestione_anagrafica(public.hstore, public.hstore, integer, integer, text, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.insert_gestione_anagrafica(campi_fissi public.hstore, campi_estesi public.hstore, utente_in integer, id_tipo_pratica_in integer, numero_pratica_in text, id_comune_in integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE 

	_id_indirizzo_sede_legale integer;
	_id_indirizzo_stabilimento integer;
	_id_indirizzo_sogg_fis integer;
	_id_sogg_fis integer;
	_id_operatore integer;
	_id_stabilimento integer;
	_comune_nascita_testo text;
	_codice_univoco_ml text;
	_data_inizio text;
	_data_fine text;
	_num_riconoscimento text;
	_tipo_carattere text;
	r integer;
	_id_suap_operatore integer;
	_id_suap_stabilimento integer;
	_alt_id_suap_stabilimento integer;
	_id_suap_sogg_fis integer;
	_n_categorizzabili integer;
	_numero_registrazione_osa text;
        
BEGIN	

_n_categorizzabili := -1;

--fare le assegnazioni alla variabili dichiarate sopra sia nel caso di dati recuperati che di nuovo inserimento

	IF (length(trim(campi_fissi ->'id_impresa_recuperata')) <> 0) THEN	
		_id_operatore := (campi_fissi -> 'id_impresa_recuperata')::integer;
		--update opu_operatore
		update opu_operatore 
			set codice_fiscale_impresa = campi_fissi -> 'codice_fiscale', partita_iva = campi_fissi -> 'partita_iva',
			    ragione_sociale = campi_fissi -> 'ragione_sociale', domicilio_digitale = campi_fissi -> 'email_impresa',
			    tipo_societa = (campi_fissi -> 'tipo_impresa')::integer 
			where id = _id_operatore;
			
		--IF (length(trim(campi_fissi ->'via_sede_legale')) <> 0 OR length(trim(campi_fissi -> 'comune_estero_sede_legale')) <> 0) THEN
		IF (length(trim(campi_fissi ->'via_sede_legale')) <> 0 OR (campi_fissi -> 'nazione_sede_legale')::integer <> 106) THEN
			--inserisci indirizzo impresa
			_id_indirizzo_sede_legale := insert_opu_noscia_indirizzo((campi_fissi -> 'nazione_sede_legale')::integer, campi_fissi -> 'cod_provincia_sede_legale',
								       (campi_fissi -> 'cod_comune_sede_legale')::integer, campi_fissi -> 'comune_estero_sede_legale', 
								       (campi_fissi -> 'toponimo_sede_legale')::integer, campi_fissi -> 'via_sede_legale', campi_fissi -> 'cap_leg', campi_fissi -> 'civico_sede_legale',
								       (campi_fissi -> 'latitudine_leg')::double precision, (campi_fissi -> 'longitudine_leg')::double precision,
								       campi_fissi -> 'presso_sede_legale');
			--update id indirizzo impresa
			update opu_operatore set id_indirizzo = _id_indirizzo_sede_legale where id = _id_operatore;
			
		END IF;

		IF (length(trim(campi_fissi ->'id_rapp_legale_recuperato')) <> 0) THEN
			_id_sogg_fis := (campi_fissi -> 'id_rapp_legale_recuperato')::integer;
			--update opu_soggetto_fisico
			--gestione nel caso di provenienza estera
			IF (campi_fissi -> 'nazione_nascita_rapp_leg') = '106' THEN
				select nome into _comune_nascita_testo from comuni1 where id = (campi_fissi -> 'comune_nascita_rapp_leg')::integer limit 1;
				update opu_soggetto_fisico 
					set cognome = campi_fissi -> 'cognome_rapp_leg', nome = campi_fissi -> 'nome_rapp_leg',
					    comune_nascita = _comune_nascita_testo, codice_fiscale = campi_fissi -> 'codice_fiscale_rappresentante',
					    sesso = campi_fissi -> 'sesso_rapp_leg', telefono = campi_fissi -> 'telefono_rapp_leg',
					    email = campi_fissi -> 'email_rapp_leg', data_nascita = (campi_fissi -> 'data_nascita_rapp_leg')::timestamp without time zone, 
					    provenienza_estera = false, id_nazione_nascita = (campi_fissi -> 'nazione_nascita_rapp_leg')::integer, 
					    id_comune_nascita = (campi_fissi -> 'comune_nascita_rapp_leg')::integer
				        where id = _id_sogg_fis;
			ELSIF (length(trim(campi_fissi ->'nazione_nascita_rapp_leg')) <> 0) THEN
				update opu_soggetto_fisico 
					set cognome = campi_fissi -> 'cognome_rapp_leg', nome = campi_fissi -> 'nome_rapp_leg',
					    comune_nascita = campi_fissi -> 'comune_nascita_rapp_leg', codice_fiscale = campi_fissi -> 'codice_fiscale_rappresentante',
					    sesso = campi_fissi -> 'sesso_rapp_leg', telefono = campi_fissi -> 'telefono_rapp_leg',
					    email = campi_fissi -> 'email_rapp_leg', data_nascita = (campi_fissi -> 'data_nascita_rapp_leg')::timestamp without time zone, 
					    provenienza_estera = true, id_nazione_nascita = (campi_fissi -> 'nazione_nascita_rapp_leg')::integer
				        where id = _id_sogg_fis;
				
			END IF;
				    
			--IF (length(trim(campi_fissi ->'via_soggfis')) <> 0 OR length(trim(campi_fissi -> 'comune_residenza_estero_soggfis')) <> 0) THEN
			IF (length(trim(campi_fissi ->'via_soggfis')) <> 0 OR (campi_fissi -> 'nazione_soggfis')::integer <> 106) THEN
				--insert indirizzo soggetto fisico
				_id_indirizzo_sogg_fis := insert_opu_noscia_indirizzo((campi_fissi -> 'nazione_soggfis')::integer, campi_fissi -> 'cod_provincia_soggfis',
								       (campi_fissi -> 'cod_comune_soggfis')::integer, campi_fissi -> 'comune_residenza_estero_soggfis',
								       (campi_fissi -> 'toponimo_soggfis')::integer, campi_fissi -> 'via_soggfis', campi_fissi -> 'cap_soggfis', campi_fissi -> 'civico_soggfis',
								       (campi_fissi -> 'latitudine_soggfis')::double precision, (campi_fissi -> 'longitudine_soggfis')::double precision,
								       campi_fissi -> 'presso_soggfis');
				--update id indirizzo soggetto fisico
				update opu_soggetto_fisico set indirizzo_id = _id_indirizzo_sogg_fis where id = _id_sogg_fis;
			END IF;
		ELSE
			--inserisci indirizzo soggetto fisico
			--IF (length(trim(campi_fissi ->'via_soggfis')) <> 0 OR length(trim(campi_fissi -> 'comune_residenza_estero_soggfis')) <> 0) THEN
			IF (length(trim(campi_fissi ->'via_soggfis')) <> 0 OR (campi_fissi -> 'nazione_soggfis')::integer <> 106) THEN
				_id_indirizzo_sogg_fis := insert_opu_noscia_indirizzo((campi_fissi -> 'nazione_soggfis')::integer, campi_fissi -> 'cod_provincia_soggfis',
									       (campi_fissi -> 'cod_comune_soggfis')::integer, campi_fissi -> 'comune_residenza_estero_soggfis',
									       (campi_fissi -> 'toponimo_soggfis')::integer, campi_fissi -> 'via_soggfis', campi_fissi -> 'cap_soggfis', campi_fissi -> 'civico_soggfis',
									       (campi_fissi -> 'latitudine_soggfis')::double precision, (campi_fissi -> 'longitudine_soggfis')::double precision,
									       campi_fissi -> 'presso_soggfis');
		        END IF;
			--inserisci soggetto fisico
			IF (length(trim(campi_fissi ->'codice_fiscale_rappresentante')) <> 0 OR (campi_fissi -> 'nazione_nascita_rapp_leg')::integer <> 106) THEN
				_id_sogg_fis := insert_opu_noscia_soggetto_fisico(campi_fissi -> 'nome_rapp_leg', campi_fissi -> 'cognome_rapp_leg', (campi_fissi -> 'nazione_nascita_rapp_leg')::integer,
									  campi_fissi -> 'codice_fiscale_rappresentante', campi_fissi -> 'sesso_rapp_leg', utente_in, 
									  campi_fissi -> 'telefono_rapp_leg', campi_fissi -> 'email_rapp_leg', _id_indirizzo_sogg_fis,
									  campi_fissi -> 'comune_nascita_rapp_leg', (campi_fissi -> 'data_nascita_rapp_leg')::timestamp without time zone);
		        END IF;
			--inserisci relazione operatore-soggettofisico
			--inserimento relazione opu_rel_operatore_soggetto_fisico
			IF _id_sogg_fis is not null AND _id_operatore is not null THEN
				perform insert_opu_noscia_rel_impresa_soggfis(_id_sogg_fis, _id_operatore);
			END IF;
		END IF;
	ELSE
		--inserisciti impresa e soggetto fisico ex novo (indirizzi compresi)
		--inserimento indirizzo soggetto fisico/rapp legale
		--IF (length(trim(campi_fissi ->'via_soggfis')) <> 0 OR length(trim(campi_fissi -> 'comune_residenza_estero_soggfis')) <> 0) THEN
		IF (length(trim(campi_fissi ->'via_soggfis')) <> 0 OR (campi_fissi -> 'nazione_soggfis')::integer <> 106) THEN
			_id_indirizzo_sogg_fis := insert_opu_noscia_indirizzo((campi_fissi -> 'nazione_soggfis')::integer, campi_fissi -> 'cod_provincia_soggfis',
									       (campi_fissi -> 'cod_comune_soggfis')::integer, campi_fissi -> 'comune_residenza_estero_soggfis',
									       (campi_fissi -> 'toponimo_soggfis')::integer, campi_fissi -> 'via_soggfis', campi_fissi -> 'cap_soggfis', campi_fissi -> 'civico_soggfis',
									       (campi_fissi -> 'latitudine_soggfis')::double precision, (campi_fissi -> 'longitudine_soggfis')::double precision,
									       campi_fissi -> 'presso_soggfis');
		END IF;

		--inserimento indirizzo sede legale/impresa
		--IF (length(trim(campi_fissi ->'via_sede_legale')) <> 0 OR length(trim(campi_fissi -> 'comune_estero_sede_legale')) <> 0) THEN
		IF (length(trim(campi_fissi ->'via_sede_legale')) <> 0 OR (campi_fissi -> 'nazione_sede_legale')::integer <> 106) THEN
			_id_indirizzo_sede_legale := insert_opu_noscia_indirizzo((campi_fissi -> 'nazione_sede_legale')::integer, campi_fissi -> 'cod_provincia_sede_legale',
									       (campi_fissi -> 'cod_comune_sede_legale')::integer, campi_fissi -> 'comune_estero_sede_legale', 
									       (campi_fissi -> 'toponimo_sede_legale')::integer, campi_fissi -> 'via_sede_legale', campi_fissi -> 'cap_leg', campi_fissi -> 'civico_sede_legale',
									       (campi_fissi -> 'latitudine_leg')::double precision, (campi_fissi -> 'longitudine_leg')::double precision,
									       campi_fissi -> 'presso_sede_legale');
		END IF;

		--inserimento soggetto fisico/rapp legale
		IF (length(trim(campi_fissi ->'codice_fiscale_rappresentante')) <> 0 OR (campi_fissi -> 'nazione_nascita_rapp_leg')::integer <> 106) THEN
			_id_sogg_fis := insert_opu_noscia_soggetto_fisico(campi_fissi -> 'nome_rapp_leg', campi_fissi -> 'cognome_rapp_leg', (campi_fissi -> 'nazione_nascita_rapp_leg')::integer,
									  campi_fissi -> 'codice_fiscale_rappresentante', campi_fissi -> 'sesso_rapp_leg', utente_in, 
									  campi_fissi -> 'telefono_rapp_leg', campi_fissi -> 'email_rapp_leg', _id_indirizzo_sogg_fis,
									  campi_fissi -> 'comune_nascita_rapp_leg', (campi_fissi -> 'data_nascita_rapp_leg')::timestamp without time zone);
		END IF;

		--inserimento impresa/ operatore
		IF (length(trim(campi_fissi ->'partita_iva')) <> 0 OR length(trim(campi_fissi -> 'codice_fiscale')) <> 0) THEN
			_id_operatore := insert_opu_noscia_impresa(campi_fissi -> 'codice_fiscale', campi_fissi -> 'partita_iva', campi_fissi -> 'ragione_sociale',
								   utente_in, campi_fissi -> 'email_impresa', (campi_fissi -> 'tipo_impresa')::integer, _id_indirizzo_sede_legale);
		END IF;

		--inserimento relazione opu_rel_operatore_soggetto_fisico
		IF _id_sogg_fis is not null AND _id_operatore is not null THEN
			perform insert_opu_noscia_rel_impresa_soggfis(_id_sogg_fis, _id_operatore);
		END IF;
	END IF;

	--gestione stabilimento
	--inserimento indirizzo stabilimento
	_id_indirizzo_stabilimento := _id_indirizzo_sede_legale;
	IF (length(trim(campi_fissi ->'via_stab')) <> 0) THEN
		_id_indirizzo_stabilimento := insert_opu_noscia_indirizzo(106, campi_fissi -> 'cod_provincia_stab',
								       (campi_fissi -> 'cod_comune_stab')::integer, null, (campi_fissi -> 'toponimo_stab')::integer,
								       campi_fissi -> 'via_stab', campi_fissi -> 'cap_stab', campi_fissi -> 'civico_stab',
								       (campi_fissi -> 'latitudine_stab')::double precision, (campi_fissi -> 'longitudine_stab')::double precision,
								       campi_fissi -> 'presso_stab');
	END IF;
	
	--inserisci stabilimento e recupero id stabilimento inserito
	IF _id_indirizzo_stabilimento = _id_indirizzo_sede_legale THEN
		_numero_registrazione_osa := genera_numero_registrazione_da_comune((campi_fissi -> 'cod_comune_sede_legale')::integer);
	ELSE 
		_numero_registrazione_osa := genera_numero_registrazione_da_comune((campi_fissi -> 'cod_comune_stab')::integer);
	END IF;
	
	IF _id_indirizzo_stabilimento is not null THEN
		SELECT distinct(split_part(key,'_',2)) into r FROM each(campi_fissi) where key ilike '%lineaattivita_%' || '%_codice_univoco_ml%' limit 1;
		_codice_univoco_ml := campi_fissi -> concat('lineaattivita_', r,'_codice_univoco_ml');
		--_id_stabilimento := insert_opu_noscia_stabilimento(_id_operatore, _id_indirizzo_stabilimento, utente_in, _codice_univoco_ml, campi_fissi -> 'numero_registrazione_stabilimento');
		_id_stabilimento := insert_opu_noscia_stabilimento(_id_operatore, _id_indirizzo_stabilimento, utente_in, _codice_univoco_ml, _numero_registrazione_osa);
	END IF;

	IF _id_indirizzo_stabilimento = _id_indirizzo_sede_legale THEN
		update opu_stabilimento set id_asl = (select codiceistatasl::integer from comuni1 where id = (campi_fissi -> 'cod_comune_sede_legale')::integer) where id = _id_stabilimento;
	END IF;

	--inserimento relazione stabilimento linea di attivita
	FOR r IN SELECT distinct(split_part(key,'_',2)) FROM each(campi_fissi) where key ilike '%lineaattivita_%'
	    LOOP
		_codice_univoco_ml := campi_fissi -> concat('lineaattivita_', r,'_codice_univoco_ml');
		_data_inizio := campi_fissi -> concat('lineaattivita_', r,'_data_inizio_attivita');
		_data_fine := campi_fissi -> concat('lineaattivita_', r,'_data_fine_attivita');
		_num_riconoscimento := campi_fissi -> concat('lineaattivita_', r,'_num_riconoscimento');
		_tipo_carattere := campi_fissi -> concat('lineaattivita_', r,'_tipo_carattere_attivita');
		
		IF (_id_stabilimento is not null AND length(trim(_codice_univoco_ml)) <> 0) THEN
			perform insert_opu_noscia_rel_stabilimento_linea(_id_stabilimento, _codice_univoco_ml, _num_riconoscimento, utente_in, 
									_data_inizio::timestamp without time zone, _data_fine::timestamp without time zone,
									_tipo_carattere::integer);
		END IF;	
	    END LOOP;

		IF (_id_stabilimento is not null) THEN
			update opu_stabilimento set data_inizio_attivita = (select min(data_inizio) from opu_relazione_stabilimento_linee_produttive where id_stabilimento = _id_stabilimento and enabled) where id = _id_stabilimento;    
         	END IF; 

select count(ml8.*) into _n_categorizzabili from opu_relazione_stabilimento_linee_produttive rel 
join ml8_linee_attivita_nuove_materializzata ml8 on ml8.id_nuova_linea_attivita = rel.id_linea_produttiva 
left join master_list_flag_linee_attivita flag on flag.codice_univoco = ml8.codice_attivita 
where flag.categorizzabili and rel.enabled and rel.id_stabilimento = _id_stabilimento;


-- inserimento campi aggiuntivi anagrafica
IF (_id_stabilimento is not null) THEN
	perform insert_anag_dati_aggiuntivi(_id_stabilimento,'opu_stabilimento',campi_fissi -> 'denominazione_stab',
	                                            campi_fissi -> 'nome_resp_stab', campi_fissi -> 'cognome_resp_stab', campi_fissi -> 'cf_resp_stab');
END IF; 
-- fine inserimento campi aggiuntivi anagrafica



IF _n_categorizzabili > 0 THEN
   update opu_stabilimento set categoria_rischio = 3 where id = _id_stabilimento;
END IF;

	perform refresh_anagrafica(_id_stabilimento, 'opu');

	raise WARNING 'id finali: id stab %, id operatore %, id sogg fis %s, id indi stab %, id ind impresa %s, id ind sogg fis %', 
			_id_stabilimento, _id_operatore, _id_sogg_fis, _id_indirizzo_stabilimento, _id_indirizzo_sede_legale, _id_indirizzo_sogg_fis;


	
	return _id_stabilimento;
	
END;
$$;


ALTER FUNCTION public.insert_gestione_anagrafica(campi_fissi public.hstore, campi_estesi public.hstore, utente_in integer, id_tipo_pratica_in integer, numero_pratica_in text, id_comune_in integer) OWNER TO postgres;

--
-- TOC entry 1091 (class 1255 OID 16857)
-- Name: insert_into_ml_materializzata(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.insert_into_ml_materializzata(_id_linea integer DEFAULT NULL::integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE

BEGIN

insert into ml8_linee_attivita_nuove_materializzata (
 id_nuova_linea_attivita, enabled, id_macroarea, id_aggregazione, id_attivita, codice_macroarea, codice_aggregazione, codice_attivita, macroarea, aggregazione,
 attivita, id_norma, norma, descrizione, livello, id_padre, path_id, path_descrizione, codice, path_codice
) select id_nuova_linea_attivita, enabled, id_macroarea, id_aggregazione, id_attivita, codice_macroarea, codice_aggregazione, codice_attivita, macroarea, aggregazione,
 attivita, id_norma, norma, descrizione, livello, id_padre, path_id, path_desc, codice, path_codice from master_list_view 
 where 1=1
 and (_id_linea is null or id_nuova_linea_attivita = _id_linea);

       return 1;


 END;
$$;


ALTER FUNCTION public.insert_into_ml_materializzata(_id_linea integer) OWNER TO postgres;

--
-- TOC entry 1092 (class 1255 OID 16858)
-- Name: insert_linee_attivita_ml8_temp_organization(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.insert_linee_attivita_ml8_temp_organization() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   DECLARE
   codiceUnivoco text;
   idNorma integer;
   mapCompleto boolean;
   BEGIN

idNorma := -1;
codiceUnivoco = '';
mapCompleto = false;

   if NEW.tipologia in(4,5,12,14,15,17,22,255) 
   then
   select id_norma, codice_univoco_ml, map_completo into idNorma, codiceUnivoco, mapCompleto from linee_attivita_ml8_temp where id_tipologia_operatore = NEW.tipologia limit 1;

   if idNorma > 0 and codiceUnivoco <> '' then
   insert into linee_attivita_ml8_temp (org_id, id_norma, id_tipologia_operatore, codice_univoco_ml, map_completo) values (NEW.org_id, idNorma, NEW.tipologia, codiceUnivoco, mapCompleto);
   end if;
   
   end if;

      if NEW.tipologia in(2) 
   then

insert into lista_linee_vecchia_anagrafica_stabilimenti_soggetti_a_scia(id_tipologia_operatore, id_norma, macroarea, aggregazione, attivita, attivita_specifica,
note, org_id, id_tipo_linea_reg_ric)(
select o.tipologia as id_tipologia_operatore, id_opu_lookup_norme_master_list as id_norma, 'PRODUZIONE PRIMARIA REGISTRABILI' as macroarea, concat_ws(' - ',o.specie_allev, o.tipologia_strutt) as aggregazione,
coalesce(o.orientamento_prod,'ALLEVAMENTO') as attivita, NULL as attivita_specifica, NULL as note, o.org_id, 1 as id_tipo_linea_reg_ric
from organization o
join opu_lookup_norme_master_list_rel_tipologia_organzation norma on norma.tipologia_organization =o.tipologia
where o.tipologia = 2 and trashed_date is null and o.org_id = NEW.org_id);
   
   
   end if;
       
    RETURN NEW;
   END
$$;


ALTER FUNCTION public.insert_linee_attivita_ml8_temp_organization() OWNER TO postgres;

--
-- TOC entry 1093 (class 1255 OID 16859)
-- Name: insert_opu_no_scia_dati_aggiuntivi(integer, text, text, integer, text, text, text, text, text, text, text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.insert_opu_no_scia_dati_aggiuntivi(_riferimento_id integer, _riferimento_id_nome_tab text, _autorizzazione_id_aia text, _autorizzazione_tipo integer, _autorizzazione_numero text, _autorizzazione_data text, _autorizzazione_nota text, _autorizzazione_burc text, _denominazione_stabilimento text, _nome_responsabile text, _cognome_responsabile text, _cf_responsabile text) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE 
	id_opu_dati_aggiuntivi integer;
BEGIN	
	insert into anag_dati_aggiuntivi(riferimento_id , riferimento_id_nome_tab, id_aia, tipo_autorizzazione, num_decreto, data_decreto, nota, burc, denominazione_stabilimento, nome_responsabile, cognome_responsabile, cf_responsabile) 
	values(_riferimento_id, _riferimento_id_nome_tab, _autorizzazione_id_aia, _autorizzazione_tipo, _autorizzazione_numero, _autorizzazione_data, _autorizzazione_nota,_autorizzazione_burc, _denominazione_stabilimento,
	_nome_responsabile, _cognome_responsabile, _cf_responsabile) returning id into id_opu_dati_aggiuntivi;

	return id_opu_dati_aggiuntivi;
	      
END;
$$;


ALTER FUNCTION public.insert_opu_no_scia_dati_aggiuntivi(_riferimento_id integer, _riferimento_id_nome_tab text, _autorizzazione_id_aia text, _autorizzazione_tipo integer, _autorizzazione_numero text, _autorizzazione_data text, _autorizzazione_nota text, _autorizzazione_burc text, _denominazione_stabilimento text, _nome_responsabile text, _cognome_responsabile text, _cf_responsabile text) OWNER TO postgres;

--
-- TOC entry 1094 (class 1255 OID 16860)
-- Name: insert_opu_noscia_impresa(text, text, text, integer, text, integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.insert_opu_noscia_impresa(_codice_fiscale_impresa text, _partita_iva text, _ragione_sociale text, _enteredby integer, _domicilio_digitale text, _tipo_impresa integer, _id_indirizzo integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE 
	id_impresa integer;
        
BEGIN	


	insert into opu_operatore(codice_fiscale_impresa, partita_iva, ragione_sociale, enteredby, entered, domicilio_digitale, tipo_societa, id_indirizzo) 
	values (_codice_fiscale_impresa, _partita_iva, _ragione_sociale, _enteredby, now(), _domicilio_digitale, _tipo_impresa, _id_indirizzo) returning id into id_impresa;

	return id_impresa;
	      
END;
$$;


ALTER FUNCTION public.insert_opu_noscia_impresa(_codice_fiscale_impresa text, _partita_iva text, _ragione_sociale text, _enteredby integer, _domicilio_digitale text, _tipo_impresa integer, _id_indirizzo integer) OWNER TO postgres;

--
-- TOC entry 1095 (class 1255 OID 16861)
-- Name: insert_opu_noscia_indirizzo(integer, text, integer, text, integer, text, text, text, double precision, double precision, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.insert_opu_noscia_indirizzo(_nazione integer, _id_provincia text, _id_comune integer, _comune_estero text, _toponimo integer, _via text, _cap text, _civico text DEFAULT NULL::text, _latitudine double precision DEFAULT NULL::double precision, _longitudine double precision DEFAULT NULL::double precision, _presso text DEFAULT NULL::text) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE 
	_nazione_testo text;
	_comune_testo text;
	_topon text;
	_id_ind integer;
        
BEGIN	

	select description into _nazione_testo from lookup_nazioni where code = _nazione limit 1;

	--se nazione uguale italia si inserisce l'indirizzo completo
	IF _nazione = 106 THEN
	
		select nome into _comune_testo from comuni1 where id = _id_comune limit 1;
		select description into _topon from lookup_toponimi where code = _toponimo limit 1;
		
		IF _civico is null THEN
			_civico := 'SNC';
		END IF;

		select id into _id_ind from opu_indirizzo 
			where trim(provincia) ilike _id_provincia and
			      comune = _id_comune and
			      toponimo = _toponimo and
			      trim(via) ilike _via and
			      trim(civico) ilike _civico and
			      coalesce(presso,'') ilike coalesce(_presso,'') and
			      latitudine = _latitudine and
			      longitudine = _longitudine limit 1;

		IF _id_ind is null THEN
			insert into opu_indirizzo(via, cap, provincia, nazione, latitudine, longitudine, comune, comune_testo, toponimo, civico, topon, presso)
			values(_via, _cap, _id_provincia, _nazione_testo, _latitudine, _longitudine, _id_comune, _comune_testo, _toponimo, _civico, _topon, _presso) returning id into _id_ind;
		END IF; 
	--se si tratta di un indirizzo estero si inseriscono (come testo) solo la nazione e il comune 
	ELSE
		select id into _id_ind from opu_indirizzo 
			where trim(nazione) ilike trim(_nazione_testo) and trim(comune_testo) ilike trim(_comune_estero) limit 1;
			
		IF _id_ind is null THEN	      
			insert into opu_indirizzo(nazione, comune_testo) values(_nazione_testo, _comune_estero) returning id into _id_ind;
		END IF;
		
	END IF;
	
	return _id_ind;
	      
END;
$$;


ALTER FUNCTION public.insert_opu_noscia_indirizzo(_nazione integer, _id_provincia text, _id_comune integer, _comune_estero text, _toponimo integer, _via text, _cap text, _civico text, _latitudine double precision, _longitudine double precision, _presso text) OWNER TO postgres;

--
-- TOC entry 1096 (class 1255 OID 16862)
-- Name: insert_opu_noscia_rel_impresa_soggfis(integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.insert_opu_noscia_rel_impresa_soggfis(_id_soggetto_fisico integer, _id_operatore integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE 
	id_rel integer;
        
BEGIN	

	insert into opu_rel_operatore_soggetto_fisico(id_operatore, id_soggetto_fisico, enabled, data_inizio, tipo_soggetto_fisico)
	values (_id_operatore, _id_soggetto_fisico, true, now(), 1) returning id into id_rel;

	return id_rel;
	      
END;
$$;


ALTER FUNCTION public.insert_opu_noscia_rel_impresa_soggfis(_id_soggetto_fisico integer, _id_operatore integer) OWNER TO postgres;

--
-- TOC entry 1097 (class 1255 OID 16863)
-- Name: insert_opu_noscia_rel_stabilimento_linea(integer, text, text, integer, timestamp without time zone, timestamp without time zone, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.insert_opu_noscia_rel_stabilimento_linea(_id_stabilimento integer, _codice_univoco_linea text, _cun text, _enteredby integer, _data_inizio timestamp without time zone, _data_fine timestamp without time zone, _tipo_carattere integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE 
	id_rel integer;
	_descrizione_linea text;
	_id_linea_produttiva integer;
	_num_reg_stab text;
	_progressivo_linea integer;
	_num_reg_linea text;
        
BEGIN	
	select id_nuova_linea_attivita, descrizione into _id_linea_produttiva, _descrizione_linea 
		from ml8_linee_attivita_nuove_materializzata where trim(codice) ilike trim(_codice_univoco_linea);

	select id into id_rel from opu_relazione_stabilimento_linee_produttive 
		where id_linea_produttiva =_id_linea_produttiva and id_stabilimento = _id_stabilimento and enabled;


	select numero_registrazione into _num_reg_stab from opu_stabilimento where id = _id_stabilimento;
	_progressivo_linea := dbi_opu_get_progressivo_linea_per_stabilimento(_num_reg_stab);
	_num_reg_linea := concat(_num_reg_stab, lpad(_progressivo_linea::text,3,'0'));
	
	insert into opu_relazione_stabilimento_linee_produttive(id_linea_produttiva, id_stabilimento, stato, data_inizio, data_fine, enabled,
								descrizione_linea_attivita, numero_registrazione, codice_nazionale, entered, 
								enteredby, codice_univoco_ml, tipo_carattere)
	values(_id_linea_produttiva, _id_stabilimento, 99, _data_inizio, _data_fine, true, _descrizione_linea, 
	       _num_reg_linea, _cun, now() , _enteredby, _codice_univoco_linea, _tipo_carattere) returning id into id_rel;
	
	return id_rel;
	      
END;
$$;


ALTER FUNCTION public.insert_opu_noscia_rel_stabilimento_linea(_id_stabilimento integer, _codice_univoco_linea text, _cun text, _enteredby integer, _data_inizio timestamp without time zone, _data_fine timestamp without time zone, _tipo_carattere integer) OWNER TO postgres;

--
-- TOC entry 1098 (class 1255 OID 16864)
-- Name: insert_opu_noscia_soggetto_fisico(text, text, integer, text, text, integer, text, text, integer, text, timestamp without time zone); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.insert_opu_noscia_soggetto_fisico(_nome text, _cognome text, _nazione_nascita integer, _codice_fiscale text, _sesso text, _enteredby integer DEFAULT NULL::integer, _telefono text DEFAULT NULL::text, _email text DEFAULT NULL::text, _id_indirizzo integer DEFAULT NULL::integer, _comune_nascita text DEFAULT NULL::text, _data_nascita timestamp without time zone DEFAULT NULL::timestamp without time zone) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE 

	_id_sogg integer;
	_comune_nascita_testo text;
	_sesso_text text;
	_provenienza_estera boolean;
        
BEGIN	

	IF _nazione_nascita = 106 THEN
		select nome into _comune_nascita_testo from comuni1 where id = _comune_nascita::integer limit 1;
		_provenienza_estera := false;

		insert into opu_soggetto_fisico(cognome, nome, comune_nascita, codice_fiscale, enteredby, sesso, telefono, email, data_nascita, indirizzo_id, provenienza_estera, id_nazione_nascita, id_comune_nascita)
		values(_cognome, _nome, _comune_nascita_testo, _codice_fiscale, _enteredby, _sesso, _telefono, _email, _data_nascita, _id_indirizzo, _provenienza_estera, _nazione_nascita, _comune_nascita::integer) returning id into _id_sogg;
	ELSE
		_comune_nascita_testo := _comune_nascita;
		_provenienza_estera := true;
		insert into opu_soggetto_fisico(cognome, nome, comune_nascita, codice_fiscale, enteredby, sesso, telefono, email, data_nascita, indirizzo_id, provenienza_estera, id_nazione_nascita, id_comune_nascita)
		values(_cognome, _nome, _comune_nascita_testo, _codice_fiscale, _enteredby, _sesso, _telefono, _email, _data_nascita, _id_indirizzo, _provenienza_estera, _nazione_nascita, null) returning id into _id_sogg;
	END IF;

	return _id_sogg;
	      
END;
$$;


ALTER FUNCTION public.insert_opu_noscia_soggetto_fisico(_nome text, _cognome text, _nazione_nascita integer, _codice_fiscale text, _sesso text, _enteredby integer, _telefono text, _email text, _id_indirizzo integer, _comune_nascita text, _data_nascita timestamp without time zone) OWNER TO postgres;

--
-- TOC entry 1099 (class 1255 OID 16865)
-- Name: insert_opu_noscia_stabilimento(integer, integer, integer, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.insert_opu_noscia_stabilimento(_id_operatore integer, _id_indirizzo integer, _enteredby integer, _codice_linea text) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE 
	id_stabilimento integer;
	_comune integer;
	_id_asl integer;
	_numero_registrazione text;
	_codComune text;
	_codProvincia text;
	_tipo_attivita integer;
        
BEGIN	
	_tipo_attivita := 1;
	select 
		CASE 
			WHEN fisso THEN 1::integer
			ELSE 2::integer 
		END AS tatt into _tipo_attivita
	FROM master_list_flag_linee_attivita where codice_univoco ilike trim(_codice_linea);

	select comune into _comune from opu_indirizzo where id = _id_indirizzo;

	select codiceistatasl::integer into _id_asl from comuni1 where id = _comune; 
	select comuni1.cod_comune, lp.cod_provincia  into _codComune, _codProvincia 
		from comuni1 join lookup_province lp on lp.code =  comuni1.cod_provincia::int 
			where comuni1.id = _comune;
	_numero_registrazione:= (select genera_numero_registrazione from anagrafica.genera_numero_registrazione(_codComune, _codProvincia));

	insert into opu_stabilimento(entered, entered_by, id_operatore, id_asl, id_indirizzo, stato, numero_registrazione, categoria_rischio, tipo_attivita)
	values(now(), _enteredby, _id_operatore, _id_asl, _id_indirizzo, 99, _numero_registrazione, 3, _tipo_attivita) returning id into id_stabilimento;
		
	return id_stabilimento;
	      
END;
$$;


ALTER FUNCTION public.insert_opu_noscia_stabilimento(_id_operatore integer, _id_indirizzo integer, _enteredby integer, _codice_linea text) OWNER TO postgres;

--
-- TOC entry 1100 (class 1255 OID 16866)
-- Name: insert_opu_noscia_stabilimento(integer, integer, integer, text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.insert_opu_noscia_stabilimento(_id_operatore integer, _id_indirizzo integer, _enteredby integer, _codice_linea text, _numero_registrazione text) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE 
	id_stabilimento integer;
	_comune integer;
	_id_asl integer;
	_tipo_attivita integer;
        
BEGIN	
	_tipo_attivita := 1;
	select 
		CASE 
			WHEN fisso THEN 1::integer
			ELSE 2::integer 
		END AS tatt into _tipo_attivita
	FROM master_list_flag_linee_attivita where codice_univoco ilike trim(_codice_linea);

	select comune into _comune from opu_indirizzo where id = _id_indirizzo;

	select codiceistatasl::integer into _id_asl from comuni1 where id = _comune; 

	insert into opu_stabilimento(entered, entered_by, id_operatore, id_asl, id_indirizzo, stato, numero_registrazione, tipo_attivita)
	values(now(), _enteredby, _id_operatore, _id_asl, _id_indirizzo, 0, _numero_registrazione, _tipo_attivita) returning id into id_stabilimento;
		
	return id_stabilimento;
	      
END;
$$;


ALTER FUNCTION public.insert_opu_noscia_stabilimento(_id_operatore integer, _id_indirizzo integer, _enteredby integer, _codice_linea text, _numero_registrazione text) OWNER TO postgres;

--
-- TOC entry 1101 (class 1255 OID 16867)
-- Name: is_controllo_acquacoltura(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.is_controllo_acquacoltura(_idcontrollo integer) RETURNS boolean
    LANGUAGE plpgsql STRICT
    AS $$
DECLARE
	_ticketId integer;
	esito boolean;
BEGIN

_ticketId := -1;
esito:= false;

_ticketId := (select distinct id_controllo from lista_controlli_acquacoltura(_idcontrollo, -1, '', '') );

if (_ticketId) > 0 THEN
esito = true;
END IF;

 RETURN esito;
 END;
$$;


ALTER FUNCTION public.is_controllo_acquacoltura(_idcontrollo integer) OWNER TO postgres;

--
-- TOC entry 1102 (class 1255 OID 16868)
-- Name: is_controllo_amr(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.is_controllo_amr(_idcontrollo integer) RETURNS boolean
    LANGUAGE plpgsql STRICT
    AS $$
DECLARE
	_ticketId integer;
	esito boolean;
BEGIN

_ticketId := -1;
esito:= false;

_ticketId := (select distinct t.ticketid
from ticket t
left join tipocontrolloufficialeimprese tcu on tcu.idcontrollo = t.ticketid
left join lookup_piano_monitoraggio piano on piano.code = tcu.pianomonitoraggio
left join ricerche_anagrafiche_old_materializzata r on 
((r.riferimento_id = t.org_id and r.riferimento_id_nome_col = 'org_id') or (r.riferimento_id = t.id_stabilimento and r.riferimento_id_nome_col = 'id_stabilimento') or (r.riferimento_id = t.alt_id and r.riferimento_id_nome_col = 'alt_id'))
where t.tipologia = 3 and t.trashed_date is null and piano.codice_esame = 'PMAMR' and r.n_linea in (select numero_registrazione from cun_amr where cun_sinvsa is not null) and t.ticketid = _idcontrollo and t.ticketid in (select distinct id_controllo_ufficiale::integer from ticket c
left join lookup_piano_monitoraggio p on p.code = c.motivazione_piano_campione
where c.trashed_date is null and c.tipologia = 2 and c.id_controllo_ufficiale = _idcontrollo::text and p.codice_esame = 'PMAMR'));

if (_ticketId) > 0 THEN
esito = true;
END IF;

 RETURN esito;
 END;
$$;


ALTER FUNCTION public.is_controllo_amr(_idcontrollo integer) OWNER TO postgres;

--
-- TOC entry 1103 (class 1255 OID 16869)
-- Name: is_controllo_chiudibile_allegati_sanzione(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.is_controllo_chiudibile_allegati_sanzione(_idcu integer) RETURNS text
    LANGUAGE plpgsql STRICT
    AS $$
DECLARE
	messaggio text;
BEGIN

messaggio := '';

select string_agg(a.errore,' ') into messaggio from (
select distinct 
string_agg('Non Conformita: ' || s.identificativonc ||' Sanzione: ' ||  s.identificativo ||'; ', '') as errore 
from ticket s
join ticket nc on nc.ticketid = s.id_nonconformita
join ticket cu on cu.ticketid = nc.id_controllo_ufficiale::integer
left join sanzioni_allegati sa on s.ticketid = sa.id_sanzione and sa.trashed_date is null and sa.tipo_allegato = 'SanzionePV'
where cu.ticketid = _idcu and s.tipologia = 1 and s.trashed_date is null
and sa.id is null group by s.ticketid
) a;

if messaggio <> '' then
messaggio := concat('Questo controllo non puo essere chiuso a causa della presenza di sanzioni senza allegato per processo verbale. ', messaggio);
END IF;

 RETURN UPPER(messaggio);
 END;
$$;


ALTER FUNCTION public.is_controllo_chiudibile_allegati_sanzione(_idcu integer) OWNER TO postgres;

--
-- TOC entry 1104 (class 1255 OID 16870)
-- Name: is_controllo_chiudibile_pnaa(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.is_controllo_chiudibile_pnaa(_idcu integer) RETURNS text
    LANGUAGE plpgsql STRICT
    AS $$
DECLARE
	messaggio text;
BEGIN

messaggio := '';

select string_agg(a.errore,' ') into messaggio from (
select distinct 
string_agg('Campione: ' ||  c.identificativo ||'; ', '') as errore
from ticket c
join ticket cu on cu.ticketid::text = c.id_controllo_ufficiale
join dpat_indicatore_new dpat on dpat.id = c.motivazione_piano_campione and dpat.codice_esame in ('PNASV', 'PNAMT') -- valutare se mettere lookup_piano_monitoraggio?
left join modello_pnaa_values p on c.ticketid = p.id_campione and p.trashed_date is null
where cu.ticketid = _idcu and c.tipologia = 2 and c.trashed_date is null
and p.id is null group by c.ticketid
) a;

if messaggio <> '' then
messaggio := concat('Questo controllo non puo essere chiuso a causa della presenza di campioni con modello PNAA non compilato. ', messaggio);
END IF;

 RETURN UPPER(messaggio);
 END;
$$;


ALTER FUNCTION public.is_controllo_chiudibile_pnaa(_idcu integer) OWNER TO postgres;

--
-- TOC entry 1105 (class 1255 OID 16871)
-- Name: lista_controlli_acquacoltura(integer, integer, text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.lista_controlli_acquacoltura(_idcontrollo integer, _idasl integer, _datainizio text, _datafine text) RETURNS TABLE(id_controllo integer, id_asl integer, piano_monitoraggio text, data_controllo timestamp without time zone)
    LANGUAGE plpgsql STRICT
    AS $$
DECLARE
r RECORD;	

BEGIN

FOR 

id_controllo, id_asl, piano_monitoraggio, data_controllo

in


select distinct t.ticketid, t.site_id, piano.description, t.assigned_date
from ticket t
left join tipocontrolloufficialeimprese tcu on tcu.idcontrollo = t.ticketid
left join lookup_piano_monitoraggio piano on piano.code = tcu.pianomonitoraggio
left join acquacoltura_dati_controlli_bdn d on d.id_controllo = t.ticketid and d.enabled
left join organization org on org.org_id = t.org_id
where t.tipologia = 3 and 
org.tipologia = 2 and
piano.codice_esame = 'PMACQ' and 
(( _idcontrollo>0 and t.ticketid = _idcontrollo) or _idcontrollo = -1) and
((_idasl>0 and t.site_id = _idasl) or -1 = _idasl) and
((_datainizio is not null and _datainizio <>'' and t.assigned_date >= _datainizio::timestamp without time zone) or _datainizio = '') and 
((_datafine is not null and _datafine <>'' and t.assigned_date <= _datafine::timestamp without time zone) or _datafine = '') and
t.trashed_date is null and
org.trashed_date is null and
t.closed is not null and
t.status_id = 2
order by t.assigned_date desc

    LOOP
        RETURN NEXT;
     END LOOP;
     RETURN;
 END;
$$;


ALTER FUNCTION public.lista_controlli_acquacoltura(_idcontrollo integer, _idasl integer, _datainizio text, _datafine text) OWNER TO postgres;

--
-- TOC entry 1106 (class 1255 OID 16872)
-- Name: log_operazioni_flusso(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.log_operazioni_flusso() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
declare
	nuova_nota text := '';
begin
	
	if old.data_consegna is null and new.data_consegna is not null then -- si sta consegnando (chiudendo) un flusso
		nuova_nota := format(E'DATA: %s - OPERAZIONE: consegna - UTENTE: %s\n', now(), new.id_utente_consegna);
		new.note_hd := concat(nuova_nota, old.note_hd);
	elsif old.data_consegna is not null and new.data_consegna is null then -- si sta riaprendo un flusso da consegna
		nuova_nota := format(E'DATA: %s - OPERAZIONE: riapertura da consegna - UTENTE: %s\n', now(), new.id_utente_consegna);
		new.note_hd := concat(nuova_nota, old.note_hd);
	end if;
	
	if old.data_standby is null and new.data_standby is not null then -- si sta mettendo in standby un flusso
		nuova_nota := format(E'DATA: %s - OPERAZIONE: standby - UTENTE: %s\n', now(), new.id_utente_standby);
		new.note_hd := concat(nuova_nota, old.note_hd);
	elsif old.data_standby is not null and new.data_standby is null then -- si sta riaprendo un flusso da standby
		nuova_nota := format(E'DATA: %s - OPERAZIONE: riapertura da standby - UTENTE: %s\n', now(), new.id_utente_standby);
		new.note_hd := concat(nuova_nota, old.note_hd);
	end if;
	
	if old.data_annullamento is null and new.data_annullamento is not null then -- si sta annullando un flusso
		nuova_nota := format(E'DATA: %s - OPERAZIONE: annullamento - UTENTE: %s\n', now(), new.id_utente_annullamento);
		new.note_hd := concat(nuova_nota, old.note_hd);
	elsif old.data_annullamento is not null and new.data_annullamento is null then -- si sta riaprendo un flusso da annullamento
		nuova_nota := format(E'DATA: %s - OPERAZIONE: riapertura da annullamento - UTENTE: %s\n', now(), new.id_utente_annullamento);
		new.note_hd := concat(nuova_nota, old.note_hd);
	end if;
	
	return new;
end;
$$;


ALTER FUNCTION public.log_operazioni_flusso() OWNER TO postgres;

--
-- TOC entry 1107 (class 1255 OID 16873)
-- Name: mapping_linea_attivita(integer, text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.mapping_linea_attivita(idflusso integer, attivita text, aggregazione text) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
inaggregazione text;
inattivita text;
id_linea_attivita integer;
BEGIN

inaggregazione = regexp_replace(aggregazione, '[^a-zA-Z0-9]', '', 'g');
inattivita = regexp_replace(attivita, '[^a-zA-Z0-9]', '', 'g');
 raise info 'aggregazione: % ', inaggregazione;
 raise info 'attivita: % ', inattivita;
id_linea_attivita := (select l.id from master_list_aggregazione a
join master_list_linea_attivita l on l.id_aggregazione = a.id
where a.id_flusso_originale = idflusso and regexp_replace(l.linea_attivita, '[^a-zA-Z0-9]', '', 'g') ilike inattivita and regexp_replace(a.aggregazione, '[^a-zA-Z0-9]', '', 'g') ilike inaggregazione);
 raise info 'id master list mappato al primo giro (mapping con master list): % ', id_linea_attivita;
 
-- Autoriconoscimento: Cerco il valore di linea master list mappato più spesso per questa combinazione nelle richieste già validate.
--if (id_linea_attivita is null) THEN
--id_linea_attivita := (select s.opu_id_linea_produttiva_master_list from sintesis_stabilimenti_import s where regexp_replace(s.attivita, '[^a-zA-Z0-9]', '', 'g') ilike regexp_replace(inattivita, '[^a-zA-Z0-9]', '', 'g') and regexp_replace(s.descrizione_sezione, '[^a-zA-Z0-9]', '', 'g') ilike  regexp_replace(inaggregazione, '[^a-zA-Z0-9]', '', 'g') and s.opu_id_linea_produttiva_master_list>40000 and s.stato_import = 0 group by s.opu_id_linea_produttiva_master_list having count(s.opu_id_linea_produttiva_master_list)>10  order by count(s.opu_id_linea_produttiva_master_list) desc limit 1);
--raise info 'id master list mappato al secondo giro (mapping con richieste): % ', id_linea_attivita;
--END IF;

return id_linea_attivita;


 END;
$$;


ALTER FUNCTION public.mapping_linea_attivita(idflusso integer, attivita text, aggregazione text) OWNER TO postgres;

--
-- TOC entry 1108 (class 1255 OID 16874)
-- Name: mapping_linea_attivita_sintesis(text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.mapping_linea_attivita_sintesis(_attivita text, _aggregazione text) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
inaggregazione text;
inattivita text;
revmax integer;
id_linea_attivita integer;

BEGIN

revmax:= (select * from get_max_rev_ml());

inaggregazione = regexp_replace(_aggregazione, '[^a-zA-Z0-9]', '', 'g');
inattivita = regexp_replace(_attivita, '[^a-zA-Z0-9]', '', 'g');
 raise info 'aggregazione: % ', inaggregazione;
 raise info 'attivita: % ', inattivita;
id_linea_attivita := (select l.id from master_list_macroarea m
join master_list_aggregazione a on a.id_macroarea = m.id
join master_list_linea_attivita l on l.id_aggregazione = a.id
join master_list_flag_linee_attivita f on f.id_linea = l.id
where m.rev = revmax and f.sintesis and regexp_replace(l.linea_attivita, '[^a-zA-Z0-9]', '', 'g') ilike inattivita and regexp_replace(a.aggregazione, '[^a-zA-Z0-9]', '', 'g') ilike inaggregazione);
 raise info 'id master list mappato al primo giro (mapping con master list): % ', id_linea_attivita;
 
return id_linea_attivita;


 END;
$$;


ALTER FUNCTION public.mapping_linea_attivita_sintesis(_attivita text, _aggregazione text) OWNER TO postgres;

--
-- TOC entry 1109 (class 1255 OID 16875)
-- Name: ml_inserisci_id_aggregazione(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.ml_inserisci_id_aggregazione() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   DECLARE
   mlId integer;
   
   BEGIN

   mlId = (select return_ml_id from  gestione_ml_id(NEW.id, 2));
   NEW.id := mlId;

    RETURN NEW;
   END
$$;


ALTER FUNCTION public.ml_inserisci_id_aggregazione() OWNER TO postgres;

--
-- TOC entry 1110 (class 1255 OID 16876)
-- Name: ml_inserisci_id_linea_attivita(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.ml_inserisci_id_linea_attivita() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   DECLARE
   mlId integer;
   
   BEGIN

   mlId = (select return_ml_id from  gestione_ml_id(NEW.id, 3));
   NEW.id := mlId;

    RETURN NEW;
   END
$$;


ALTER FUNCTION public.ml_inserisci_id_linea_attivita() OWNER TO postgres;

--
-- TOC entry 1111 (class 1255 OID 16877)
-- Name: ml_inserisci_id_macroarea(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.ml_inserisci_id_macroarea() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   DECLARE
   mlId integer;
   
   BEGIN

   mlId = (select return_ml_id from  gestione_ml_id(NEW.id, 1));
   NEW.id := mlId;

    RETURN NEW;
   END
$$;


ALTER FUNCTION public.ml_inserisci_id_macroarea() OWNER TO postgres;

--
-- TOC entry 1112 (class 1255 OID 16878)
-- Name: non_conformita_dettaglio_globale(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.non_conformita_dettaglio_globale(_idnc integer) RETURNS json
    LANGUAGE plpgsql
    AS $$	
DECLARE
	campiservizio json;
	motivazione json;
	finale json;
	utente json;
	linea json;
	dati json;
	daticu json;
	
	_id_giornata_ispettiva integer;
	id_linea_nc integer;
	codicelinea text;

BEGIN
	-- chiamo la dbi puntuale per ogni blocco
	-- STEP 1: recuperiamo i campi della nc
	motivazione := (select json_object_agg(nome,descrizione) from (select 'nome' as nome, l.description::text as descrizione 
									from non_conformita nc 
									join lookup_tipi_verifica l on l.code = nc.id_tipo_verifica 
									where nc.id = _idnc
							               union 
							               select 'id' as nome,  l.code::text as descrizione 
							               from non_conformita nc 
							               join lookup_tipi_verifica l on l.code = nc.id_tipo_verifica
								       where nc.id = _idnc
							               ) a);		


	_id_giornata_ispettiva := (select n.id_giornata_ispettiva from non_conformita n where n.id = _idnc);
	id_linea_nc = (select n.id_linea from non_conformita n where n.id = _idnc);
	--codicelinea := (select l.codice_linea from linee_attivita_giornate_ispettive l where l.id_giornata_ispettiva  = id_controllo and l.trashed_date is null and id_linea_attivita = );

	linea := (select json_object_agg(nome,descrizione) from (select 'nome' as nome, path_descrizione::text as descrizione from ml8_linee_attivita_nuove_materializzata  
								where codice =
								(select codice_linea from linee_attivita_giornate_ispettive l where l.id_linea_attivita =id_linea_nc and l.id_giornata_ispettiva = _id_giornata_ispettiva)
								union
								select 'id' as nome, id_linea::text as descrizione 
								from non_conformita nc
								where trashed_date is null and nc.id = _idnc) a);	
									             

	utente := (select json_object_agg(nome,descrizione) from (select 'userId' as nome, (enteredby)::text as descrizione from non_conformita  where id = _idnc) a);				             

	dati := (select json_object_agg(nome,descrizione) from (select 'note' as nome, note as descrizione from non_conformita where id = _idnc) a);	

	daticu := (select json_object_agg(nome,descrizione) from (select 'idGiornataIspettiva' as nome, n.id_giornata_ispettiva::text as descrizione from non_conformita n where n.id = _idnc
							               union select 'dipartimento' as nome, l.description::text  
							                     from giornate_ispettive cu 
							                     join non_conformita c on c.id_giornata_ispettiva = cu.id
							                     join lookup_site_id l on l.code = cu.id_dipartimento
							                     where c.id = _idnc
							               union select 'ragioneSociale' as nome, r.ragione_sociale as descrizione
							                     from giornate_ispettive cu 
							                     join non_conformita c on c.id_giornata_ispettiva = cu.id
							                     join ricerche_anagrafiche_old_materializzata r on r.riferimento_id = cu.riferimento_id and r.riferimento_id_nome_tab = cu.riferimento_id_nome_tab
							                     where c.id = _idnc) a);	     

										
	campiservizio := (select json_object_agg(nome,descrizione) from (select 'utenteInserimento' as nome, concat_ws(' ', co.namefirst, co.namelast)::text as descrizione
								        from non_conformita c 
								        join access a on a.user_id = c.enteredby 
								        join contact co on co.contact_id = a.contact_id
									where c.id = _idnc 	
								  union select 'idNonConformita' as nome, id::text as descrizione from non_conformita where id = _idnc
								  union select 'dataInserimento' as nome, entered::text as descrizione from non_conformita where id = _idnc
								  union select 'idnon_conformita' as nome, id::text as descrizione from non_conformita where id = _idnc 
								  ) b);

	finale := (select unaccent(concat('{',
		(select concat_ws(' ', '"Dati":', dati, ',"DatiGiornataIspettiva":', daticu, 
		--',"NumeroVerbale":', numeroverbale, 
		',"Utente":',utente, 
		',"Linea":', linea,
		',"CampiServizio":', campiServizio,
		',"TipoVerifica":', motivazione
		)),'}'))::json);
	
	raise info 'json finale: %', finale;

    	return finale;
END;
$$;


ALTER FUNCTION public.non_conformita_dettaglio_globale(_idnc integer) OWNER TO postgres;

--
-- TOC entry 1113 (class 1255 OID 16879)
-- Name: non_conformita_insert(json, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.non_conformita_insert(_json_anagrafica json, _idutente integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$	
DECLARE
	
	resultid integer;
BEGIN
	 
	INSERT INTO non_conformita (enteredby, note) values (_idutente,(_json_anagrafica ->> 'note')::text)
	returning id into resultid;

	  return resultid;
	 		
END;
$$;


ALTER FUNCTION public.non_conformita_insert(_json_anagrafica json, _idutente integer) OWNER TO postgres;

--
-- TOC entry 1114 (class 1255 OID 16880)
-- Name: non_conformita_insert_globale(json); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.non_conformita_insert_globale(_json_dati json) RETURNS integer
    LANGUAGE plpgsql
    AS $$	
DECLARE
	datigiornataispettiva json; 
	utente json;
	motivazione json;
	linea json;
	dati json;
	
	idnc integer;
	idutente integer;
	output integer;
	
BEGIN
	 -- mi ricavo i singoli oggetti JSON per blocchi
	datigiornataispettiva :=  _json_dati ->'DatiGiornataIspettiva';
	RAISE INFO 'json datigiornataispettiva %',datigiornataispettiva;

	dati :=  _json_dati ->'Dati'; 
	RAISE INFO 'json dati %',dati;

	utente :=  _json_dati ->'Utente';
	RAISE INFO 'json utenti %',utente;
	
	idutente := utente -> 'userId';
	RAISE INFO 'idutente %',idutente;

	motivazione :=  _json_dati ->'TipoVerifica';
	RAISE INFO 'json motivazione %',motivazione;

	linea :=  _json_dati ->'Linea';
	RAISE INFO 'json TipiVerifica %',linea;
	
	-- STEP 0: INSERIAMO IL RECORD JSON PER LOG
	INSERT INTO giornate_ispettive_log_json(enteredby, json_cu) values(idutente,_json_dati);
	
	-- chiamo la dbi puntuale per ogni blocco
	-- STEP 1: INSERIAMO IL RECORD IN NC
	idnc := (SELECT * from public.non_conformita_insert(dati, idutente));

	-- STEP 4: INSERIAMO GLI ALTRI DATI DELLA NC
	update non_conformita set id_linea = (linea ->> 'id')::integer, id_tipo_verifica = (motivazione ->> 'id')::integer, id_giornata_ispettiva = (datigiornataispettiva ->> 'idGiornataIspettiva')::integer  where id = idnc;
	
    	 return idnc;
END;
$$;


ALTER FUNCTION public.non_conformita_insert_globale(_json_dati json) OWNER TO postgres;

--
-- TOC entry 1115 (class 1255 OID 16881)
-- Name: non_conformita_lista_globale(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.non_conformita_lista_globale(_id_giornata_ispettiva integer) RETURNS json
    LANGUAGE plpgsql
    AS $$
DECLARE
	output json;
BEGIN

	 output := (SELECT array_to_json(array_agg(row_to_json(t))) FROM (select id as "idNonConformita", c.entered as "dataInserimento", concat_ws(' ', co.namefirst, co.namelast)::text as "utenteInserimento"
										from non_conformita c  
										join access a on a.user_id = c.enteredby 
										join contact co on co.contact_id = a.contact_id
										where c.id_giornata_ispettiva = _id_giornata_ispettiva 
									) t);
	return output;
END;
$$;


ALTER FUNCTION public.non_conformita_lista_globale(_id_giornata_ispettiva integer) OWNER TO postgres;

--
-- TOC entry 1116 (class 1255 OID 16882)
-- Name: normalizzazione_indirizzo(character varying); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.normalizzazione_indirizzo(indirizzo_input character varying) RETURNS TABLE(toponimoout integer, toponout text, viaout text, civicoout text)
    LANGUAGE plpgsql
    AS $_$

DECLARE
	numero_ups integer;
BEGIN
	delete from indirizzo_temp ;
	
	insert into indirizzo_temp values(NULL,'',indirizzo_input,'',NULL);
	
	update indirizzo_temp set via=left(via,position('ÃƒÂ' in via)-1)||'A'|| right(via,length(via)- position('ÃƒÂ' in via) - length('ÃƒÂ')), clean=clean || '-Z' where via similar to '%\303\203\302\240%';
	update indirizzo_temp  set via =regexp_replace(via,'Ã‚Â°',''),clean=clean || '-70' where via similar to '%Ã‚Â°%';
	update indirizzo_temp  set via =regexp_replace(via,'Â°',''),clean=clean || '-71' where via similar to '%Â°%';
	update indirizzo_temp  set via =regexp_replace(via,'ÃƒÂ¬','A'),clean=clean||'-72' where via similar to '%ÃƒÂ¬%';
	update indirizzo_temp  set via =regexp_replace(via,'Ã','A'),clean=clean||'-73' where via similar to '%Ã%';
	--localita 3
	update indirizzo_temp set via = regexp_replace(via,'LOC\.TA''','LOCALITA '), clean=clean||'-L3' where via similar to 'LOC.TA''%';
	--localita 4
	update indirizzo_temp set via = regexp_replace(via,'ÃƒÂ','LOCALITA'), clean=clean||'-L4' where via similar to '%ÃƒÂ%' ;
	--localita 6
	update indirizzo_temp set via = regexp_replace(via,'LOCALITÃ','LOCALITA'), clean=clean||'-L6' where via similar to 'LOCALITÃ%' ;
	--localita 9
	update indirizzo_temp set via = regexp_replace(via,'LOCALITÃƒÂ','LOCALITA'), clean=clean||'-L9' where via similar to 'LOCALITÃƒÂ%';
	--localita 10
	update indirizzo_temp set via = regexp_replace(via,'LOCALITÃƒÂ‚Ï¿½','LOCALITA'), clean=clean||'-L10' where via similar to 'LOCALITÃƒÂ‚Ï¿½%' ;








	update indirizzo_temp set via=upper(trim(via));

	--eliminazione punti linee e toponimi doppi
	update indirizzo_temp  set via =regexp_replace(via,'(\.{0,}|-|\^)\s?',''),clean=clean||'-73' where via similar to '(.|-)%';
	update indirizzo_temp set via = regexp_replace(via,'VIA VIALE','VIALE') ,clean=clean||'-74' where via similar to 'VIA VIALE%'; 
	update indirizzo_temp set via = regexp_replace(via,'VIA VIA','VIA'), clean=clean||'-75' where via similar to 'VIA VIA %';
	update indirizzo_temp set via = regexp_replace(via,'VIE','VIA'), clean=clean||'-76' where via similar to 'VIE %';
	update indirizzo_temp set via = substring(via,position(' ' in via)+1), clean=clean||'-77' where via similar to 'VIA VICO(LO)?\s%';
	update indirizzo_temp set via = substring(via,position(' ' in via)+1), clean=clean||'-78' where via similar to '%VIA C(.|/|\\)DA%';
	update indirizzo_temp set via = substring(via,position(' ' in via)+1), clean=clean||'-79' where via similar to '%VIA C(.|/|\\)SO %';

	

	--normalizzazione toponimi
	--viale 1
	update indirizzo_temp set via = regexp_replace(via,'V\.LE','VIALE'), clean=clean||'-V1' where via similar to 'V.LE%' ;

	--via
	update indirizzo_temp set via=regexp_replace(via,'V\.(\s){0,}','VIA '),clean=clean||'-V2' where via similar to 'V.(\s){0,}%'  ;

	--corso 1
	update indirizzo_temp set via = regexp_replace(via,'C(\.|/|\s){1,}SO','CORSO'), clean=clean||'-C1' where via similar to 'C(.|/|\s){1,}SO%';
	--corso 2
	

	--piazza 1
	update indirizzo_temp set via = regexp_replace(via,'P(\.|/|\s|Z){0,}ZA','PIAZZA'), clean=clean||'-P1' where via similar to 'P(.|/|\s|Z){0,}ZA%';
	
	--piazza 3
	update indirizzo_temp set via = regexp_replace(via,'PAZZA','PIAZZA'), clean=clean||'-P3' where via similar to 'PAZZA%';
	--piazza 4
	update indirizzo_temp set via = regexp_replace(via,'PIAZA','PIAZZA'), clean=clean||'-P4' where via similar to 'PIAZA%';

	--piazzetta 0
	update indirizzo_temp set via = regexp_replace(via,'P\.TTA','PIAZZETTA'), clean=clean||'-P0' where via similar to 'P.TTA%' ;

	--contrada 1
	update indirizzo_temp set via = regexp_replace(via,'C(\\|7|-|,|\.|/|\s|Z){0,}DA','CONTRADA'), clean=clean||'-C1' where via similar to 'C(\\|7|-|,|.|/|\s|Z){0,}DA%';
	--contrada 2
	update indirizzo_temp set via = regexp_replace(via,'CONTRDA','CONTRADA'), clean=clean||'-C2' where via similar to 'CONTRDA%';
	--contrada 3
	update indirizzo_temp set via = regexp_replace(via,'CONTRADFA','CONTRADA'), clean=clean||'-C3' where via similar to 'CONTRADFA%';
	--contrada 4
	update indirizzo_temp set via = regexp_replace(via,'CONTRADA','CONTRADA '), clean=clean||'-C4' where upper(trim(via)) similar to 'CONTRADA[A-Z]%';
	--contrada 5
	update indirizzo_temp set via = regexp_replace(upper(via),'CONTRADA\.','CONTRADA'), clean=clean||'-C5' where upper(trim(via)) similar to 'CONTRADA.%';

	--frazione 1
	update indirizzo_temp set via = regexp_replace(via,'FRAZ\.{0,}(\s){0,}','FRAZIONE '), clean=clean||'-F1' where via similar to 'FRAZ.{0,}%';

	--largo 1
	update indirizzo_temp set via = regexp_replace(via,'L\.GO','LARGO'), clean=clean||'-L0' where via similar to 'L.GO%';

	--localita 1
	update indirizzo_temp set via = regexp_replace(via,'LOC\.?\s{1,}','LOCALITA '), clean=clean||'-L1' where via similar to 'LOC.?(\s){0,}%' ;
	--localita 2
	update indirizzo_temp set via = regexp_replace(via,'L\.TA','LOCALITA'), clean=clean||'-L3' where via similar to 'L.TA%' ;

	--localita 5
	update indirizzo_temp set via = regexp_replace(via,'LOCALITA''','LOCALITA'), clean=clean||'-L5' where via similar to 'LOCALITA''%' ;
	--localita 7
	update indirizzo_temp set via = regexp_replace(via,'LOCALIA','LOCALITA'), clean=clean||'-L7' where via similar to 'LOCALIA %' ;
	--localita 8
	update indirizzo_temp set via = regexp_replace(via,'LOCALIATA(''){0,}','LOCALITA'), clean=clean||'-L8' where via similar to 'LOCALIATA(''){0,}%';

	--provinciale 1
	update indirizzo_temp set via = regexp_replace(via,'PR(OV){0,}\.(LE){0,}','PROVINCIALE'), clean=clean||'-R1' where via similar to 'PR(OV){0,}.(LE){0,}%';
	--provinciale 2
	update indirizzo_temp set via = regexp_replace(via,'S\.{0,}P.\.{0,}','PROVINCIALE'), clean=clean||'-R2' where via similar to 'S.{0,}P.{0,}%' ;
	--provinciale 3
	update indirizzo_temp set via = regexp_replace(via,'S\.PROVINCIALE','PROVINCIALE'), clean=clean||'-R3' where via similar to 'S.PROVINCIALE%' ;
	--provinciale 4
	update indirizzo_temp set via = regexp_replace(via,'S\.PROVINCIALE','PROVINCIALE'), clean=clean||'-R4' where via similar to 'STRADA PROVINCIALE%' ;

	--statale 1
	update indirizzo_temp set via = regexp_replace(via,'S\.{0,}S\.{0,}(\s){0,}','STATALE '), clean=clean||'-S1' where via similar to 'S.{0,}S.{0,}(\s){0,}%' ;
	--statale 4
	update indirizzo_temp set via = regexp_replace(via,'ST(\s){1,}','STATALE '), clean=clean||'-S4' where via similar to 'ST(\s){0,}%';

	--traversa 1
	update indirizzo_temp set via = regexp_replace(via,'TR(A){0,}V\.(\s){0,}','TRAVERSA '), clean=clean||'-T1' where via similar to 'TR(A){0,}V.(\s){0,}%' ;

	-- fine normalizzazione


	

	--estrazione (e rimozione) toponimoc appoggio
	update indirizzo_temp  set topon=trim(left(via,position(' ' in  via))), via=trim(substring(via,position(' ' in via)+1))
	where left(via,position( ' ' in via)-1) in 
	  ('CALATA','CONTRADA','CORSO','DISCESA','FRAZIONE','LARGHETTO','LARGO','LITORANEA','LOCALITA','LUNGOMARE','PIAZZA','PIAZZALE','PIAZZETTA','PROVINCIALE','SALITA','STATALE','STRADA','TRAVERSA','VARIANTE','VIA','VIALE','VICO','VICOLETTO','VICOLO');

	 

	--valorizzazione toponimo ufficiale
	--with (select code,toponimo from lookup_toponimi, opu_indirizzo where  descrizione ilike '%'||topon||'%') as cte 
	 
	
	select count(code) from lookup_toponimi  where lower(description) = lower((select a.topon from indirizzo_temp a)) limit 1 into numero_ups;
	if numero_ups > 0
	then	--tento associazione "secca" sul toponimo
		update indirizzo_temp set clean=clean||'-K', toponimo=(select code from lookup_toponimi  where topon is not null and lower(description) = lower(indirizzo_temp.topon) limit 1);
	else	--se fallisce, vado in like % %
		update  indirizzo_temp set clean=clean||'-K', toponimo=(select code from lookup_toponimi  where topon is not null and description ilike '%'||indirizzo_temp.topon||'%' limit 1);
	end if;
	
	 
	--estrazione civico [A-Z]{0,}/?[0-9]{1,}/?[A-Z]{0,}$
	UPDATE indirizzo_temp  set civico=trim(substring( via from '[A-Z]{0,}/?[0-9]{1,}/?[A-Z]{0,}$')),clean=clean||'-N1' 
		where (civico is null or civico='') ;

	--estrazione via (rimozione numero) 
	update indirizzo_temp  set via =trim(regexp_replace(via,'[A-Z]{0,}/?[0-9]{1,}/?[A-Z]{0,}$','')), clean=clean||'-Y' where clean not similar to '%-X%';
	update indirizzo_temp  set via =regexp_replace(via,'\s(S|N)\.?$','');
	update indirizzo_temp  set via =regexp_replace(via,',$','');


	--ripulitura finale
	update indirizzo_temp  set via =regexp_replace(via,',{0,}S\.{0,}N*\.{0,}C*\.*$',''),clean=clean||'-U1' where via similar to '%,{0,}S\.{0,}N*\.{0,}C*\.$' ;
	update indirizzo_temp  set via =regexp_replace(via,',{0,}S\.{0,}N*\.{0,}C*\.*$',''),clean=clean||'-U2' where via similar to '%SNC' ;


	--ritorno risultato 
	return query select indtemp.toponimo,indtemp.topon,regexp_replace(indtemp.via,'[0-9]+','','g'),indtemp.civico from indirizzo_temp indtemp;
	--select id,via_old as OLD, topon,toponimo, via, civico , clean from opu_indirizzo where topon is not null and length (via)>3 order by 2 limit 1000; 

 
	
	
	

END

$_$;


ALTER FUNCTION public.normalizzazione_indirizzo(indirizzo_input character varying) OWNER TO postgres;

--
-- TOC entry 1117 (class 1255 OID 16884)
-- Name: opu_indirizzo_check(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.opu_indirizzo_check() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   DECLARE
   tipo integer;
   deleteQuery text;
   BEGIN

	if (NEW.comune=-1  or new.comune is null )
	then
	raise EXCEPTION 'Comune non valido';
	
	end if;
    RETURN NEW;
   END
$$;


ALTER FUNCTION public.opu_indirizzo_check() OWNER TO postgres;

--
-- TOC entry 1118 (class 1255 OID 16885)
-- Name: opu_insert_into_ricerche_anagrafiche_old_materializzata(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.opu_insert_into_ricerche_anagrafiche_old_materializzata(idstabilimento integer) RETURNS boolean
    LANGUAGE plpgsql STRICT
    AS $$
DECLARE
idRecord int ;
BEGIN

raise info 'sto eliminando dalla tabella ';
delete from ricerche_anagrafiche_old_materializzata where riferimento_id_nome ='stabId' and riferimento_id_nome_tab = 'opu_stabilimento'  and riferimento_id =idStabilimento ;
raise info 'Eliminazione Eseguita ';
insert into ricerche_anagrafiche_old_materializzata (select * from ricerca_anagrafiche where riferimento_id_nome ='stabId' and riferimento_id_nome_tab = 'opu_stabilimento'  and riferimento_id =idStabilimento);
raise info 'Nuovo Inserimento Effettuato ';

	return true ;
 END;
$$;


ALTER FUNCTION public.opu_insert_into_ricerche_anagrafiche_old_materializzata(idstabilimento integer) OWNER TO postgres;

--
-- TOC entry 1119 (class 1255 OID 16886)
-- Name: opu_insert_log(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.opu_insert_log() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   DECLARE
   orgId int ;
   flagOldAnagrafica boolean; 
   flagDuplicato boolean;
   idOK int ;
   idKO int ;
   pIva text;
   BEGIN
	orgId:=-1 ;
	flagOldAnagrafica:=false ;
	flagDuplicato:=false ;
	idKO:=-1;
	idOK:=NEW.id;
	pIva:=NEW.partita_iva;

	
update opu_operatore set flag_clean = true where id in (select id_opu_operatore from anagrafica_stabilimenti_puliti where partita_iva =new.partita_iva);

FOR idKO in select id from opu_operatore where partita_iva = NEW.partita_iva 
	LOOP
	if (idKO!=idOK) then
		insert into opu_insert_log (data_inserimento,user_id,id_opu_inserito,id_opu_duplicato,flag_vecchia_anagrafica,org_id,partita_iva,flag_duplicato)
		values (NEW.entered,NEW.enteredby,idOK,idKO,false,-1,NEW.partita_iva,true);
		end if;

     
     END LOOP;

/*
FOR orgId in select org_id from organization where  trim(partita_iva) = NEW.partita_iva or trim(codice_fiscale)=NEW.partita_iva
	LOOP
	
		insert into opu_insert_log (data_inserimento,user_id,id_opu_inserito,id_opu_duplicato,flag_vecchia_anagrafica,org_id,partita_iva,flag_duplicato)
		values (NEW.entered,NEW.enteredby,idOK,-1,true,orgId,NEW.partita_iva,false);  
     END LOOP;*/

 
     RETURN NEW;
   END
$$;


ALTER FUNCTION public.opu_insert_log() OWNER TO postgres;

--
-- TOC entry 1120 (class 1255 OID 16887)
-- Name: ordina_stringhe_alfanumeriche(text, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.ordina_stringhe_alfanumeriche(_var1 text, _var2 integer) RETURNS TABLE(element text)
    LANGUAGE plpgsql
    AS $$

BEGIN

    return query
    SELECT regexp_replace(regexp_replace(_var1, '[0-9]+', repeat('0',_var2) || '\&', 'g'), '[0-9]*([0-9]{' || _var2 || '})', '\1', 'g');
	
END;
$$;


ALTER FUNCTION public.ordina_stringhe_alfanumeriche(_var1 text, _var2 integer) OWNER TO postgres;

--
-- TOC entry 1121 (class 1255 OID 16888)
-- Name: org_insert_into_ricerche_anagrafiche_old_materializzata(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.org_insert_into_ricerche_anagrafiche_old_materializzata(orgid integer) RETURNS boolean
    LANGUAGE plpgsql STRICT
    AS $$
DECLARE
idRecord int ;
BEGIN

delete from ricerche_anagrafiche_old_materializzata where riferimento_id_nome ilike'orgid' and riferimento_id_nome_tab ilike 'organization' and riferimento_id =orgId ;
insert into ricerche_anagrafiche_old_materializzata (select * from ricerca_anagrafiche where riferimento_id_nome ilike'orgid' and riferimento_id_nome_tab ilike 'organization' and riferimento_id =orgId );
	return true ;
 END;
$$;


ALTER FUNCTION public.org_insert_into_ricerche_anagrafiche_old_materializzata(orgid integer) OWNER TO postgres;

--
-- TOC entry 1122 (class 1255 OID 16889)
-- Name: refresh_anagrafica(integer, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.refresh_anagrafica(id integer, origine text) RETURNS boolean
    LANGUAGE plpgsql STRICT
    AS $$
DECLARE
refresh boolean ;

BEGIN

raise info 'Valori accettati: org (org_id) altri_org (org_id) opu (id_stabilimento) sintesis (id_stabilimento) api (id_stabilimento) ric (alt_id) anagrafica (alt_id)';

if (origine='altri_org') THEN
raise info 'aggiorno da ALTRI ORGANIZATION';
refresh := (select * from altri_org_insert_into_ricerche_anagrafiche_old_materializzata(id));
end if;

if (origine='org') THEN
raise info 'aggiorno da ORGANIZATION';
refresh := (select * from org_insert_into_ricerche_anagrafiche_old_materializzata(id));
end if;

if (origine='opu') THEN
raise info 'aggiorno da OPU';
refresh := (select * from opu_insert_into_ricerche_anagrafiche_old_materializzata(id));
end if;

 if (origine='sintesis') THEN
raise info 'aggiorno da SINTESIS';
refresh := (select * from sintesis_insert_into_ricerche_anagrafiche_old_materializzata(id));
end if;

 if (origine='api') THEN
raise info 'aggiorno da API';
refresh := (select * from api_insert_into_ricerche_anagrafiche_old_materializzata(id));
end if;

if (origine='ric') THEN
raise info 'aggiorno da RICHIESTE';
refresh := (select * from ric_insert_into_ricerche_anagrafiche_old_materializzata(id));
end if;

if (origine='anagrafica') THEN
raise info 'aggiorno da ANAGRAFICA';
refresh := (select * from anagrafica.anagrafica_insert_into_ricerche_anagrafiche_old_materializzata(id));
end if;


return refresh;

 END;
$$;


ALTER FUNCTION public.refresh_anagrafica(id integer, origine text) OWNER TO postgres;

--
-- TOC entry 1123 (class 1255 OID 16890)
-- Name: refresh_ml_materializzata(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.refresh_ml_materializzata(_id_linea integer DEFAULT NULL::integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

delete from ml8_linee_attivita_nuove_materializzata where 1=1 
-- solo le nuove linee 
and id_nuova_linea_attivita in (select id_nuova_linea_attivita from master_list_view)
and (_id_linea is null or id_nuova_linea_attivita = null);

insert into ml8_linee_attivita_nuove_materializzata (
 id_nuova_linea_attivita, enabled, id_macroarea, id_aggregazione, id_attivita, codice_macroarea, codice_aggregazione, codice_attivita, macroarea, aggregazione,
 attivita, id_norma, norma, descrizione, livello, id_padre, path_id, path_descrizione, codice, path_codice,rev, codice_norma
) select id_nuova_linea_attivita, enabled, id_macroarea, id_aggregazione, id_attivita, codice_macroarea, codice_aggregazione, codice_attivita, macroarea, aggregazione,
 attivita, id_norma, norma, descrizione, livello, id_padre, path_id, path_desc, codice, path_codice, 10 as rev, codice_norma from master_list_view 
 where 1=1
 and (_id_linea is null or id_nuova_linea_attivita = _id_linea);

return 1;

 END;
$$;


ALTER FUNCTION public.refresh_ml_materializzata(_id_linea integer) OWNER TO postgres;

--
-- TOC entry 1124 (class 1255 OID 16891)
-- Name: refresh_motivi_cu(integer, boolean); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.refresh_motivi_cu(annoinput integer DEFAULT NULL::integer, scarica_da_nuove boolean DEFAULT false) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
DECLARE
	condAnno text;
BEGIN

 

  delete from lookup_piano_monitoraggio where  case when annoinput is NULL then anno > 2014 else  anno = annoInput end;
 delete from lookup_tipo_ispezione where  case when annoinput is NULL then anno > 2014 else  anno = annoInput end;
 delete from controlli_ufficiali_motivi_ispezione where case when annoinput is NULL then anno > 2014 else  anno = annoInput end ;
 

if scarica_da_nuove = false 
then /*uso vecchie...*/
	--execute 'insert into lookup_piano_monitoraggio (select * from lookup_piano_monitoraggio_vista where ' || condAnno || ')';
	--execute 'insert into lookup_piano_monitoraggio (select * from lookup_tipo_ispezione_vista where ' || condAnno || ')';
	
	 insert into lookup_piano_monitoraggio (select * from lookup_piano_monitoraggio_vista where case when annoinput is NULL then anno > 2014 else  anno = annoInput end );
	 insert into lookup_tipo_ispezione (select * from lookup_tipo_ispezione_vista where  case when  annoinput is NULL then anno > 2014 else  anno = annoInput end);
	 insert into controlli_ufficiali_motivi_ispezione (select * from controlli_ufficiali_motivi_ispezione_vista  where  case when  annoinput is NULL then anno > 2014 else  anno = annoInput end);
else
	--execute 'insert into lookup_piano_monitoraggio (select * from lookup_piano_monitoraggio_vista_new where ' || condAnno || ')';
	--execute 'insert into lookup_piano_monitoraggio (select * from lookup_tipo_ispezione_vista_new where ' || condAnno || ')';
	
	insert into lookup_piano_monitoraggio (select * from lookup_piano_monitoraggio_vista_new where  case when  annoinput is NULL then anno > 2014 else  anno = annoInput end);
	insert into lookup_tipo_ispezione (select * from lookup_tipo_ispezione_vista_new where  case when  annoinput is NULL then anno > 2014 else  anno = annoInput end);
	insert into controlli_ufficiali_motivi_ispezione (select * from controlli_ufficiali_motivi_ispezione_vista  where  case when  annoinput is NULL then anno > 2014 else  anno = annoInput end);
end if;

 
return true ;

 
 END;
$$;


ALTER FUNCTION public.refresh_motivi_cu(annoinput integer, scarica_da_nuove boolean) OWNER TO postgres;

--
-- TOC entry 1125 (class 1255 OID 16892)
-- Name: reset_lock(text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.reset_lock(_ip text, _username text) RETURNS integer
    LANGUAGE sql
    AS $_$
	update tb_accesslock set badcount=0, last=now()  where ip=$1 and username=$2 returning badcount;
 
$_$;


ALTER FUNCTION public.reset_lock(_ip text, _username text) OWNER TO postgres;

--
-- TOC entry 1126 (class 1255 OID 16893)
-- Name: role_lock_dpat(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.role_lock_dpat() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   DECLARE
   idutente integer;
   BEGIN

   idutente:=(select id_anagrafica_nominativo from dpat_strumento_calcolo_nominativi nom
   join dpat_strumento_calcolo_strutture str on str.id = nom.id_dpat_strumento_calcolo_strutture 
   join dpat_strumento_calcolo sdc on sdc.id = str.id_strumento_calcolo
	
    where   sdc.anno = date_part('years',current_timestamp) and id_anagrafica_nominativo = NEW.user_id and nom.trashed_Date is null and str.trashed_date is null) ;
   if (idutente>0 and NEW.role_id != OLD.role_id)
   then
	NEW.role_id = OLD.role_id;
	raise exception 'ATTENZIONE UTENTE PRESENTE NEL DPAT PER CUI RUOLO NON MODIFICABILE';
	end  if;
  
    RETURN NEW;
   END
$$;


ALTER FUNCTION public.role_lock_dpat() OWNER TO postgres;

--
-- TOC entry 1127 (class 1255 OID 16894)
-- Name: search_globale_fascicolo_ispettivo(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.search_globale_fascicolo_ispettivo(_id_fascicolo_ispettivo integer) RETURNS TABLE(id_fascicolo_ispettivo integer, id_giornata_ispettiva integer, num_fascicolo text, ragione_sociale text, data_inizio text, dipartimento text)
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN
RETURN QUERY
    
select distinct f.id, -1, f.numero, s.ragione_sociale::text, to_char(f.data_inizio,'dd/mm/yyyy'), ''
from fascicoli_ispettivi f 
join ricerche_anagrafiche_old_materializzata s on s.riferimento_id = f.riferimento_id and s.riferimento_id_nome_tab = f.riferimento_id_nome_tab
where f.id = _id_fascicolo_ispettivo and f.trashed_date is null;
 
END;
$$;


ALTER FUNCTION public.search_globale_fascicolo_ispettivo(_id_fascicolo_ispettivo integer) OWNER TO postgres;

--
-- TOC entry 1128 (class 1255 OID 16895)
-- Name: search_globale_giornata_ispettiva(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.search_globale_giornata_ispettiva(_id_giornata_ispettiva integer) RETURNS TABLE(id_fascicolo_ispettivo integer, id_giornata_ispettiva integer, num_fascicolo text, ragione_sociale text, data_inizio text, dipartimento text)
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN
RETURN QUERY
    
select distinct c.id_fascicolo_ispettivo, c.id, f.numero, s.ragione_sociale::text, to_char(c.data_inizio,'dd/mm/yyyy'), l.description::text
from giornate_ispettive c
join fascicoli_ispettivi f on f.id = c.id_fascicolo_ispettivo and f.trashed_date is null
join ricerche_anagrafiche_old_materializzata s on s.riferimento_id = c.riferimento_id and s.riferimento_id_nome_tab = c.riferimento_id_nome_tab
join lookup_site_id l on l.code = c.id_dipartimento
where c.id = _id_giornata_ispettiva and c.trashed_date is null;
 
END;
$$;


ALTER FUNCTION public.search_globale_giornata_ispettiva(_id_giornata_ispettiva integer) OWNER TO postgres;

--
-- TOC entry 1129 (class 1255 OID 16896)
-- Name: set_cod_g2s(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.set_cod_g2s() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   DECLARE
   t timestamp;
   BEGIN

   update organization set cod_g2s = (select max(cod_g2s) from organization)+1 where org_id = NEW.org_id;
     
    RETURN NEW;
   END
$$;


ALTER FUNCTION public.set_cod_g2s() OWNER TO postgres;

--
-- TOC entry 1130 (class 1255 OID 16897)
-- Name: set_modif_date(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.set_modif_date() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   DECLARE
   t timestamp;
   BEGIN
   -- Aggiorna il campo MODIFIED col valore ENTERED
     update organization set modified = entered where org_id = NEW.org_id;
     
    RETURN NEW;
   END
$$;


ALTER FUNCTION public.set_modif_date() OWNER TO postgres;

--
-- TOC entry 1131 (class 1255 OID 16898)
-- Name: suap_dbi_cerca_indirizzo_per_id(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.suap_dbi_cerca_indirizzo_per_id(iddindirizzo integer) RETURNS TABLE(id integer, via text, cap text, provincia text, nazione text, latitudine double precision, longitudine double precision, comune integer, riferimento_org_id integer, riferimento_address_id integer, address_type integer, comune_testo text, toponimo text, civico text, code integer, description text, cod_provincia text, descrizione_comune text, descrizione_provincia text, descrizione_toponimo text)
    LANGUAGE plpgsql STRICT
    AS $$
DECLARE
	r RECORD;
	 	
BEGIN
		FOR 
		id  , via  , cap  ,provincia  , nazione ,latitudine  , longitudine ,comune ,
riferimento_org_id  , riferimento_address_id ,address_type ,comune_testo , toponimo  , civico  ,code ,

description ,cod_provincia ,descrizione_comune , descrizione_provincia , descrizione_toponimo
		in

select 
ind.id , ind.via , ind.cap , ind.provincia  , ind.nazione ,ind.latitudine  , ind.longitudine ,ind.comune ,
ind.riferimento_org_id  , ind.riferimento_address_id ,ind.address_type ,ind.comune_testo as com , ind.toponimo  , ind.civico
,asl.code , asl.description ,c.cod_provincia,coalesce (c.nome,ind.comune_testo) as descrizionecomune,
lp.description as descrizioneprovincia, lt.description as descrizionetoponimo 
from opu_indirizzo ind 
join comuni1 c on c.id =ind.comune 
left join lookup_site_id asl on (c.codiceistatasl)::int = asl.codiceistat::int   and asl.enabled=true 
left join lookup_province lp on lp.code = c.cod_provincia::int  
left join lookup_toponimi lt on lt.code = ind.toponimo::int   where ind.id = iddindirizzo	


		
    LOOP
        RETURN NEXT;
     END LOOP;
     RETURN;
    
 END;
$$;


ALTER FUNCTION public.suap_dbi_cerca_indirizzo_per_id(iddindirizzo integer) OWNER TO postgres;

--
-- TOC entry 1132 (class 1255 OID 16899)
-- Name: test_123(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.test_123() RETURNS text
    LANGUAGE plpgsql
    AS $$
declare
a text;
b integer;
 
BEGIN

select t1.microchip, t1.id into a, b from dblink('host=127.0.0.1 dbname=bdu'::text, 'select microchip, id from animale limit 1') as t1(microchip text, id integer);

return concat('il valore di a: ', a, ' || il valore di b: ', b);
END;
$$;


ALTER FUNCTION public.test_123() OWNER TO postgres;

--
-- TOC entry 1133 (class 1255 OID 16900)
-- Name: test_import_da_cancellare(integer, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.test_import_da_cancellare(_riferimento_id integer, _riferimento_id_nome_tab text) RETURNS integer
    LANGUAGE plpgsql
    AS $$	
declare
	result integer;
	query text;
	idLog integer;
	
        soggetto_indirizzo_comune text;
	soggetto_indirizzo_nazione text;
	lineaattivita_1_data_inizio_attivita  text;
	toponimo_soggfis  text;
	latitudine_stab  text;
	cap_soggfis  text;
	codice_fiscale  text;
	latitudine_leg  text;
	toponimo_sede_legale  text;
	via_soggfis  text;
	autorizzazione_nota  text;
	data_nascita_rapp_leg  text;
	partita_iva  text;
	lineaattivita_1_data_fine_attivita  text;
	autorizzazione_id_aia  text;
	comune_nascita_rapp_leg  text;
	comune_estero_sede_legale  text;
	civico_stab  text;
	autorizzazione_numero  text;
	cf_resp_stab  text;
	civico_sede_legale  text;
	nome_resp_stab  text;
	nome_rapp_leg  text;
	email_impresa  text;
	longitudine_stab  text;
	cod_provincia_soggfis  text;
	responsabile_codice_fiscale text;
	id_impresa_recuperata  text;
	email_rapp_leg  text;
	cod_comune_stab  text;
	lineaattivita_1_codice_univoco_ml  text;	
	cap_leg  text;
	longitudine_leg  text;
	autorizzazione_data  text;
	lineaattivita_1_tipo_carattere_attivita  text;
	nazione_nascita_rapp_leg  text;
	sesso_rapp_leg  text;
	id_rapp_legale_recuperato  text;
	cognome_resp_stab  text;
	toponimo_stab  text;
	autorizzazione_tipo  text;
	ragione_sociale  text;
	cognome_rapp_leg  text;
	civico_soggfis  text;
	denominazione_stab  text;
	id_stabilimento  text;
	autorizzazione_burc  text;
	telefono_rapp_leg  text;
	comune_residenza_estero_soggfis  text;
	nazione_sede_legale  text;
	via_sede_legale  text;
	cod_provincia_sede_legale  text;
	lineaattivita_1_num_riconoscimento  text;
	codice_fiscale_rappresentante  text;
	cap_stab  text;
	lineaattivita_1_tipo_attivita  text;
	cod_provincia_stab  text;
	tipo_impresa  text;
	cod_comune_sede_legale  text;
	via_stab text;

BEGIN

 result := -1;
 idLog := -1;
 query := '';
 
	select 
	t1.soggetto_indirizzo_comune , --ok
	t1.soggetto_indirizzo_nazione , --ok
	t1.linea_1_data_inizio , --ok
	t1.toponimo_soggfis , --ok
	t1.latitudine_stab , --ok
	t1.cap_soggfis ,--ok
	t1.codice_fiscale ,--ok
	t1.latitudine_leg ,--ok
	t1.toponimo_sede_legale ,--ok
	t1.via_soggfis ,--ok
	t1.autorizzazione_nota ,--ok
	t1.data_nascita_rapp_leg ,--ok
	t1.partita_iva ,--ok
	t1.lineaattivita_1_data_fine_attivita ,--ok
	t1.autorizzazione_id_aia ,--ok
	t1.comune_nascita_rapp_leg ,--ok
	t1.comune_estero_sede_legale ,--ok
	t1.civico_stab ,--ok
	t1.autorizzazione_numero ,--ok
	t1.cf_resp_stab ,--ok
	t1.civico_sede_legale ,--ok
	t1.nome_resp_stab ,--ok
	t1.nome_rapp_leg ,--ok
	t1.email_impresa ,--ok
	t1.longitudine_stab ,--ok
	t1.cod_provincia_soggfis ,--ok
	t1.responsabile_codice_fiscale ,--ok
	t1.id_impresa_recuperata , --ok
	t1.email_rapp_leg , --ok
	t1.cod_comune_stab , --ok
	t1.lineaattivita_1_codice_univoco_ml ,--ok
	t1.cap_leg , --ok
	t1.longitudine_leg , --ok
	t1.autorizzazione_data , --ok
	t1.lineaattivita_1_tipo_carattere_attivita , --ok
	t1.nazione_nascita_rapp_leg ,--ok
	t1.sesso_rapp_leg ,--ok
	t1.id_rapp_legale_recuperato ,--ok
	t1.cognome_resp_stab , --ok
	t1.toponimo_stab , --ok
	t1.autorizzazione_tipo , --ok
	t1.ragione_sociale , --ok
	t1.cognome_rapp_leg , --ok
	t1.civico_soggfis , --ok
	t1.denominazione_stab , --ok
	t1.id_stabilimento , --ok
	t1.autorizzazione_burc , --ok
	t1.telefono_rapp_leg , --ok
	t1.comune_residenza_estero_soggfis , --ok
	t1.nazione_sede_legale , --ok
	t1.via_sede_legale , --ok
	t1.cod_provincia_sede_legale ,--ok
	t1.lineaattivita_1_num_riconoscimento , --ok
	t1.codice_fiscale_rappresentante , --ok
	t1.cap_stab , --ok
	t1.lineaattivita_1_tipo_attivita , --ok
	t1.cod_provincia_stab , --ok
	t1.tipo_impresa , --ok
	t1.cod_comune_sede_legale , --ok
	t1.via_stab  --ok
	
 into 
        soggetto_indirizzo_comune,
        soggetto_indirizzo_nazione , 
	lineaattivita_1_data_inizio_attivita ,
	toponimo_soggfis ,
	latitudine_stab ,
	cap_soggfis ,
	codice_fiscale ,
	latitudine_leg ,
	toponimo_sede_legale ,
	via_soggfis ,
	autorizzazione_nota ,
	data_nascita_rapp_leg ,
	partita_iva ,
	lineaattivita_1_data_fine_attivita ,
	autorizzazione_id_aia ,
	comune_nascita_rapp_leg ,
	comune_estero_sede_legale ,
	civico_stab ,
	autorizzazione_numero ,
	cf_resp_stab ,
	civico_sede_legale ,
	nome_resp_stab ,
	nome_rapp_leg ,
	email_impresa ,
	longitudine_stab ,
	cod_provincia_soggfis,
	responsabile_codice_fiscale,
	id_impresa_recuperata ,
	email_rapp_leg ,
	cod_comune_stab ,
	lineaattivita_1_codice_univoco_ml ,	
	cap_leg ,
	longitudine_leg ,
	autorizzazione_data ,
	lineaattivita_1_tipo_carattere_attivita ,
	nazione_nascita_rapp_leg ,
	sesso_rapp_leg ,
	id_rapp_legale_recuperato ,
	cognome_resp_stab ,
	toponimo_stab ,
	autorizzazione_tipo ,
	ragione_sociale ,
	cognome_rapp_leg ,
	civico_soggfis ,
	denominazione_stab ,
	id_stabilimento ,
	autorizzazione_burc ,
	telefono_rapp_leg ,
	comune_residenza_estero_soggfis ,
	nazione_sede_legale ,
	via_sede_legale ,
	cod_provincia_sede_legale ,
	lineaattivita_1_num_riconoscimento ,
	codice_fiscale_rappresentante ,
	cap_stab ,
	lineaattivita_1_tipo_attivita ,
	cod_provincia_stab ,
	tipo_impresa ,
	cod_comune_sede_legale ,
	via_stab
 
	FROM dblink('host=127.0.0.1 dbname=gisa'::text, 'SELECT 
	soggetto_indirizzo_comune,
	soggetto_indirizzo_nazione,
	linea_1_data_inizio,
	soggetto_indirizzo_toponimo,
	stabilimento_indirizzo_latitudine,
	soggetto_indirizzo_cap,
	operatore_codice_fiscale,
	operatore_indirizzo_latitudine,
	operatore_indirizzo_toponimo,
	soggetto_indirizzo_via,
	autorizzazione_nota,
	soggetto_data_nascita,
	operatore_partita_iva,
	linea_1_data_fine,
	autorizzazione_id_aia,
	soggetto_comune_nascita,
	operatore_indirizzo_comune_estero,
	stabilimento_indirizzo_civico,
	autorizzazione_numero,
	soggetto_codice_fiscale,
	operatore_indirizzo_civico,
	responsabile_nome,
	soggetto_nome,
	operatore_mail,
	stabilimento_indirizzo_longitudine,
	soggetto_indirizzo_provincia,
	responsabile_codice_fiscale,
	id_impresa_recuperata, 
	soggetto_mail,
	stabilimento_indirizzo_comune,
	linea_1_codice_univoco_ml,
	operatore_indirizzo_cap,
	operatore_indirizzo_latitudine,
	autorizzazione_data, 
	linea_1_tipo_carattere,
	soggetto_nazione_nascita,
	soggetto_sesso,
	id_rapp_legale_recuperato,
	responsabile_cognome,
	stabilimento_indirizzo_toponimo,
	autorizzazione_tipo,
	operatore_ragione_sociale,
	soggetto_cognome,
	soggetto_indirizzo_civico,
	stabilimento_denominazione,
	id_stabilimento,
	autorizzazione_burc,
	soggetto_telefono,
	soggetto_indirizzo_comune_estero,
	operatore_indirizzo_nazione,
	operatore_indirizzo_via,
	operatore_indirizzo_provincia,
	linea_1_num_riconoscimento,
	soggetto_codice_fiscale,
	stabilimento_indirizzo_cap,
	linea_1_tipo_attivita,
	stabilimento_indirizzo_provincia,
	operatore_tipo_impresa,
	operatore_indirizzo_comune,
	stabilimento_indirizzo_via
	from get_dati_per_import_gisa_anag('||_riferimento_id||','''||_riferimento_id_nome_tab||''')'::text)  as
	t1(soggetto_indirizzo_comune text, --ok
	soggetto_indirizzo_nazione text, --ok
	linea_1_data_inizio text, --ok
	toponimo_soggfis text, --ok
	latitudine_stab text, --ok
	cap_soggfis text,--ok
	codice_fiscale text,--ok
	latitudine_leg text,--ok
	toponimo_sede_legale text,--ok
	via_soggfis text,--ok
	autorizzazione_nota text,--ok
	data_nascita_rapp_leg text,--ok
	partita_iva text,--ok
	lineaattivita_1_data_fine_attivita text,--ok
	autorizzazione_id_aia text,--ok
	comune_nascita_rapp_leg text,--ok
	comune_estero_sede_legale text,--ok
	civico_stab text,--ok
	autorizzazione_numero text,--ok
	cf_resp_stab text,--ok
	civico_sede_legale text,--ok
	nome_resp_stab text,--ok
	nome_rapp_leg text,--ok
	email_impresa text,--ok
	longitudine_stab text,--ok
	cod_provincia_soggfis text,--ok
	responsabile_codice_fiscale text,--ok
	id_impresa_recuperata text, --ok
	email_rapp_leg text, --ok
	cod_comune_stab text, --ok
	lineaattivita_1_codice_univoco_ml text,	--ok
	cap_leg text, --ok
	longitudine_leg text, --ok
	autorizzazione_data text, --ok
	lineaattivita_1_tipo_carattere_attivita text, --ok
	nazione_nascita_rapp_leg text,--ok
	sesso_rapp_leg text,--ok
	id_rapp_legale_recuperato text,--ok
	cognome_resp_stab text, --ok
	toponimo_stab text, --ok
	autorizzazione_tipo text, --ok
	ragione_sociale text, --ok
	cognome_rapp_leg text, --ok
	civico_soggfis text, --ok
	denominazione_stab text, --ok
	id_stabilimento text, --ok
	autorizzazione_burc text, --ok
	telefono_rapp_leg text, --ok
	comune_residenza_estero_soggfis text, --ok
	nazione_sede_legale text, --ok
	via_sede_legale text, --ok
	cod_provincia_sede_legale text,--ok
	lineaattivita_1_num_riconoscimento text, --ok
	codice_fiscale_rappresentante text, --ok
	cap_stab text, --ok
	lineaattivita_1_tipo_attivita text, --ok
	cod_provincia_stab text, --ok
	tipo_impresa text, --ok
	cod_comune_sede_legale text, --ok
	via_stab text --ok
	);

raise info '[import_from_gisa_anag] select * from import_from_gisa_anag (%,''%'');', _riferimento_id, _riferimento_id_nome_tab;	

query := concat(concat('select * from public.insert_gestione_anagrafica(
''"cod_comune_soggfis"=>"',soggetto_indirizzo_comune,'"', ', ', 
'"nazione_soggfis"=>"106"', ', ', 
'"lineaattivita_1_data_inizio_attivita"=>"', lineaattivita_1_data_inizio_attivita, '"', ', ',
'"toponimo_soggfis"=>"',toponimo_soggfis,'"', ', ', 
'"latitudine_stab"=>"',latitudine_stab,'"', ', ',
'"cap_soggfis"=>"',cap_soggfis,'"', ', ',
'"codice_fiscale"=>"',codice_fiscale,'"', ', ',
'"latitudine_leg"=>"',latitudine_leg,'"', ', ',
'"toponimo_sede_legale"=>"',toponimo_sede_legale,'"', ', ',
'"via_soggfis"=>"',via_soggfis,'"', ', ',
'"autorizzazione_nota"=>NULL', ', ', 
'"data_nascita_rapp_leg"=>"',data_nascita_rapp_leg,'"', ', ', 
'"partita_iva"=>"',partita_iva,'"', ', ',
'"lineaattivita_1_data_fine_attivita"=>"',lineaattivita_1_data_fine_attivita,'"', ', ', 
'"autorizzazione_id_aia"=>NULL', ', ',  
'"comune_nascita_rapp_leg"=>"',comune_nascita_rapp_leg,'"', ', ', 
'"comune_estero_sede_legale"=>"',comune_estero_sede_legale,'"', ', ',
'"civico_stab"=>"',civico_stab,'"', ', ',
'"autorizzazione_numero"=>NULL', ', ',
'"cf_resp_stab"=>"',cf_resp_stab,'"', ', ', 
'"civico_sede_legale"=>"',civico_sede_legale,'"', ', ',
'"nome_resp_stab"=>"',nome_resp_stab,'"', ', ', 
'"email_impresa"=>"',email_impresa,'"', ', ',
'"longitudine_stab"=>"',longitudine_stab,'"', ', ',
'"cod_provincia_soggfis"=>"',cod_provincia_soggfis,'"', ', ',
'"email_rapp_leg"=>"',email_rapp_leg,'"', ', ', 
''), 
concat('''',
'"cod_comune_stab"=>"',cod_comune_stab,'"', ', ',
'"lineaattivita_1_codice_univoco_ml"=>"NON.MAPP"', ', ',  
'"cap_leg"=>"',cap_leg,'"', ', ',
'"longitudine_leg"=>"',longitudine_leg,'"', ', ',
'"autorizzazione_data"=>NULL', ', ',  
'"lineaattivita_1_tipo_carattere_attivita"=>"',lineaattivita_1_tipo_carattere_attivita,'"', ', ',
'"nazione_nascita_rapp_leg"=>"106"', ', ',
'"sesso_rapp_leg"=>"',sesso_rapp_leg,'"', ', ', 
'"id_rapp_legale_recuperato"=>"',id_rapp_legale_recuperato,'"', ', ',
'"cognome_resp_stab"=>"',cognome_resp_stab,'"', ', ',
'"toponimo_stab"=>"',toponimo_stab,'"', ', ',
'"autorizzazione_tipo"=>NULL', ', ', 
'"ragione_sociale"=>"',ragione_sociale,'"', ', ',
'"cognome_rapp_leg"=>"',cognome_rapp_leg,'"', ', ',
'"civico_soggfis"=>"',civico_soggfis,'"', ', ', 
'"denominazione_stab"=>NULL', ', ', 
'"id_stabilimento"=>"',id_stabilimento,'"', ', ', 
'"autorizzazione_burc"=>NULL', ', ', 
'"telefono_rapp_leg"=>NULL', ', ',
'"comune_residenza_estero_soggfis"=>"','"', ', ', 
'"nazione_sede_legale"=>"106"', ', ',
'"via_sede_legale"=>"',via_sede_legale,'"', ', ', 
'"cod_provincia_sede_legale"=>"',cod_provincia_sede_legale,'"', ', ', 
'"lineaattivita_1_num_riconoscimento"=>"',lineaattivita_1_num_riconoscimento,'"', ', ',
'"codice_fiscale_rappresentante"=>"',codice_fiscale_rappresentante,'"', ', ',
'"cap_stab"=>"',cap_stab,'"', ', ',
'"lineaattivita_1_tipo_attivita"=>"',lineaattivita_1_tipo_attivita,'"', ', ', 
''),
concat('''',
'"cod_provincia_stab"=>"',cod_provincia_stab,'"', ', ', 
'"tipo_impresa"=>"',tipo_impresa,'"', ', ', 
'"cod_comune_sede_legale"=>"',cod_comune_sede_legale,'"', ', ',  
'"via_stab"=>"',via_stab,'"', '''::hstore', ', ',
'''''','::hstore ', ', ',
'964',', ',
'-1',', ',
'''''', ', ',
'-1','',
')')
);


raise info ' %', query;


return result;
END;

$$;


ALTER FUNCTION public.test_import_da_cancellare(_riferimento_id integer, _riferimento_id_nome_tab text) OWNER TO postgres;

--
-- TOC entry 1134 (class 1255 OID 16902)
-- Name: update_anag(integer, text, integer, text, integer, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.update_anag(_riferimento_id integer, _riferimento_id_nome_tab text, _id_nuovo_stato integer, _data_cambio_stato text, _id_utente integer, _nota text) RETURNS text
    LANGUAGE plpgsql
    AS $$

DECLARE
	  
	  id_storico_result integer;
	  id_stato_prec integer;
	  output boolean;
BEGIN


	IF _riferimento_id_nome_tab = 'opu_stabilimento' then
	        id_stato_prec := (select stato from opu_stabilimento where trashed_date is null and id = _riferimento_id);
		update opu_stabilimento set modified_by = _id_utente, modified= current_timestamp, stato = _id_nuovo_stato where id = _riferimento_id;
		insert into anag_storico_modifiche (riferimento_id,riferimento_id_nome_tab, id_nuovo_stato, id_vecchio_stato, data_cambio_stato, nota,
				          enteredby) values(_riferimento_id, _riferimento_id_nome_tab, _id_nuovo_stato, id_stato_prec, _data_cambio_stato, _nota, _id_utente) 
				          returning id into id_storico_result ;
		output := (select * from refresh_anagrafica(_riferimento_id, 'opu'));
		
		update opu_relazione_stabilimento_linee_produttive lp
		set modifiedby = _id_utente, modified = current_timestamp, stato = _id_nuovo_stato
		where enabled = 'true'
		and lp.id_stabilimento = _riferimento_id;
	end if;
	
	if id_storico_result > 0 then
		return 'OK, operazione effettuata con successo.';
	else
		return 'KO, operazione non effettuata.';
	end if;

END;
$$;


ALTER FUNCTION public.update_anag(_riferimento_id integer, _riferimento_id_nome_tab text, _id_nuovo_stato integer, _data_cambio_stato text, _id_utente integer, _nota text) OWNER TO postgres;

--
-- TOC entry 1135 (class 1255 OID 16903)
-- Name: update_comune_provincia(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.update_comune_provincia() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   DECLARE
   comune text;
   provincia text ;
   cap  text;
   cont integer;
   nazione text;
   nazione2 text;
   desc_nazione text;		
   cod_provincia_comune text;
   cod_provincia_province integer;
   msg text;
   
   BEGIN

msg = '';
desc_nazione = 'ITALIA';

if NEW.city  != ''
THEN
--Recuper codice della provincia inserita da lookup
if (NEW.state is not null) then 
	cod_provincia_province := (SELECT code from lookup_province where description ilike trim(NEW.state) or cod_provincia ilike trim(NEW.state));

end if;

-- Recupero comune scelto da lookup (con specifica della prov)
if (NEW.city  != '' and NEW.city is not null and cod_provincia_province is not null) then
	comune:= (select c.nome from 
	comuni1 c 
	where c.nome ilike trim(NEW.city) and c.cod_provincia::integer=cod_provincia_province
	);
	cod_provincia_comune := (SELECT cod_provincia from comuni1 where nome ilike trim(comune) and cod_provincia::integer=cod_provincia_province);
	provincia := (select lp.cod_provincia from lookup_province lp where cod_provincia_comune::integer=lp.code);
end if;

-- Recupero comune scelto da lookup (senza specifica della prov)
if (NEW.city != '' and NEW.city is not null and NEW.state is null) then
	cont := (select count(c.nome) from  --controllo sul comune (caso di stesso nome ma prov diverse)
	comuni1 c 
	where c.nome ilike trim(NEW.city)
	);
	IF (cont=1) then 
		comune:= (select c.nome from 
		comuni1 c 
		where c.nome ilike trim(NEW.city)
		);
		cod_provincia_comune := (SELECT cod_provincia from comuni1 where nome ilike trim(comune) );
		provincia := (select lp.cod_provincia from lookup_province lp where cod_provincia_comune::integer=lp.code);
	end if;
end if;

-- Recupero nazione scelta tramite COMUNE da lookup
if (NEW.city != '' and NEW.city is not null) then
	nazione:= (select naz.code from 
	lookup_nazioni naz where description ilike trim(NEW.city)
);
end if;

-- Recupero nazione scelta tramite PROVINCIA da lookup
if (NEW.state != '' and NEW.state is not null) then
	nazione2:= (select naz.code from 
	lookup_nazioni naz where description ilike trim(NEW.state)
);
end if;

-- SE NON HO TROVATO IL COMUNE
 IF (cod_provincia_comune is null) then	
	if (NEW.city is null or NEW.city='') then
		msg = msg || ' Comune non inserito; ';
	end if;
	if (NEW.city is not null and NEW.city!='') then
		msg = msg || ' Comune ' ||  NEW.city || ' non trovato o non coerente con provincia inserita';
	end if;
 END IF;
 
-- SE NON HO TROVATO LA PROVINCIA
IF (NEW.state is not null) then
	IF (cod_provincia_province is null) then
		msg = msg || ' Provincia ' ||  NEW.state || ' non trovata; ';
	end if;
END IF;

IF (cod_provincia_comune is not null and  cod_provincia_province is not null and cod_provincia_comune::integer <> cod_provincia_province) then
-- SE IL CODICE ISTAT DEL COMUNE E' DIVERSO DA QUELLO DELLA PROVINCIA
	msg = msg || ' Comune ' ||  trim(NEW.city) || ' non coerente con la provincia '|| trim(NEW.state); 
END IF;

-- Se ho trovato la nazione (comune) nella lookup
IF (nazione is not null and cod_provincia_comune is null) THEN
	msg = '';
	provincia := trim(NEW.city);
	comune := trim(NEW.state);
	desc_nazione = trim(NEW.city);
END IF;

-- Se ho trovato la nazione (provincia) nella lookup
IF (nazione2 is not null and cod_provincia_comune is null) THEN
	msg = '';
	provincia := trim(NEW.state);
	comune := trim(NEW.city);
	desc_nazione = trim(NEW.state);
END IF;

-- Se ho trovato un errore
IF (msg <> '') THEN
	msg = '[IndirizziException] ' || msg;
	raise exception '%', msg ;
END IF;

--Setto i valori
NEW.state := provincia;
NEW.city := comune;
NEW.country := desc_nazione;
NEW.codiceistatasl_old:=(select codiceistatasl_old from comuni1 where nome ilike NEW.city);

end if ;

RETURN NEW;
     
   END
$$;


ALTER FUNCTION public.update_comune_provincia() OWNER TO postgres;

--
-- TOC entry 1136 (class 1255 OID 16904)
-- Name: update_cu_canili(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.update_cu_canili() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   DECLARE
   tipo integer;
   idCanile integer;
   updateQuery text;
   BEGIN
	tipo := ( select tipologia from organization where org_id = NEW.org_id ) ;
	if tipo = 10 and NEW.tipologia = 3 then
		idCanile := ( select org_id_c from organization where org_id = NEW.org_id ) ;
		if NEW.closed is null then
			updateQuery := 'update cu_canili set data_inizio_controllo = ''' || NEW.assigned_date ||''', chiuso = null, tipo_controllo = ''' || replace(NEW.tipo_controllo, '''','''''') ||''' where id_controllo = ' || NEW.ticketid;
		else
			updateQuery := 'update cu_canili set data_inizio_controllo = ''' || NEW.assigned_date ||''', chiuso = ''' || NEW.closed || ''', tipo_controllo = ''' || replace(NEW.tipo_controllo, '''','''''') ||''' where id_controllo = ' || NEW.ticketid;
		end if;

		if NEW.trashed_date is null then
			updateQuery := updateQuery || '; update cu_canili set trashed_date = null where id_controllo = ' || NEW.ticketid;
		else
			updateQuery := updateQuery || '; update cu_canili set trashed_date = ''' || NEW.trashed_date || ''' where id_controllo = ' || NEW.ticketid;
		end if;

		if NEW.categoria_rischio is not null then
		updateQuery := updateQuery || '; update organization set categoria_rischio = ' || NEW.categoria_rischio || '  where org_id = ' || idCanile;
		end if;

		if NEW.data_prossimo_controllo is not null then
		updateQuery := updateQuery || '; update organization set prossimo_controllo = ''' || NEW.data_prossimo_controllo || '''  where org_id = ' || idCanile;
		end if;

		PERFORM dblink_connect('canina-conn','host=dbservercanina dbname=canina');
		PERFORM dblink_exec('canina-conn',updateQuery);
		PERFORM dblink_disconnect('canina-conn');
	end if;
    RETURN NEW;
   END
$$;


ALTER FUNCTION public.update_cu_canili() OWNER TO postgres;

--
-- TOC entry 1137 (class 1255 OID 16905)
-- Name: update_cu_children_punti_sbarco_trashed(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.update_cu_children_punti_sbarco_trashed() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   DECLARE
   tipoOrg integer;
   BEGIN
   tipoOrg := (select tipologia from organization where org_id = NEW.org_id); 
   if tipoOrg = 5 AND NEW.parent_ticket_id = -1 AND NEW.trashed_date is not null then
	UPDATE ticket set trashed_date = now(), modified = now(), modifiedby = NEW.modifiedby
	WHERE parent_ticket_id = NEW.ticketid; 
	UPDATE punti_sbarco_operatori_controllati set trashed_date = now(), modified = now(), modified_by = NEW.modifiedby
	WHERE ticket_id = NEW.ticketid; 
    end if;
    RETURN NEW;
   END
$$;


ALTER FUNCTION public.update_cu_children_punti_sbarco_trashed() OWNER TO postgres;

--
-- TOC entry 1138 (class 1255 OID 16906)
-- Name: update_cu_colonie(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.update_cu_colonie() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   DECLARE
   tipo integer;
   idCanile integer;
   updateQuery text;
   BEGIN
	tipo := ( select tipologia from organization where org_id = NEW.org_id ) ;
	if tipo = 16 and NEW.tipologia = 3 then
		idCanile := ( select org_id_c from organization where org_id = NEW.org_id ) ;
		if NEW.closed is null then
			updateQuery := 'update cu_colonie set data_inizio_controllo = ''' || NEW.assigned_date ||''', chiuso = null, tipo_controllo = ''' || replace(NEW.tipo_controllo, '''','''''') ||''' where id_controllo = ' || NEW.ticketid;
		else
			updateQuery := 'update cu_colonie set data_inizio_controllo = ''' || NEW.assigned_date ||''', chiuso = ''' || NEW.closed || ''', tipo_controllo = ''' || replace(NEW.tipo_controllo, '''','''''') ||''' where id_controllo = ' || NEW.ticketid;
		end if;

		if NEW.trashed_date is null then
			updateQuery := updateQuery || '; update cu_colonie set trashed_date = null where id_controllo = ' || NEW.ticketid;
		else
			updateQuery := updateQuery || '; update cu_colonie set trashed_date = ''' || NEW.trashed_date || ''' where id_controllo = ' || NEW.ticketid;
		end if;

		

		PERFORM dblink_connect('felina-conn','host=dbservercanina dbname=felina');
		PERFORM dblink_exec('felina-conn',updateQuery);
		PERFORM dblink_disconnect('felina-conn');
	end if;
    RETURN NEW;
   END
$$;


ALTER FUNCTION public.update_cu_colonie() OWNER TO postgres;

--
-- TOC entry 1139 (class 1255 OID 16907)
-- Name: update_cu_operatori_commerciali(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.update_cu_operatori_commerciali() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   DECLARE
   tipo integer;
   idOperatoreCommerciale integer;
   updateQuery text;
   BEGIN
	tipo := ( select tipologia from organization where org_id = NEW.org_id ) ;
	if tipo = 20 and NEW.tipologia = 3 then
		idOperatoreCommerciale := ( select org_id_c from organization where org_id = NEW.org_id ) ;
		if NEW.closed is null then
			updateQuery := 'update cu_operatori_commerciali set data_inizio_controllo = ''' || NEW.assigned_date ||''', chiuso = null, tipo_controllo = ''' || replace(NEW.tipo_controllo, '''','''''') ||''' where id_controllo = ' || NEW.ticketid;
		else
			updateQuery := 'update cu_operatori_commerciali set data_inizio_controllo = ''' || NEW.assigned_date ||''', chiuso = ''' || NEW.closed || ''', tipo_controllo = ''' || replace(NEW.tipo_controllo, '''','''''') ||''' where id_controllo = ' || NEW.ticketid;
		end if;

		if NEW.trashed_date is null then
			updateQuery := updateQuery || '; update cu_operatori_commerciali set trashed_date = null where id_controllo = ' || NEW.ticketid;
		else
			updateQuery := updateQuery || '; update cu_operatori_commerciali set trashed_date = ''' || NEW.trashed_date || ''' where id_controllo = ' || NEW.ticketid;
		end if;

		if NEW.categoria_rischio is not null then
		updateQuery := updateQuery || '; update organization set categoria_rischio = ' || NEW.categoria_rischio || '  where org_id = ' || idOperatoreCommerciale;
		end if;

		if NEW.data_prossimo_controllo is not null then
		updateQuery := updateQuery || '; update organization set prossimo_controllo = ''' || NEW.data_prossimo_controllo || '''  where org_id = ' || idOperatoreCommerciale;
		end if;

		PERFORM dblink_connect('canina-conn','host=dbservercanina dbname=canina');
		PERFORM dblink_exec('canina-conn',updateQuery);
		PERFORM dblink_disconnect('canina-conn');
	end if;
    RETURN NEW;
   END
$$;


ALTER FUNCTION public.update_cu_operatori_commerciali() OWNER TO postgres;

--
-- TOC entry 1140 (class 1255 OID 16908)
-- Name: update_inser_update_linee_produttive(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.update_inser_update_linee_produttive() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   DECLARE
   BEGIN
     if (NEW.data_fine is null or NEW.data_fine>current_timestamp)
     then
        NEW.stato = 0;
        else
        NEW.stato = 4;
     end if ;
     RETURN NEW;
   END
$$;


ALTER FUNCTION public.update_inser_update_linee_produttive() OWNER TO postgres;

--
-- TOC entry 1141 (class 1255 OID 16909)
-- Name: update_insert_allerta(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.update_insert_allerta() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
 DECLARE
  msg text ;
   BEGIN
 
   
if(NEW.tipologia=700 and NEW.data_apertura is null)
then
	msg = '[Data Apertura NULL] ';
	raise exception '%', msg ;
 END IF;


     RETURN NEW;
     end;
$$;


ALTER FUNCTION public.update_insert_allerta() OWNER TO postgres;

--
-- TOC entry 1142 (class 1255 OID 16910)
-- Name: update_modif_date(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.update_modif_date() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   DECLARE
   BEGIN
     --UPDATE organization SET modified = now() where org_id=OLD.org_id;
     if ((OLD.data_esportazione = NEW.data_esportazione) or (OLD.data_elaborazione_sigla = NEW.data_elaborazione_sigla))
     then
        NEW.modified = now();
     end if ;
     RETURN NEW;
   END
$$;


ALTER FUNCTION public.update_modif_date() OWNER TO postgres;

--
-- TOC entry 1143 (class 1255 OID 16911)
-- Name: update_modif_stab(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.update_modif_stab() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   DECLARE
   BEGIN


  NEW.numero_registrazione:= (select c.codice_nuovo_||lpad(dbi_opu_get_progressivo_per_comune(c.id)::text, 6, '0')
from
opu_stabilimento s
join opu_indirizzo i on i.id=s.id_indirizzo
join comuni1 c on c.id = i.comune
where s.id =NEW.id );


     RETURN NEW;
   END
$$;


ALTER FUNCTION public.update_modif_stab() OWNER TO postgres;

--
-- TOC entry 1144 (class 1255 OID 16912)
-- Name: update_modif_stab_lp(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.update_modif_stab_lp() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   DECLARE
   BEGIN


  NEW.numero_registrazione:= (
select s.numero_registrazione ||lpad(dbi_opu_get_progressivo_linea_per_stabilimento(s.numero_registrazione)::text, 3 ,'0')
from
opu_stabilimento s
join opu_relazione_stabilimento_linee_produttive r on r.id_stabilimento= s.id
where r.id =NEW.id
  );


     RETURN NEW;
   END
$$;


ALTER FUNCTION public.update_modif_stab_lp() OWNER TO postgres;

--
-- TOC entry 1145 (class 1255 OID 16913)
-- Name: update_operatori_commerciali_bdr(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.update_operatori_commerciali_bdr() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   DECLARE
   tipo integer;
   updateQuery text;
   cursore refcursor  ;
   strada text;
   latitude1 double precision ; 
   longitude1 double precision ;
   cap text;
   cityIn text;
   orgidc int ;
   
   BEGIN
	
		if (NEW.org_id_c is not null and  NEW.org_id_c>0 ) then
		updateQuery := 'UPDATE organization SET name = ''' || NEW.name || ''',partita_iva= ' ||NEW.partita_iva || '
 ,modified = ''' || NEW.modified || ''', notes = ''' || coalesce('''' || replace(NEW.notes, '''','''''') || ',NULL') || ''', 
codice_fiscale = ''' || coalesce('''' || NEW.codice_fiscale_rappresentante || '''','NULL') || ''', 
namefirst = ''' || coalesce('''' || NEW.nome_rappresentante || '''','NULL') || ''', 
namelast = ''' || coalesce('''' || NEW.cognome_rappresentante || '''','NULL') || ''', 
data_nascita = ''' || coalesce('''' || NEW.data_nascita_rappresentante || '''',NULL) || ''', 
luogo_nascita = ''' || coalesce('''' || NEW.luogo_nascita_rappresentante || '''','NULL') || ''', 
autorizzazione = ''' || coalesce('''' || NEW.autorizzazione || '''','NULL') ||  ''' WHERE org_id = '|| NEW.org_id_c ;

		PERFORM dblink_connect('conn-canina','host=10.1.15.11 dbname=bdu');
		PERFORM dblink_exec('conn-canina',updateQuery);

PERFORM dblink_disconnect('conn-canina');
end if;
    RETURN NEW;
   END
$$;


ALTER FUNCTION public.update_operatori_commerciali_bdr() OWNER TO postgres;

--
-- TOC entry 1146 (class 1255 OID 16914)
-- Name: update_password(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.update_password() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   DECLARE
   updateQuery text;
   BEGIN
	if OLD.password != NEW.password then
		updateQuery := 'update access set password = ''' || NEW.password ||''' where enabled = true and username = ''' || NEW.username || '''';
		
		PERFORM dblink_connect('canina-conn','host=dbservercanina dbname=canina');
		PERFORM dblink_exec('canina-conn',updateQuery);
		PERFORM dblink_disconnect('canina-conn');
		
		PERFORM dblink_connect('felina-conn','host=dbservercanina dbname=felina');
		PERFORM dblink_exec('felina-conn',updateQuery);
		PERFORM dblink_disconnect('felina-conn');
	end if;
    RETURN NEW;
   END
$$;


ALTER FUNCTION public.update_password() OWNER TO postgres;

--
-- TOC entry 1147 (class 1255 OID 16915)
-- Name: update_stato_opu_stabilimento(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.update_stato_opu_stabilimento() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   DECLARE
   cursore refcursor;
   stato int ;
   attivo int;
   
   BEGIN

attivo :=0 ;
	open cursore for select opu_relazione_stabilimento_linee_produttive.stato from opu_relazione_stabilimento_linee_produttive where enabled and id_stabilimento =NEW.id ;
	LOOP
		fetch cursore into stato ;
		if(stato=0)
		then
		attivo :=1 ;
		end if ;
		
 		EXIT WHEN NOT FOUND; 
end loop ;

if (attivo=1)
then
NEW.stato = 0;
else
NEW.stato=4;
end if ;
 		
  
     RETURN NEW;
   END
$$;


ALTER FUNCTION public.update_stato_opu_stabilimento() OWNER TO postgres;

--
-- TOC entry 1148 (class 1255 OID 16916)
-- Name: upsert_dati_acque_reflue(integer, text, integer, boolean, integer, text, integer, text, text, text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.upsert_dati_acque_reflue(_riferimento_id integer, _riferimento_id_nome_tab text, _id_utente integer, _depurazione_reflui boolean, _id_stato_impianto integer, _gestore_impianto text, _id_processo_depurativo integer, _potenzialita_impianto_ae text, _ricettore_scarico text, _ricettore_finale text, _codice_ulia text) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
	  id_opu_result integer;
	  
BEGIN

	
	update anag_acque_reflue set modifiedby = _id_utente, trashed_date = now() 
	where riferimento_id= _riferimento_id 
	and   riferimento_id_nome_tab = _riferimento_id_nome_tab
	and trashed_date is null;

	insert into anag_acque_reflue(riferimento_id , riferimento_id_nome_tab, depurazione_reflui, id_stato_impianto, gestore_impianto, id_processo_depurativo,
					potenzialita_impianto_ae, recettore_scarico, recettore_finale, codice_ulia, enteredby, modifiedby, entered
				      ) values
	                              (_riferimento_id, _riferimento_id_nome_tab,_depurazione_reflui, _id_stato_impianto, _gestore_impianto, 
	                               _id_processo_depurativo, _potenzialita_impianto_ae, _ricettore_scarico, _ricettore_finale, _codice_ulia, _id_utente,
	                               _id_utente, now()) returning id into id_opu_result;

	if id_opu_result > 0 then
		return 'OK, operazione effettuata con successo.';
	else
		return 'KO, operazione non effettuata.';
	end if;

END;
$$;


ALTER FUNCTION public.upsert_dati_acque_reflue(_riferimento_id integer, _riferimento_id_nome_tab text, _id_utente integer, _depurazione_reflui boolean, _id_stato_impianto integer, _gestore_impianto text, _id_processo_depurativo integer, _potenzialita_impianto_ae text, _ricettore_scarico text, _ricettore_finale text, _codice_ulia text) OWNER TO postgres;

--
-- TOC entry 1149 (class 1255 OID 16917)
-- Name: upsert_dati_autorizzativi(integer, text, integer, text, integer, text, text, text, text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.upsert_dati_autorizzativi(_riferimento_id integer, _riferimento_id_nome_tab text, _id_utente integer, _id_aia text, _id_autorizzazione integer, _num_decreto text, _data_decreto text, _nota text, _burc text, _id_matrici text) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
	  id_opu_result integer;
	  matrici text[];
          i text;
BEGIN

 
	matrici := string_to_array(_id_matrici,',');
	raise info 'matrici %', matrici;
	update anag_dati_autorizzativi set modifiedby = _id_utente, trashed_date = now() 
	where riferimento_id= _riferimento_id 
	and   riferimento_id_nome_tab = _riferimento_id_nome_tab
	and trashed_date is null;

	insert into anag_dati_autorizzativi(riferimento_id , riferimento_id_nome_tab, id_aia, tipo_autorizzazione, num_decreto, data_decreto, nota, burc) values
	                               (_riferimento_id, _riferimento_id_nome_tab,_id_aia, _id_autorizzazione, _num_decreto, _data_decreto, _nota, _burc) 
	                          
	returning id into id_opu_result;

	FOREACH i IN ARRAY matrici --loop through each element in array matrici
	LOOP
	 raise info '%', i;
		insert into anag_dati_autorizzativi_matrici (id_anag_dati_autorizzativi, id_matrice, enteredby) values (id_opu_result, i::integer, _id_utente);	
	END LOOP;

	if id_opu_result > 0 then
		return 'OK, operazione effettuata con successo.';
	else
		return 'KO, operazione non effettuata.';
	end if;

END;
$$;


ALTER FUNCTION public.upsert_dati_autorizzativi(_riferimento_id integer, _riferimento_id_nome_tab text, _id_utente integer, _id_aia text, _id_autorizzazione integer, _num_decreto text, _data_decreto text, _nota text, _burc text, _id_matrici text) OWNER TO postgres;

--
-- TOC entry 1150 (class 1255 OID 16918)
-- Name: verifica_esistenza_impresa_noscia(text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.verifica_esistenza_impresa_noscia(_partita_iva_in text) RETURNS SETOF json
    LANGUAGE plpgsql
    AS $$

BEGIN

 
return query
select concat('[', string_agg(row_to_json(tab)::text, ','), ']')::json as lista_imprese from
(
select distinct
       oo.id::text as id_impresa_recuperata,
       trim(oo.ragione_sociale) as ragione_sociale_impresa,
       trim(oo.partita_iva) as partita_iva_impresa, 
       trim(oo.codice_fiscale_impresa) as codice_fiscale_impresa, 
       trim(oo.domicilio_digitale) as email_impresa,
       oo.tipo_societa::text as tipo_impresa,
       ln.code::text as nazione_sede_legale,
       case when ln.code = 106 then trim(oi.provincia) else null end as "provinciaIdSedeLegale",
       case when ln.code = 106 then trim(lp.description) else null end as provincia_sede_legale,
       case when ln.code = 106 then oi.comune::text else null end as "comuneIdSedeLegale",
       case when ln.code <> 106 then trim(oi.comune_testo) else null end as comune_estero_sede_legale,
       case when ln.code = 106 then trim(c.nome) else null end as comune_sede_legale,
       case when ln.code = 106 then oi.toponimo::text else null end as "topIdSedeLegale",
       case when ln.code = 106 then trim(lt.description) else null end as toponimo_sede_legale,
       case when ln.code = 106 then trim(oi.via) else null end as via_sede_legale,
       case when ln.code = 106 then trim(oi.civico) else null end as civico_sede_legale,
       case when ln.code = 106 then trim(oi.cap) else null end as cap_sede_legale,
       case when ln.code = 106 then trim(oi.presso) else null end as presso_sede_legale,
       case when ln.code = 106 then oi.latitudine::text else null end as latitudine_sede_legale,
       case when ln.code = 106 then oi.longitudine::text else null end as longitudine_sede_legale,
       os.id::text as id_rapp_legale_recuperato,
       trim(os.nome) as nome_rapp_legale, 
       trim(os.cognome) as cognome_rapp_legale, 
       trim(os.sesso) as sesso_rapp_legale, 
       case when os.provenienza_estera = false then 106::text else os.id_nazione_nascita::text end as nazione_nascita_rapp_legale, 
       case when os.provenienza_estera = false then c2_sogg.id::text else null end as comune_nascita_rapp_legale ,  
       case when os.provenienza_estera = true then trim(os.comune_nascita) end as comune_nascita_estero_rapp_legale ,
       to_char(os.data_nascita, 'DD-MM-YYYY') as data_nascita_rapp_legale,
       trim(os.codice_fiscale) as cf_rapp_legale,
       trim(os.email) as email_rapp_legale,
       trim(os.telefono) as telefono_rapp_legale,
       ln_sogg.code::text as nazione_residenza_rapp_legale,
       case when ln_sogg.code = 106 then oi_sogg.provincia::text else null end as "provinciaIdResidenzaRappLegale",
       case when ln_sogg.code = 106 then trim(lp_sogg.description) else null end as provincia_residenza_rapp_legale,
       case when ln_sogg.code = 106 then  oi_sogg.comune::text else null end as "comuneIdResidenzaRappLegale",
       case when ln_sogg.code <> 106 then trim(oi_sogg.comune_testo) else null end as comune_residenza_estero_rapp_legale,
       case when ln_sogg.code = 106 then trim(c_sogg.nome) else null end as comune_residenza_rapp_legale,
       case when ln_sogg.code = 106 then oi_sogg.toponimo::text else null end as "topIdResidenzaRappLegale" ,
       case when ln_sogg.code = 106 then trim(lt_sogg.description) else null end as toponimo_residenza_rapp_legale ,
       case when ln_sogg.code = 106 then trim(oi_sogg.via) else null end as via_residenza_rapp_legale,
       case when ln_sogg.code = 106 then trim(oi_sogg.civico) else null end as civico_residenza_rapp_legale,
       case when ln_sogg.code = 106 then trim(oi_sogg.cap) else null end as cap_residenza_rapp_legale,
       case when ln_sogg.code = 106 then trim(oi_sogg.presso) else null end as presso_rapp_legale,
       case when ln_sogg.code = 106 then oi_sogg.latitudine::text else null end as latitudine_rapp_legale,
       case when ln_sogg.code = 106 then oi_sogg.longitudine::text else null end as longitudine_rapp_legale
	from opu_operatore oo 
        join opu_stabilimento stab on stab.id_operatore = oo.id and stab.trashed_date is null
        join opu_relazione_stabilimento_linee_produttive rel on rel.id_stabilimento = stab.id
	left join opu_indirizzo oi on oo.id_indirizzo = oi.id 
	left join comuni1 c on oi.comune = c.id
	left join lookup_province lp on lp.code = c.cod_provincia::integer
	left join lookup_toponimi lt on lt.code = oi.toponimo and lt.enabled
	left join lookup_nazioni ln on (trim(ln.description) ilike trim(oi.nazione) or trim(ln.code::text) ilike trim(oi.nazione))
	left join opu_rel_operatore_soggetto_fisico opurel on opurel.id_operatore = oo.id
	left join opu_soggetto_fisico os on opurel.id_soggetto_fisico = os.id
	left join opu_indirizzo oi_sogg on os.indirizzo_id = oi_sogg.id
	left join comuni1 c_sogg on oi_sogg.comune = c_sogg.id
	left join lookup_province lp_sogg on lp_sogg.code = c_sogg.cod_provincia::integer
	left join lookup_toponimi lt_sogg on lt_sogg.code = oi_sogg.toponimo and lt_sogg.enabled
	left join lookup_nazioni ln_sogg on (trim(ln_sogg.description) ilike trim(oi_sogg.nazione) or trim (ln_sogg.code::text) ilike oi_sogg.nazione::text)
	left join comuni1 c2_sogg on trim(os.comune_nascita) ilike trim(c2_sogg.nome)		       
	where trim(oo.partita_iva) ilike trim(_partita_iva_in)
	and opurel.enabled and rel.enabled
	and opurel.data_fine is null
	and oo.trashed_date is null
	and os.trashed_date is null
        and stab.trashed_date is null

		      ) tab;

END;	
    
$$;


ALTER FUNCTION public.verifica_esistenza_impresa_noscia(_partita_iva_in text) OWNER TO postgres;

--
-- TOC entry 1151 (class 1255 OID 16919)
-- Name: ws_get_endpoint_info(integer, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.ws_get_endpoint_info(id_endpoint_in integer, ambiente_in text) RETURNS SETOF public.ws_endpoint_info_object
    LANGUAGE sql
    AS $$SELECT id, id_endpoint, ambiente , url , username , password, ruolo , ruolo_codice , ruolo_valore_codice, xmlns, prefisso_username_password, suffisso_autenticazione  FROM ws_endpoint_info e  
                WHERE e.id_endpoint = id_endpoint_in and ambiente = ambiente_in$$;


ALTER FUNCTION public.ws_get_endpoint_info(id_endpoint_in integer, ambiente_in text) OWNER TO postgres;

--
-- TOC entry 1152 (class 1255 OID 16920)
-- Name: ws_get_envelope(text, text, text, text, text, text, text, text, text, text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.ws_get_envelope(xmlns_input text, ruolo_in text, username_in text, password_in text, ruolo_codice_in text, ruolo_valore_codice_in text, nome_servizio_in text, nome_oggetto_in text, campi_envelope_in text, suffisso_autenticazione text DEFAULT ''::text, prefisso_username_password text DEFAULT ''::text) RETURNS text
    LANGUAGE sql
    AS $$select '<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="'|| xmlns_input ||'"> ' ||
			             '<soapenv:Header>' ||
			             	'<ser:SOAPAutorizzazione> ' || 
						'<ruolo>' || ruolo_in || '</ruolo>' ||
			             	'</ser:SOAPAutorizzazione>' || 
			             	'<ser:SOAPAutenticazione' || suffisso_autenticazione || '>' || 
			             		'<' || prefisso_username_password || 'username>' || username_in || '</' || prefisso_username_password || 'username>' ||
			             		'<' || prefisso_username_password || 'password>' || password_in || '</' || prefisso_username_password || 'password>' ||
			             		'<ruoloCodice>' || coalesce(ruolo_codice_in,'') || '</ruoloCodice>' ||
			             		'<ruoloValoreCodice>' || coalesce(ruolo_valore_codice_in,'') || '</ruoloValoreCodice>' || 
			             	'</ser:SOAPAutenticazione' || suffisso_autenticazione || '>' || 
			             '</soapenv:Header>' || 
			             '<soapenv:Body>' || 
			             	'<ser:' || nome_servizio_in || '>' ||
			             		coalesce('<'  || nome_oggetto_in || '>', '') || 
			             			campi_envelope_in ||
			             		coalesce('</' || nome_oggetto_in || '>', '') || 
			             	'</ser:' || nome_servizio_in || '>' || 
			             '</soapenv:Body> ' || 
			             '</soapenv:Envelope>'$$;


ALTER FUNCTION public.ws_get_envelope(xmlns_input text, ruolo_in text, username_in text, password_in text, ruolo_codice_in text, ruolo_valore_codice_in text, nome_servizio_in text, nome_oggetto_in text, campi_envelope_in text, suffisso_autenticazione text, prefisso_username_password text) OWNER TO postgres;

--
-- TOC entry 1153 (class 1255 OID 16921)
-- Name: ws_get_servizio_info(integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.ws_get_servizio_info(id_endpoint_in integer, id_azione_in integer) RETURNS SETOF public.ws_servizio_info_object
    LANGUAGE sql
    AS $$select serv.nome as nome_servizio, ogg.nome as nome_oggetto, ogg_campi.campo as nome_campo, ogg_campi.obbligatorio as obbligatorio_campo 
from ws_info_web_service serv_info, ws_servizi serv, ws_oggetto ogg, ws_oggetto_campi ogg_campi
where serv_info.id_endpoint = id_endpoint_in and
      serv_info.id_azione = id_azione_in and
      serv_info.id_servizio = serv.id and
      serv_info.id_oggetto = ogg.id and 
      ogg.id = ogg_campi.id_oggetto$$;


ALTER FUNCTION public.ws_get_servizio_info(id_endpoint_in integer, id_azione_in integer) OWNER TO postgres;

--
-- TOC entry 1154 (class 1255 OID 16922)
-- Name: dbi_get_automezzi_soa(integer); Type: FUNCTION; Schema: public_functions; Owner: postgres
--

CREATE FUNCTION public_functions.dbi_get_automezzi_soa(idrelstab integer) RETURNS TABLE(id integer, targa text)
    LANGUAGE plpgsql STRICT
    AS $$
DECLARE
	r RECORD;
	 	
BEGIN
		FOR id, targa
		in

select sa.id, sa.automezzo_targa
		FROM sintesis_automezzi sa
		join sintesis_relazione_stabilimento_linee_produttive s on s.id= sa.id_sintesis_rel_stab_lp
		left join ml8_linee_attivita_nuove_materializzata l on l.id_nuova_linea_attivita = s.id_linea_produttiva
		where sa.id_sintesis_rel_stab_lp = idrelstab and l.codice_attivita in ('1069-R-37-TRANS','1069-R-38-TRANS', '1069-R-39-TRANS')
		and sa.trashed_date is null and sa.data_dismissione is null	 
		order by sa.automezzo_targa
		
			
    LOOP
        RETURN NEXT;
     END LOOP;
     RETURN;
    
 END;
$$;


ALTER FUNCTION public_functions.dbi_get_automezzi_soa(idrelstab integer) OWNER TO postgres;

--
-- TOC entry 1155 (class 1255 OID 16923)
-- Name: insert_linee_attivita_controlli_ufficiali(integer, integer, character varying, text, integer, integer, integer); Type: FUNCTION; Schema: public_functions; Owner: postgres
--

CREATE FUNCTION public_functions.insert_linee_attivita_controlli_ufficiali(_id_controllo_ufficiale integer, _id_linea_attivita integer, _riferimento_nome_tab character varying, _note text DEFAULT NULL::text, _id_linea_attivita_old integer DEFAULT NULL::integer, _id_vecchio_tipo_operatore integer DEFAULT NULL::integer, user_id integer DEFAULT NULL::integer) RETURNS text
    LANGUAGE plpgsql
    AS $$
  DECLARE
     _codice_linea character varying;
     _provvedimenti_prescrittivi integer;
     _id_lacu integer;
  BEGIN

select provvedimenti_prescrittivi into _provvedimenti_prescrittivi from ticket where ticketid = _id_controllo_ufficiale;
IF _provvedimenti_prescrittivi <> 3 THEN
        update linee_attivita_controlli_ufficiali set note_internal_use_only = concat(note_internal_use_only, current_timestamp, '. Cancellazione record per import controlli ufficiali fatto da utente ', user_id ), modified=current_timestamp, modified_by = user_id,  trashed_date = now() where id_controllo_ufficiale = _id_controllo_ufficiale;
        END IF;
        
	-- recupero codice linea
        _codice_linea := ( select distinct(codice) from (
           select codice from opu_relazione_stabilimento_linee_produttive rel 
           join ml8_linee_attivita_nuove_materializzata ml 
           on ml.id_nuova_linea_attivita = rel.id_linea_produttiva 
           where rel.id = _id_linea_attivita and _riferimento_nome_tab = 'opu_relazione_stabilimento_linee_produttive'
           union
           select distinct codice from org_linee_attivita_view  
	   where (id = _id_linea_attivita and  (_riferimento_nome_tab not in ('opu_relazione_stabilimento_linee_produttive', 'sintesis_relazione_stabilimento_linee_produttive','anagrafica.rel_stabilimenti_linee_attivita' )) and ( _id_vecchio_tipo_operatore is null or tipo = _id_vecchio_tipo_operatore)) or
	   _id_linea_attivita = -1 and tipo = _id_vecchio_tipo_operatore 
	   union
           select codice from suap_ric_scia_linee_attivita_stabilimenti_view where id = _id_linea_attivita and _riferimento_nome_tab = 'suap_ric_scia_relazione_stabilimento_linee_produttive'
           union   
           select codice from sintesis_linee_attivita_stabilimenti_view where id = _id_linea_attivita and _riferimento_nome_tab = 'sintesis_relazione_stabilimento_linee_produttive'
          -- union
          -- select 'OPR-OPR-X' from anagrafica.linee_attivita_stabilimenti_view where id = _id_linea_attivita and _riferimento_nome_tab = 'anagrafica.rel_stabilimenti_linee_attivita'
           ) aa limit 1
	);
select id_controllo_ufficiale into _id_lacu from linee_attivita_controlli_ufficiali where id_controllo_ufficiale = 	_id_controllo_ufficiale and id_linea_attivita = _id_linea_attivita and trashed_date is null;

IF _id_lacu IS NULL or _id_lacu<=0 THEN
insert into linee_attivita_controlli_ufficiali(id_controllo_ufficiale, id_linea_attivita, riferimento_nome_tab, codice_linea, note, id_linea_attivita_old, id_vecchio_tipo_operatore,entered,entered_by,note_internal_use_only)
	values(_id_controllo_ufficiale,_id_linea_attivita,_riferimento_nome_tab, _codice_linea, _note, _id_linea_attivita_old, _id_vecchio_tipo_operatore,current_timestamp,user_id, concat(current_timestamp || ' - Inserito record a seguito di import da parte di utente ' || user_id || '.'));
	END IF;
	
	return 'OK';
  END;
 $$;


ALTER FUNCTION public_functions.insert_linee_attivita_controlli_ufficiali(_id_controllo_ufficiale integer, _id_linea_attivita integer, _riferimento_nome_tab character varying, _note text, _id_linea_attivita_old integer, _id_vecchio_tipo_operatore integer, user_id integer) OWNER TO postgres;

--
-- TOC entry 239 (class 1259 OID 16924)
-- Name: progressivi_comune_provincia; Type: TABLE; Schema: anagrafica; Owner: postgres
--

CREATE TABLE anagrafica.progressivi_comune_provincia (
    progressivo integer,
    cod_comune text,
    cod_provincia text,
    entered timestamp without time zone DEFAULT now()
);


ALTER TABLE anagrafica.progressivi_comune_provincia OWNER TO postgres;

--
-- TOC entry 240 (class 1259 OID 16930)
-- Name: richieste_registrazioni_id_seq; Type: SEQUENCE; Schema: gucl; Owner: postgres
--

CREATE SEQUENCE gucl.richieste_registrazioni_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2000000
    CACHE 1;


ALTER TABLE gucl.richieste_registrazioni_id_seq OWNER TO postgres;

--
-- TOC entry 241 (class 1259 OID 16931)
-- Name: richieste_registrazioni; Type: TABLE; Schema: gucl; Owner: postgres
--

CREATE TABLE gucl.richieste_registrazioni (
    id integer DEFAULT nextval('gucl.richieste_registrazioni_id_seq'::regclass) NOT NULL,
    nome_autorizzante character varying NOT NULL,
    cognome_autorizzante character varying NOT NULL,
    cf_autorizzante character varying NOT NULL,
    email_autorizzante character varying NOT NULL,
    nome_richiedente character varying NOT NULL,
    cognome_richiedente character varying NOT NULL,
    cf_richiedente character varying NOT NULL,
    email_richiedente character varying NOT NULL,
    tel_richiedente character varying,
    nome_intestatario character varying NOT NULL,
    cognome_intestatario character varying NOT NULL,
    cf_intestatario character varying NOT NULL,
    email_intestatario character varying NOT NULL,
    tel_intestatario character varying,
    data_richiesta timestamp without time zone NOT NULL,
    entered_by integer,
    trashed_date timestamp without time zone,
    stato character varying,
    note text,
    struttura_di_appartenenza character varying,
    ruolo_struttura character varying,
    pec_struttura character varying,
    asl_id integer,
    role_id integer,
    data_elaborazione timestamp without time zone
);


ALTER TABLE gucl.richieste_registrazioni OWNER TO postgres;

--
-- TOC entry 242 (class 1259 OID 16937)
-- Name: associazione_preaccettazione_entita; Type: TABLE; Schema: preaccettazione; Owner: postgres
--

CREATE TABLE preaccettazione.associazione_preaccettazione_entita (
    id integer NOT NULL,
    id_stati integer NOT NULL,
    tipo_entita character varying,
    riferimento_entita character varying,
    lda_riferimento_id integer,
    lda_riferimento_id_nome text,
    lda_riferimento_id_nome_tab text,
    lda_id_linea integer,
    tipologia_operatore integer,
    entered timestamp without time zone,
    enteredby integer,
    modified timestamp without time zone,
    modifiedby integer,
    trashed_date timestamp without time zone,
    trashedby integer,
    note_hd text
);


ALTER TABLE preaccettazione.associazione_preaccettazione_entita OWNER TO postgres;

--
-- TOC entry 243 (class 1259 OID 16942)
-- Name: associazione_preaccettazione_entita_id_seq; Type: SEQUENCE; Schema: preaccettazione; Owner: postgres
--

CREATE SEQUENCE preaccettazione.associazione_preaccettazione_entita_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE preaccettazione.associazione_preaccettazione_entita_id_seq OWNER TO postgres;

--
-- TOC entry 7440 (class 0 OID 0)
-- Dependencies: 243
-- Name: associazione_preaccettazione_entita_id_seq; Type: SEQUENCE OWNED BY; Schema: preaccettazione; Owner: postgres
--

ALTER SEQUENCE preaccettazione.associazione_preaccettazione_entita_id_seq OWNED BY preaccettazione.associazione_preaccettazione_entita.id;


--
-- TOC entry 244 (class 1259 OID 16943)
-- Name: codici_preaccettazione; Type: TABLE; Schema: preaccettazione; Owner: postgres
--

CREATE TABLE preaccettazione.codici_preaccettazione (
    id integer NOT NULL,
    prefix character varying(3),
    anno character varying(4),
    progres character varying(6),
    entered timestamp without time zone,
    enteredby integer,
    trashed_date timestamp without time zone,
    trashedby integer,
    quesito_diagnostico text,
    matrice_campione text,
    id_quesito integer,
    id_matrice integer,
    id_ente integer,
    id_laboratorio integer
);


ALTER TABLE preaccettazione.codici_preaccettazione OWNER TO postgres;

--
-- TOC entry 245 (class 1259 OID 16948)
-- Name: codici_preaccettazione_id_seq; Type: SEQUENCE; Schema: preaccettazione; Owner: postgres
--

CREATE SEQUENCE preaccettazione.codici_preaccettazione_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE preaccettazione.codici_preaccettazione_id_seq OWNER TO postgres;

--
-- TOC entry 7442 (class 0 OID 0)
-- Dependencies: 245
-- Name: codici_preaccettazione_id_seq; Type: SEQUENCE OWNED BY; Schema: preaccettazione; Owner: postgres
--

ALTER SEQUENCE preaccettazione.codici_preaccettazione_id_seq OWNED BY preaccettazione.codici_preaccettazione.id;


--
-- TOC entry 246 (class 1259 OID 16949)
-- Name: lookup_ente; Type: TABLE; Schema: preaccettazione; Owner: postgres
--

CREATE TABLE preaccettazione.lookup_ente (
    code integer NOT NULL,
    description character varying,
    short_description character varying,
    enabled boolean
);


ALTER TABLE preaccettazione.lookup_ente OWNER TO postgres;

--
-- TOC entry 247 (class 1259 OID 16954)
-- Name: lookup_stati_pa; Type: TABLE; Schema: preaccettazione; Owner: postgres
--

CREATE TABLE preaccettazione.lookup_stati_pa (
    id integer NOT NULL,
    descrizione text
);


ALTER TABLE preaccettazione.lookup_stati_pa OWNER TO postgres;

--
-- TOC entry 248 (class 1259 OID 16959)
-- Name: stati_preaccettazione; Type: TABLE; Schema: preaccettazione; Owner: postgres
--

CREATE TABLE preaccettazione.stati_preaccettazione (
    id integer NOT NULL,
    id_preaccettazione integer NOT NULL,
    id_stato integer NOT NULL,
    entered timestamp without time zone,
    enteredby integer,
    modified timestamp without time zone,
    modifiedby integer,
    trashed_date timestamp without time zone,
    trashedby integer,
    note_hd text,
    letto timestamp without time zone,
    ip_lettura text,
    ip_chiamante text,
    user_agent_chiamante text
);


ALTER TABLE preaccettazione.stati_preaccettazione OWNER TO postgres;

--
-- TOC entry 249 (class 1259 OID 16964)
-- Name: stati_preaccettazione_id_seq; Type: SEQUENCE; Schema: preaccettazione; Owner: postgres
--

CREATE SEQUENCE preaccettazione.stati_preaccettazione_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE preaccettazione.stati_preaccettazione_id_seq OWNER TO postgres;

--
-- TOC entry 7446 (class 0 OID 0)
-- Dependencies: 249
-- Name: stati_preaccettazione_id_seq; Type: SEQUENCE OWNED BY; Schema: preaccettazione; Owner: postgres
--

ALTER SEQUENCE preaccettazione.stati_preaccettazione_id_seq OWNED BY preaccettazione.stati_preaccettazione.id;


--
-- TOC entry 250 (class 1259 OID 16965)
-- Name: ticket; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ticket (
    ticketid integer NOT NULL,
    org_id integer,
    contact_id integer,
    problem text NOT NULL,
    entered timestamp(3) without time zone DEFAULT now() NOT NULL,
    enteredby integer NOT NULL,
    modified timestamp(3) without time zone DEFAULT now() NOT NULL,
    modifiedby integer NOT NULL,
    closed timestamp without time zone,
    pri_code integer,
    level_code integer,
    department_code integer,
    source_code integer,
    cat_code integer,
    subcat_code1 integer,
    subcat_code2 integer,
    subcat_code3 integer,
    assigned_to integer,
    comment text,
    solution text,
    scode integer,
    critical timestamp without time zone,
    notified timestamp without time zone,
    custom_data text,
    location character varying(256),
    assigned_date timestamp(3) without time zone,
    est_resolution_date timestamp(3) without time zone,
    resolution_date timestamp(3) without time zone,
    cause text,
    link_contract_id integer,
    link_asset_id integer,
    product_id integer,
    customer_product_id integer,
    expectation integer,
    key_count integer,
    est_resolution_date_timezone character varying(255),
    assigned_date_timezone character varying(255),
    resolution_date_timezone character varying(255),
    status_id integer,
    trashed_date timestamp(3) without time zone,
    user_group_id integer,
    cause_id integer,
    resolution_id integer,
    defect_id integer,
    escalation_level integer,
    resolvable boolean DEFAULT true,
    resolvedby integer,
    resolvedby_department_code integer,
    state_id integer,
    site_id integer,
    tipo_richiesta character varying(60),
    tipologia integer,
    provvedimenti_prescrittivi integer,
    sanzioni_amministrative integer,
    sanzioni_penali integer,
    sequestri integer,
    descrizione1 character varying(200),
    descrizione2 character varying(200),
    descrizione3 character varying(200),
    data_accettazione timestamp(3) without time zone,
    data_accettazione_timezone character varying(255),
    alimenti_origine_animale boolean,
    alimenti_origine_vegetale boolean,
    alimenti_composti boolean,
    alimenti_origine_animale_non_trasformati integer,
    alimenti_origine_animale_trasformati integer,
    alimenti_origine_vegetale_valori integer,
    alimenti_origine_animale_non_trasformati_valori integer,
    allerta boolean,
    non_conformita boolean,
    conseguenze_positivita integer,
    responsabilita_positivita integer,
    note_esito character varying(200),
    nucleo_ispettivo integer,
    nucleo_ispettivo_due integer,
    nucleo_ispettivo_tre integer,
    componente_nucleo text,
    componente_nucleo_due text,
    componente_nucleo_tre text,
    tipo_sequestro boolean,
    tipo_sequestro_due boolean,
    tipo_sequestro_tre boolean,
    tipo_sequestro_quattro boolean,
    testo_alimento_composto text,
    nucleo_ispettivo_quattro integer,
    nucleo_ispettivo_cinque integer,
    nucleo_ispettivo_sei integer,
    nucleo_ispettivo_sette integer,
    nucleo_ispettivo_otto integer,
    nucleo_ispettivo_nove integer,
    nucleo_ispettivo_dieci integer,
    componente_nucleo_quattro text,
    componente_nucleo_cinque text,
    componente_nucleo_sei text,
    componente_nucleo_sette text,
    componente_nucleo_otto text,
    componente_nucleo_nove text,
    componente_nucleo_dieci text,
    data_apertura timestamp without time zone,
    data_eventuale_revoca timestamp without time zone,
    data_chiusura timestamp without time zone,
    progressivo_allerta integer,
    tipo_alimento integer,
    origine integer,
    alimento_interessato integer,
    non_conformita_alimento integer,
    altre_irregolarita integer,
    inserisci_continua boolean,
    id_controllo_ufficiale character varying,
    identificativo character varying,
    punteggio integer,
    nonconformitaformali text,
    nonconformitagravi text,
    nonconformitasignificative text,
    puntigravi text,
    puntisignificativi text,
    puntiformali text,
    data_fine_controllo timestamp(3) without time zone,
    codice_articolo integer,
    notesequestro text,
    trasgressore text,
    obbligatoinsolido text,
    pagamento double precision,
    esito text,
    segnalazione boolean,
    follow_up text,
    sequestrodi integer,
    id_allerta character varying,
    codice_allerta text,
    descrizioneesitosequestro text,
    normaviolata text,
    obbligatoinsolido3 text,
    obbligatoinsolido2 text,
    followupdate timestamp with time zone,
    quantita double precision,
    ncrilevate boolean,
    followupdate_timezone text,
    identificativonc text,
    specie_uova integer,
    id_nonconformita integer,
    specie_latte integer,
    contributi double precision,
    lista_commercializzazione integer,
    notesequestridi text,
    note_analisi text,
    tipo_acqua integer,
    alimenti_acqua boolean,
    alimenti_bevande boolean,
    alimenti_additivi boolean,
    alimenti_materiali_alimenti boolean,
    alimenti_dolciumi boolean,
    alimenti_gelati boolean,
    isvegetaletrasformato integer,
    altrialimentinonanimali integer,
    altrialimenti_nonanimali boolean,
    descrizione text,
    luogocontrollo text,
    animali integer,
    mezziispezionati integer,
    numeromezzi integer,
    tipoispezione integer,
    articoloviolato text,
    sanzione text,
    illecitopenalereati boolean,
    sequestrotrasporti boolean,
    notefollowup text,
    esito_sequestri integer,
    specietrasportata integer,
    animalitrasportati integer,
    descrizionebreveallerta text,
    origine_allerta integer,
    descrizioneanimali text,
    isaggiornata_categoria boolean,
    id_macchinetta integer,
    note_altro text,
    followup boolean,
    motivazione text,
    note_motivazione text,
    ragionesocialevoltura text,
    denonimazionevoltura text,
    fax text,
    telefono_rappresentante text,
    chiusura_ufficio boolean,
    ispregresso text,
    data_apertura_timezone character varying(255),
    partitavoltura text,
    latitudine double precision,
    longitudine double precision,
    data_prossimo_controllo timestamp(3) without time zone,
    alimenti_mangimi boolean,
    specie_alimento_zootecnico integer,
    tipologia_alimento_zootecnico integer,
    prossimo_controllo timestamp without time zone,
    categoria_rischio integer,
    stato_esito_camp_tamp integer,
    distribuzione_partita integer,
    destinazione_distribuzione integer,
    comunicazione_rischio boolean,
    note_rischio text,
    procedura_richiamo integer,
    esito_controllo integer,
    data_ddt timestamp without time zone,
    num_ddt text,
    quantita_partita text,
    quantita_partita_bloccata text,
    id_file_allegato integer,
    articolo_azioni integer,
    unita_misura integer,
    unita_misura_text text,
    codiceateco text,
    txt_desc_non_accettato text,
    id_farmacia integer,
    descrizione_codice text,
    ip_entered text,
    ip_modified text,
    alimenti_sospetti text,
    ispezioni_desc1 text,
    ispezioni_desc2 text,
    ispezioni_desc3 text,
    ispezioni_desc4 text,
    ispezioni_desc5 text,
    ispezioni_desc6 text,
    ispezioni_desc7 text,
    esito_declassamento text,
    declassamento integer,
    ricoverati text,
    soggetti_coinvolti text,
    data_pasto timestamp without time zone,
    data_sintomi timestamp without time zone,
    data_pasto_timezone text,
    data_sintomi_timezone text,
    azione_followup_descrizione text,
    azione_followup boolean,
    id_concessionario integer,
    denominazione_prodotto text,
    numero_lotto text,
    fabbricante_produttore text,
    data_scadenza_allerta timestamp without time zone,
    flag_mod5 text,
    nc_formali_valutazione text,
    nc_significative_valutazione text,
    city_legale_rapp text,
    address_legale_rapp text,
    prov_legale_rapp text,
    sanzione_campioni text,
    tipo_nc integer,
    motivo_cancellazione_allerta text,
    id_imprese_linee_attivita integer,
    operazione text,
    motivo_chiusura text,
    flag_ripianificazione boolean,
    tipo_controllo text,
    asl_old integer,
    tipo_matrici_canili integer,
    check_matrici_canili boolean,
    chiusura_attesa_esito boolean DEFAULT false,
    data_chiusura_attesa_esito timestamp without time zone,
    microchip character varying(15),
    nome_conducente text,
    cognome_conducente text,
    documento_conducente text,
    tipologia_controllo_cani integer,
    motivo_intervento_hd text,
    data_intervento_hd timestamp without time zone,
    operatore_hd text,
    tipo_intervento_hd text,
    ispezioni_desc8 text,
    ispezione_altro text,
    codice_azienda text,
    id_allevamento integer,
    data_nascita_conducente text,
    luogo_nascita_conducente text,
    citta_conducente text,
    via_conducente text,
    prov_conducente text,
    via_connducente text,
    cap_conducente text,
    ragione_sociale_allevamento text,
    num_specie1 integer,
    num_specie2 integer,
    num_specie3 integer,
    num_specie4 integer,
    num_specie5 integer,
    num_specie6 integer,
    num_specie7 integer,
    num_specie8 integer,
    num_specie9 integer,
    num_specie10 integer,
    num_specie11 integer,
    num_specie12 integer,
    num_specie13 integer,
    num_specie14 integer,
    num_specie15 integer,
    animali_non_alimentari_flag boolean,
    animali_non_alimentare integer,
    flag_sorveglianza boolean,
    data_preavviso timestamp without time zone,
    data_comunicazione_svincolo timestamp without time zone,
    protocollo_preavviso text,
    protocollo_svincolo text,
    tipologia_sottoprodotto text,
    peso double precision,
    motivazione_campione integer,
    motivazione_piano_campione integer,
    contributi_campioni_tamponi double precision,
    contributi_allarme_rapido double precision,
    contributi_verifica_risoluzione_nc double precision,
    contributi_macellazione double precision,
    contributi_rilascio_certificazione double precision,
    parent_ticket_id integer DEFAULT '-1'::integer,
    contributi_importazione_scambio double precision,
    contributi_risol_nc double precision,
    intera_asl boolean,
    contributi_macellazione_urgenza double precision,
    flag_pubblicazione_allerte boolean,
    data_fine_pubblicazione_allerte timestamp without time zone,
    data_inizio_pubblicazione_allerte timestamp without time zone,
    tipo_rischio_allerte text,
    provvedimenti_esito_allerte text,
    stato_voltura integer,
    id_matrice integer,
    cammino text,
    box text,
    trasgressore2 text,
    trasgressore3 text,
    data_estrazione timestamp without time zone,
    data_import timestamp without time zone,
    descrizione_errore text,
    esito_import text,
    id_bdn integer,
    tipologiasequestro integer,
    nc_gravi_valutazione text,
    quantitativo integer,
    quintali double precision,
    supervisionato_da integer,
    supervisionato_in_data timestamp without time zone,
    tipo_sospetto text,
    codice_buffer text,
    supervisione_flag_congruo boolean,
    supervisione_note text,
    componentenucleoid_uno integer,
    componentenucleoid_due integer,
    componentenucleoid_tre integer,
    componentenucleoid_quattro integer,
    componentenucleoid_cinque integer,
    componentenucleoid_sei integer,
    componentenucleoid_sette integer,
    componentenucleoid_otto integer,
    componentenucleoid_nove integer,
    componentenucleoid_dieci integer,
    check_specie_mangimi boolean,
    check_circuito_ogm text,
    gestione_esito_campione_pregresso boolean,
    id_stabilimento integer,
    id_soggetto_fisico_operatore_storico integer,
    id_soggetto_fisico_stabilimento_storico integer,
    flag_tipo_allerta boolean,
    header_allegato_documentale text,
    flag_preavviso text,
    data_preavviso_ba timestamp without time zone,
    closed_nolista boolean,
    flag_checklist character varying(5),
    esito_import_b11 text,
    data_import_b11 timestamp without time zone,
    descrizione_errore_b11 text,
    id_bdn_b11 integer,
    data_estrazione_b11 timestamp without time zone,
    location_new text,
    num_specie22 integer,
    num_specie23 integer,
    num_specie24 integer,
    num_specie25 integer,
    num_specie26 integer,
    note_esito_esame text,
    data_risultato timestamp without time zone,
    esito_campione_chiuso boolean,
    esito_informazioni_laboratorio_chiuso boolean,
    id_apiario integer,
    id_impresa_sanzionata integer,
    tipologia_impresa_sanzionata integer,
    ragione_sociale_impresa_sanzionata text,
    verbale_sequestro text,
    sequestro_riduzione integer,
    id_ldd integer,
    procedura_ritiro integer,
    motivo_procedura_richiamo text,
    allerta_notes text,
    fuori_regione_impresa_sanzionata boolean,
    id_stabilimento_old integer,
    note text,
    id_targa integer,
    alt_id integer,
    note_internal_use_only text,
    data_spostamento timestamp without time zone,
    riferimento_id_anagrafica_old integer,
    riferimenti_id_anagrafica_nome_old text,
    spostati_da integer,
    flag_posticipato boolean,
    flag_campione_non_conforme boolean,
    tipo_notifica_allerta integer,
    numero_notifica_allerta text,
    luogo_controllato_targa text,
    comune_controllato text,
    org_id_old integer,
    note_operatore_mercato_ittico text,
    checklist_macelli text,
    livello_rischio integer,
    partita_iva_vecchia text,
    num_documento_accompagnamento text,
    id_targa_old text,
    id_indirizzo_luogo_controllo integer,
    apiari_selezionati text,
    apiari_selezionati_motivo text,
    apiari_selezionati_motivo_altro text,
    apiari_selezionati_alveari_controllati integer,
    apiari_selezionati_esito text,
    apiari_selezionati_esito_note text
);


ALTER TABLE public.ticket OWNER TO postgres;

--
-- TOC entry 251 (class 1259 OID 16975)
-- Name: vw_ticket_cmp; Type: VIEW; Schema: preaccettazione; Owner: postgres
--

CREATE VIEW preaccettazione.vw_ticket_cmp AS
 SELECT ticket.ticketid,
    ticket.id_controllo_ufficiale,
    ticket.org_id,
    ticket.id_stabilimento,
    ticket.id_apiario,
    ticket.alt_id,
    ticket.entered,
    ticket.assigned_date,
    ticket.trashed_date,
    ticket.categoria_rischio,
    ticket.tipologia,
    ticket.provvedimenti_prescrittivi,
    ticket.motivazione_campione,
    ticket.motivazione_piano_campione
   FROM public.ticket
  WHERE ((ticket.tipologia = 2) AND (ticket.trashed_date IS NULL));


ALTER TABLE preaccettazione.vw_ticket_cmp OWNER TO postgres;

--
-- TOC entry 252 (class 1259 OID 16980)
-- Name: vw_ticket_controllo_sorveglianza; Type: VIEW; Schema: preaccettazione; Owner: postgres
--

CREATE VIEW preaccettazione.vw_ticket_controllo_sorveglianza AS
 SELECT ticket.ticketid,
    ticket.id_controllo_ufficiale,
    ticket.org_id,
    ticket.id_stabilimento,
    ticket.id_apiario,
    ticket.alt_id,
    ticket.entered,
    ticket.assigned_date,
    ticket.trashed_date,
    ticket.categoria_rischio,
    ticket.tipologia,
    ticket.provvedimenti_prescrittivi
   FROM public.ticket
  WHERE ((ticket.tipologia = 3) AND (ticket.provvedimenti_prescrittivi = 5) AND (ticket.trashed_date IS NULL));


ALTER TABLE preaccettazione.vw_ticket_controllo_sorveglianza OWNER TO postgres;

--
-- TOC entry 253 (class 1259 OID 16985)
-- Name: vw_ticket_cu; Type: VIEW; Schema: preaccettazione; Owner: postgres
--

CREATE VIEW preaccettazione.vw_ticket_cu AS
 SELECT ticket.ticketid,
    ticket.id_controllo_ufficiale,
    ticket.org_id,
    ticket.id_stabilimento,
    ticket.id_apiario,
    ticket.alt_id,
    ticket.entered,
    ticket.assigned_date,
    ticket.trashed_date,
    ticket.categoria_rischio,
    ticket.tipologia,
    ticket.provvedimenti_prescrittivi
   FROM public.ticket
  WHERE ((ticket.tipologia = 3) AND (ticket.trashed_date IS NULL));


ALTER TABLE preaccettazione.vw_ticket_cu OWNER TO postgres;

--
-- TOC entry 254 (class 1259 OID 16990)
-- Name: vw_ticket_cu_ispezione_semplice; Type: VIEW; Schema: preaccettazione; Owner: postgres
--

CREATE VIEW preaccettazione.vw_ticket_cu_ispezione_semplice AS
 SELECT ticket.ticketid,
    ticket.id_controllo_ufficiale,
    ticket.org_id,
    ticket.id_stabilimento,
    ticket.id_apiario,
    ticket.alt_id,
    ticket.entered,
    ticket.assigned_date,
    ticket.trashed_date,
    ticket.categoria_rischio,
    ticket.tipologia,
    ticket.provvedimenti_prescrittivi
   FROM public.ticket
  WHERE ((ticket.tipologia = 3) AND (ticket.provvedimenti_prescrittivi = 4) AND (ticket.trashed_date IS NULL));


ALTER TABLE preaccettazione.vw_ticket_cu_ispezione_semplice OWNER TO postgres;

--
-- TOC entry 255 (class 1259 OID 16995)
-- Name: vw_ticket_senza_controllo_sorveglianza; Type: VIEW; Schema: preaccettazione; Owner: postgres
--

CREATE VIEW preaccettazione.vw_ticket_senza_controllo_sorveglianza AS
 SELECT ticket.ticketid,
    ticket.id_controllo_ufficiale,
    ticket.org_id,
    ticket.id_stabilimento,
    ticket.id_apiario,
    ticket.alt_id,
    ticket.entered,
    ticket.assigned_date,
    ticket.trashed_date,
    ticket.categoria_rischio,
    ticket.tipologia,
    ticket.provvedimenti_prescrittivi
   FROM public.ticket
  WHERE ((ticket.tipologia = 3) AND (ticket.provvedimenti_prescrittivi <> 5) AND (ticket.trashed_date IS NULL));


ALTER TABLE preaccettazione.vw_ticket_senza_controllo_sorveglianza OWNER TO postgres;

--
-- TOC entry 256 (class 1259 OID 17000)
-- Name: vw_ultimo_stato; Type: VIEW; Schema: preaccettazione; Owner: postgres
--

CREATE VIEW preaccettazione.vw_ultimo_stato AS
 SELECT DISTINCT ON (c.id) s.id AS cod_stato,
    s.id_preaccettazione,
    s.enteredby,
    s.entered,
    c.prefix,
    c.anno,
    c.progres,
    c.id_ente,
    c.id_laboratorio,
    s.id_stato,
    a.riferimento_entita,
    a.tipo_entita,
    a.lda_riferimento_id,
    a.lda_riferimento_id_nome,
    a.lda_riferimento_id_nome_tab,
    a.lda_id_linea,
    a.tipologia_operatore
   FROM ((preaccettazione.stati_preaccettazione s
     LEFT JOIN preaccettazione.codici_preaccettazione c ON ((s.id_preaccettazione = c.id)))
     LEFT JOIN preaccettazione.associazione_preaccettazione_entita a ON ((a.id_stati = s.id)))
  WHERE (s.trashed_date IS NULL)
  ORDER BY c.id, s.entered DESC;


ALTER TABLE preaccettazione.vw_ultimo_stato OWNER TO postgres;

--
-- TOC entry 257 (class 1259 OID 17005)
-- Name: import_aia; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.import_aia (
    id_aia text,
    ragione_sociale text,
    codice_fiscale text,
    comune text,
    pr text,
    indirizzo text,
    coordinate_geografiche_x text,
    coordinate_geografiche_y text,
    denominazione_categoria_impianto text,
    codice_ipcc_principale text,
    codice_ipcc_secondaria text,
    descrizione_att_principale text,
    descrizione_att_secondaria text,
    autorizzazione text,
    num_decreto_dirigenziale text,
    data_decreto_dirigenziale text,
    nota_su_decreto text,
    burc text,
    note text,
    id integer NOT NULL
);


ALTER TABLE public.import_aia OWNER TO postgres;

--
-- TOC entry 258 (class 1259 OID 17010)
-- Name: import_aia_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.import_aia_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.import_aia_id_seq OWNER TO postgres;

--
-- TOC entry 7453 (class 0 OID 0)
-- Dependencies: 258
-- Name: import_aia_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.import_aia_id_seq OWNED BY public.import_aia.id;


--
-- TOC entry 259 (class 1259 OID 17011)
-- Name: OBSimport_aia; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."OBSimport_aia" (
    id_aia text,
    ragione_sociale text,
    codice_fiscale text,
    comune text,
    pr text,
    indirizzo text,
    coordinate_geografiche_x text,
    coordinate_geografiche_y text,
    denominazione_categoria_impianto text,
    codice_ipcc_principale text,
    codice_ipcc_secondaria text,
    descrizione_att_principale text,
    descrizione_att_secondaria text,
    autorizzazione text,
    note text,
    id integer DEFAULT nextval('public.import_aia_id_seq'::regclass) NOT NULL
);


ALTER TABLE public."OBSimport_aia" OWNER TO postgres;

--
-- TOC entry 260 (class 1259 OID 17017)
-- Name: _stato; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public._stato (
    id_stato integer
);


ALTER TABLE public._stato OWNER TO postgres;

--
-- TOC entry 261 (class 1259 OID 17020)
-- Name: access_; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.access_ (
    user_id integer NOT NULL,
    username character varying(80) NOT NULL,
    password character varying(80),
    contact_id integer DEFAULT '-1'::integer,
    role_id integer DEFAULT '-1'::integer,
    manager_id integer DEFAULT '-1'::integer,
    startofday integer DEFAULT 8,
    endofday integer DEFAULT 18,
    locale character varying(255),
    timezone character varying(255) DEFAULT 'America/New_York'::character varying,
    last_ip character varying(15),
    last_login timestamp(3) without time zone DEFAULT now() NOT NULL,
    enteredby integer NOT NULL,
    entered timestamp(3) without time zone DEFAULT now() NOT NULL,
    modifiedby integer NOT NULL,
    modified timestamp(3) without time zone DEFAULT now() NOT NULL,
    expires timestamp(3) without time zone,
    alias integer DEFAULT '-1'::integer,
    assistant integer DEFAULT '-1'::integer,
    enabled boolean DEFAULT true NOT NULL,
    currency character varying(5),
    language character varying(20),
    webdav_password character varying(80),
    hidden boolean DEFAULT false,
    site_id integer,
    allow_webdav_access boolean DEFAULT true NOT NULL,
    allow_httpapi_access boolean DEFAULT true NOT NULL,
    role_id_old text,
    roleid_old integer,
    last_interaction_time timestamp(3) without time zone DEFAULT now() NOT NULL,
    action character varying(255),
    command character varying(255),
    object_id integer,
    table_name character varying(255),
    asl_old integer,
    access_position_lat double precision,
    access_position_lon double precision,
    access_position_err text,
    trashed_date timestamp without time zone,
    in_dpat boolean DEFAULT false,
    in_nucleo_ispettivo boolean DEFAULT true,
    in_access boolean DEFAULT true,
    codice_suap text,
    data_scadenza date,
    note_hd text,
    cessato boolean DEFAULT false,
    pec_suap text,
    callback_suap text,
    id_struttura_asl_complessa integer,
    callback_suap_ko text
);


ALTER TABLE public.access_ OWNER TO postgres;

--
-- TOC entry 262 (class 1259 OID 17045)
-- Name: access; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.access AS
 SELECT DISTINCT ON (a.username) a.username AS username_,
    a.user_id,
    a.username,
    a.password,
    a.contact_id,
    a.role_id,
    a.manager_id,
    a.startofday,
    a.endofday,
    a.locale,
    a.timezone,
    a.last_ip,
    a.last_login,
    a.enteredby,
    a.entered,
    a.modifiedby,
    a.modified,
    a.expires,
    a.alias,
    a.assistant,
    a.enabled,
    a.currency,
    a.language,
    a.webdav_password,
    a.hidden,
    a.site_id,
    a.allow_webdav_access,
    a.allow_httpapi_access,
    a.role_id_old,
    a.roleid_old,
    a.last_interaction_time,
    a.action,
    a.command,
    a.object_id,
    a.table_name,
    a.asl_old,
    a.access_position_lat,
    a.access_position_lon,
    a.access_position_err,
    a.trashed_date,
    a.in_dpat,
    a.in_nucleo_ispettivo,
    a.in_access,
    a.codice_suap,
    a.note_hd,
    a.data_scadenza,
    a.pec_suap,
    a.callback_suap,
    a.id_struttura_asl_complessa,
    a.callback_suap_ko
   FROM ( SELECT access_.user_id,
            access_.username,
            access_.password,
            access_.contact_id,
            access_.role_id,
            access_.manager_id,
            access_.startofday,
            access_.endofday,
            access_.locale,
            access_.timezone,
            access_.last_ip,
            access_.last_login,
            access_.enteredby,
            access_.entered,
            access_.modifiedby,
            access_.modified,
            access_.expires,
            access_.alias,
            access_.assistant,
            access_.enabled,
            access_.currency,
            access_.language,
            access_.webdav_password,
            access_.hidden,
            access_.site_id,
            access_.allow_webdav_access,
            access_.allow_httpapi_access,
            access_.role_id_old,
            access_.roleid_old,
            access_.last_interaction_time,
            access_.action,
            access_.command,
            access_.object_id,
            access_.table_name,
            access_.asl_old,
            access_.access_position_lat,
            access_.access_position_lon,
            access_.access_position_err,
            access_.trashed_date,
            access_.in_dpat,
            access_.in_nucleo_ispettivo,
            access_.in_access,
            access_.codice_suap,
            access_.note_hd,
            access_.data_scadenza,
            access_.pec_suap,
            access_.callback_suap,
            access_.id_struttura_asl_complessa,
            access_.callback_suap_ko
           FROM public.access_
          WHERE ((access_.trashed_date IS NULL) AND access_.enabled AND ((access_.data_scadenza > ('now'::text)::date) OR (access_.data_scadenza IS NULL)))) a
  ORDER BY a.username, a.data_scadenza;


ALTER TABLE public.access OWNER TO postgres;

--
-- TOC entry 263 (class 1259 OID 17050)
-- Name: access_dati; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.access_dati (
    user_dati_id integer NOT NULL,
    user_id integer,
    site_id integer,
    visibilita_delega text,
    num_registrazione_stab text,
    comune_apicoltore integer,
    comune_trasportatore integer,
    indirizzo_trasportatore text,
    indirizzo_apicoltore text,
    cap_trasportatore text,
    cap_apicoltore text,
    tipo_attivita_apicoltore text
);


ALTER TABLE public.access_dati OWNER TO postgres;

--
-- TOC entry 264 (class 1259 OID 17055)
-- Name: access_dati_user_dati_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.access_dati_user_dati_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.access_dati_user_dati_id_seq OWNER TO postgres;

--
-- TOC entry 7454 (class 0 OID 0)
-- Dependencies: 264
-- Name: access_dati_user_dati_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.access_dati_user_dati_id_seq OWNED BY public.access_dati.user_dati_id;


--
-- TOC entry 265 (class 1259 OID 17056)
-- Name: access_ext_; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.access_ext_ (
    user_id integer NOT NULL,
    username character varying(80) NOT NULL,
    password character varying(80),
    contact_id integer DEFAULT '-1'::integer,
    role_id integer DEFAULT '-1'::integer,
    manager_id integer DEFAULT '-1'::integer,
    startofday integer DEFAULT 8,
    endofday integer DEFAULT 18,
    locale character varying(255),
    timezone character varying(255) DEFAULT 'America/New_York'::character varying,
    last_ip character varying(30),
    last_login timestamp(3) without time zone DEFAULT now() NOT NULL,
    enteredby integer NOT NULL,
    entered timestamp(3) without time zone DEFAULT now() NOT NULL,
    modifiedby integer NOT NULL,
    modified timestamp(3) without time zone DEFAULT now() NOT NULL,
    expires timestamp(3) without time zone DEFAULT NULL::timestamp without time zone,
    alias integer DEFAULT '-1'::integer,
    assistant integer DEFAULT '-1'::integer,
    enabled boolean DEFAULT true NOT NULL,
    currency character varying(5),
    language character varying(20),
    webdav_password character varying(80),
    hidden boolean DEFAULT false,
    site_id integer,
    allow_webdav_access boolean DEFAULT true NOT NULL,
    allow_httpapi_access boolean DEFAULT true NOT NULL,
    temp_password character varying(80),
    temp_webdav_password character varying(80),
    id_linea_produttiva_riferimento integer,
    id_importatore integer,
    comune integer,
    provincia character varying(100),
    access_position_lat double precision,
    access_position_lon double precision,
    access_position_err text,
    trashed_date timestamp without time zone,
    last_interaction_time timestamp(3) without time zone,
    action character varying(255),
    command character varying(255),
    object_id integer,
    table_name character varying(255),
    in_access boolean DEFAULT true,
    in_dpat boolean DEFAULT false,
    in_nucleo_ispettivo boolean DEFAULT true,
    codice_suap text,
    data_scadenza date,
    cessato boolean,
    istat_comune text,
    ip_address_suap text,
    pec_suap text,
    callback_suap text,
    id_struttura_asl_complessa integer,
    telefono_suap text,
    livello_accreditamento integer,
    firma_digitale_obbligatoria boolean,
    callback_suap_ko text,
    note_hd text
);


ALTER TABLE public.access_ext_ OWNER TO postgres;

--
-- TOC entry 266 (class 1259 OID 17080)
-- Name: access_ext; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.access_ext AS
 SELECT DISTINCT ON (a.username) a.username AS username_,
    a.user_id,
    a.username,
    a.password,
    a.contact_id,
    a.role_id,
    a.manager_id,
    a.startofday,
    a.endofday,
    a.locale,
    a.timezone,
    a.last_ip,
    a.last_login,
    a.enteredby,
    a.entered,
    a.modifiedby,
    a.modified,
    a.expires,
    a.alias,
    a.assistant,
    a.enabled,
    a.currency,
    a.language,
    a.webdav_password,
    a.hidden,
    a.site_id,
    a.allow_webdav_access,
    a.allow_httpapi_access,
    a.last_interaction_time,
    a.action,
    a.command,
    a.object_id,
    a.table_name,
    a.access_position_lat,
    a.access_position_lon,
    a.access_position_err,
    a.trashed_date,
    a.in_dpat,
    a.in_nucleo_ispettivo,
    a.in_access,
    a.codice_suap,
    a.data_scadenza,
    a.istat_comune,
    a.ip_address_suap,
    a.pec_suap,
    a.callback_suap,
    a.id_struttura_asl_complessa,
    a.callback_suap_ko
   FROM ( SELECT access_ext_.user_id,
            access_ext_.username,
            access_ext_.password,
            access_ext_.contact_id,
            access_ext_.role_id,
            access_ext_.manager_id,
            access_ext_.startofday,
            access_ext_.endofday,
            access_ext_.locale,
            access_ext_.timezone,
            access_ext_.last_ip,
            access_ext_.last_login,
            access_ext_.enteredby,
            access_ext_.entered,
            access_ext_.modifiedby,
            access_ext_.modified,
            access_ext_.expires,
            access_ext_.alias,
            access_ext_.assistant,
            access_ext_.enabled,
            access_ext_.currency,
            access_ext_.language,
            access_ext_.webdav_password,
            access_ext_.hidden,
            access_ext_.site_id,
            access_ext_.allow_webdav_access,
            access_ext_.allow_httpapi_access,
            access_ext_.last_interaction_time,
            access_ext_.action,
            access_ext_.command,
            access_ext_.object_id,
            access_ext_.table_name,
            access_ext_.access_position_lat,
            access_ext_.access_position_lon,
            access_ext_.access_position_err,
            access_ext_.trashed_date,
            access_ext_.in_dpat,
            access_ext_.in_nucleo_ispettivo,
            access_ext_.in_access,
            access_ext_.codice_suap,
            access_ext_.data_scadenza,
            access_ext_.ip_address_suap,
            access_ext_.istat_comune,
            access_ext_.pec_suap,
            access_ext_.callback_suap,
            access_ext_.id_struttura_asl_complessa,
            access_ext_.callback_suap_ko
           FROM public.access_ext_
          WHERE ((access_ext_.trashed_date IS NULL) AND ((access_ext_.data_scadenza > ('now'::text)::date) OR (access_ext_.data_scadenza IS NULL)))) a
  ORDER BY a.username, a.data_scadenza;


ALTER TABLE public.access_ext OWNER TO postgres;

--
-- TOC entry 267 (class 1259 OID 17085)
-- Name: access_ext_user_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.access_ext_user_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.access_ext_user_id_seq OWNER TO postgres;

--
-- TOC entry 7455 (class 0 OID 0)
-- Dependencies: 267
-- Name: access_ext_user_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.access_ext_user_id_seq OWNED BY public.access_ext_.user_id;


--
-- TOC entry 268 (class 1259 OID 17086)
-- Name: access_user_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.access_user_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.access_user_id_seq OWNER TO postgres;

--
-- TOC entry 7456 (class 0 OID 0)
-- Dependencies: 268
-- Name: access_user_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.access_user_id_seq OWNED BY public.access_.user_id;


--
-- TOC entry 269 (class 1259 OID 17087)
-- Name: acquacoltura_dati_controlli_bdn; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.acquacoltura_dati_controlli_bdn (
    id integer NOT NULL,
    id_controllo integer,
    asl_codice text,
    azi_codice text,
    prop_id_fiscale character varying(16),
    gsp_codice integer,
    crit_codice integer,
    data_controllo text,
    enabled boolean DEFAULT true,
    entered timestamp without time zone DEFAULT now(),
    enteredby integer,
    data_invio timestamp without time zone,
    data_cancellazione timestamp without time zone,
    id_bdn text
);


ALTER TABLE public.acquacoltura_dati_controlli_bdn OWNER TO postgres;

--
-- TOC entry 270 (class 1259 OID 17094)
-- Name: acquacoltura_dati_controlli_bdn_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.acquacoltura_dati_controlli_bdn_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.acquacoltura_dati_controlli_bdn_id_seq OWNER TO postgres;

--
-- TOC entry 7457 (class 0 OID 0)
-- Dependencies: 270
-- Name: acquacoltura_dati_controlli_bdn_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.acquacoltura_dati_controlli_bdn_id_seq OWNED BY public.acquacoltura_dati_controlli_bdn.id;


--
-- TOC entry 271 (class 1259 OID 17095)
-- Name: alt_partizioni; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.alt_partizioni (
    code integer NOT NULL,
    description text,
    nome_campo text,
    nome_tabella text,
    valore_start integer NOT NULL,
    valore_end integer NOT NULL
);


ALTER TABLE public.alt_partizioni OWNER TO postgres;

--
-- TOC entry 272 (class 1259 OID 17100)
-- Name: alt_partizioni_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.alt_partizioni_code_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.alt_partizioni_code_seq OWNER TO postgres;

--
-- TOC entry 7458 (class 0 OID 0)
-- Dependencies: 272
-- Name: alt_partizioni_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.alt_partizioni_code_seq OWNED BY public.alt_partizioni.code;


--
-- TOC entry 273 (class 1259 OID 17101)
-- Name: anag_acque_reflue; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.anag_acque_reflue (
    id integer NOT NULL,
    depurazione_reflui boolean,
    id_stato_impianto integer,
    gestore_impianto text,
    id_processo_depurativo integer,
    potenzialita_impianto_ae text,
    recettore_scarico text,
    recettore_finale text,
    codice_ulia text,
    enteredby integer,
    modifiedby integer,
    entered timestamp without time zone,
    modified timestamp without time zone,
    trashed_date timestamp without time zone,
    riferimento_id integer,
    riferimento_id_nome_tab text
);


ALTER TABLE public.anag_acque_reflue OWNER TO postgres;

--
-- TOC entry 274 (class 1259 OID 17106)
-- Name: anag_acque_reflue_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.anag_acque_reflue_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.anag_acque_reflue_id_seq OWNER TO postgres;

--
-- TOC entry 7459 (class 0 OID 0)
-- Dependencies: 274
-- Name: anag_acque_reflue_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.anag_acque_reflue_id_seq OWNED BY public.anag_acque_reflue.id;


--
-- TOC entry 275 (class 1259 OID 17107)
-- Name: anag_dati_aggiuntivi; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.anag_dati_aggiuntivi (
    id integer NOT NULL,
    riferimento_id integer,
    riferimento_id_nome_tab text,
    nome_responsabile text,
    cognome_responsabile text,
    cf_responsabile text,
    denominazione_stabilimento text,
    enteredby integer,
    modifiedby integer,
    entered timestamp without time zone DEFAULT now(),
    modified timestamp without time zone,
    trashed_date timestamp without time zone
);


ALTER TABLE public.anag_dati_aggiuntivi OWNER TO postgres;

--
-- TOC entry 276 (class 1259 OID 17113)
-- Name: anag_dati_aggiuntivi_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.anag_dati_aggiuntivi_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.anag_dati_aggiuntivi_id_seq OWNER TO postgres;

--
-- TOC entry 7460 (class 0 OID 0)
-- Dependencies: 276
-- Name: anag_dati_aggiuntivi_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.anag_dati_aggiuntivi_id_seq OWNED BY public.anag_dati_aggiuntivi.id;


--
-- TOC entry 277 (class 1259 OID 17114)
-- Name: anag_dati_autorizzativi_matrici; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.anag_dati_autorizzativi_matrici (
    id integer NOT NULL,
    id_anag_dati_autorizzativi integer,
    id_matrice integer,
    note text,
    entered timestamp without time zone DEFAULT now(),
    enteredby integer,
    modified timestamp without time zone,
    modifiedby integer,
    trashed_date timestamp without time zone
);


ALTER TABLE public.anag_dati_autorizzativi_matrici OWNER TO postgres;

--
-- TOC entry 278 (class 1259 OID 17120)
-- Name: anag_dati_aggiuntivi_matrici_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.anag_dati_aggiuntivi_matrici_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.anag_dati_aggiuntivi_matrici_id_seq OWNER TO postgres;

--
-- TOC entry 7461 (class 0 OID 0)
-- Dependencies: 278
-- Name: anag_dati_aggiuntivi_matrici_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.anag_dati_aggiuntivi_matrici_id_seq OWNED BY public.anag_dati_autorizzativi_matrici.id;


--
-- TOC entry 279 (class 1259 OID 17121)
-- Name: anag_dati_autorizzativi; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.anag_dati_autorizzativi (
    id integer NOT NULL,
    riferimento_id integer,
    riferimento_id_nome_tab text,
    id_aia text,
    tipo_autorizzazione integer,
    num_decreto text,
    data_decreto text,
    nota text,
    burc text,
    enteredby integer,
    modifiedby integer,
    entered timestamp without time zone DEFAULT now(),
    modified timestamp without time zone,
    trashed_date timestamp without time zone
);


ALTER TABLE public.anag_dati_autorizzativi OWNER TO postgres;

--
-- TOC entry 280 (class 1259 OID 17127)
-- Name: anag_dati_autorizzativi_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.anag_dati_autorizzativi_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.anag_dati_autorizzativi_id_seq OWNER TO postgres;

--
-- TOC entry 7462 (class 0 OID 0)
-- Dependencies: 280
-- Name: anag_dati_autorizzativi_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.anag_dati_autorizzativi_id_seq OWNED BY public.anag_dati_autorizzativi.id;


--
-- TOC entry 281 (class 1259 OID 17128)
-- Name: anag_emissioni_in_atmosfera_camini; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.anag_emissioni_in_atmosfera_camini (
    id integer NOT NULL,
    id_emissioni_in_atmosfera_camini integer,
    note text,
    entered timestamp without time zone DEFAULT now(),
    enteredby integer,
    modified timestamp without time zone,
    modifiedby integer,
    trashed_date timestamp without time zone,
    riferimento_id integer,
    riferimento_id_nome_tab text
);


ALTER TABLE public.anag_emissioni_in_atmosfera_camini OWNER TO postgres;

--
-- TOC entry 282 (class 1259 OID 17134)
-- Name: anag_emissioni_in_atmosfera_camini_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.anag_emissioni_in_atmosfera_camini_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.anag_emissioni_in_atmosfera_camini_id_seq OWNER TO postgres;

--
-- TOC entry 7463 (class 0 OID 0)
-- Dependencies: 282
-- Name: anag_emissioni_in_atmosfera_camini_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.anag_emissioni_in_atmosfera_camini_id_seq OWNED BY public.anag_emissioni_in_atmosfera_camini.id;


--
-- TOC entry 283 (class 1259 OID 17135)
-- Name: anag_storico_modifiche_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.anag_storico_modifiche_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.anag_storico_modifiche_id_seq OWNER TO postgres;

--
-- TOC entry 7464 (class 0 OID 0)
-- Dependencies: 283
-- Name: anag_storico_modifiche_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.anag_storico_modifiche_id_seq OWNED BY public.anag_storico_modifiche.id;


--
-- TOC entry 284 (class 1259 OID 17136)
-- Name: anagrafica_codice_sinvsa; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.anagrafica_codice_sinvsa (
    id integer NOT NULL,
    riferimento_id integer NOT NULL,
    riferimento_id_nome_tab character varying NOT NULL,
    codice_sinvsa character varying NOT NULL,
    data_codice_sinvsa timestamp without time zone NOT NULL,
    entered timestamp without time zone,
    entered_by integer,
    trashed_date timestamp without time zone,
    note_hd text
);


ALTER TABLE public.anagrafica_codice_sinvsa OWNER TO postgres;

--
-- TOC entry 285 (class 1259 OID 17141)
-- Name: anagrafica_codice_sinvsa_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.anagrafica_codice_sinvsa_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.anagrafica_codice_sinvsa_id_seq OWNER TO postgres;

--
-- TOC entry 7465 (class 0 OID 0)
-- Dependencies: 285
-- Name: anagrafica_codice_sinvsa_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.anagrafica_codice_sinvsa_id_seq OWNED BY public.anagrafica_codice_sinvsa.id;


--
-- TOC entry 286 (class 1259 OID 17142)
-- Name: comuni1; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.comuni1 (
    id integer NOT NULL,
    cod_comune character varying(100) NOT NULL,
    cod_regione character varying(100) NOT NULL,
    cod_provincia character varying(100) NOT NULL,
    nome character varying(100) NOT NULL,
    istat character varying(100) NOT NULL,
    codiceistatasl character varying(50),
    codice character varying(50),
    codice_old character varying(50),
    codiceistatasl_old character varying(50),
    cap text,
    notused boolean,
    cod_nazione integer,
    codiceasl_bdn text,
    codice_nuovo text,
    codice_nuovo_ text,
    istat_comune_provincia character varying(10),
    cap_ character varying(5),
    istat_pre character varying(10),
    note_hd text,
    reverse_cap text,
    codice_catastale character varying(10)
);


ALTER TABLE public.comuni1 OWNER TO postgres;

--
-- TOC entry 287 (class 1259 OID 17147)
-- Name: lookup_opu_tipo_impresa; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_opu_tipo_impresa (
    code integer NOT NULL,
    description character varying(50) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true,
    gruppo boolean DEFAULT false,
    noscia boolean
);


ALTER TABLE public.lookup_opu_tipo_impresa OWNER TO postgres;

--
-- TOC entry 288 (class 1259 OID 17154)
-- Name: lookup_opu_tipo_impresa_societa; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_opu_tipo_impresa_societa (
    code integer NOT NULL,
    description character varying(50) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true,
    code_lookup_opu_tipo_impresa integer,
    required_ragione_sociale boolean,
    label_ragione_sociale text,
    required_sede_legale boolean,
    required_partita_iva boolean,
    required_codice_fiscale boolean
);


ALTER TABLE public.lookup_opu_tipo_impresa_societa OWNER TO postgres;

--
-- TOC entry 289 (class 1259 OID 17162)
-- Name: lookup_province; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_province (
    code integer NOT NULL,
    description text NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true,
    id_regione integer,
    cod_provincia text,
    codistat text,
    cod_nazione integer
);


ALTER TABLE public.lookup_province OWNER TO postgres;

--
-- TOC entry 290 (class 1259 OID 17170)
-- Name: lookup_toponimi; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_toponimi (
    code integer NOT NULL,
    description character varying(300) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_toponimi OWNER TO postgres;

--
-- TOC entry 291 (class 1259 OID 17176)
-- Name: opu_indirizzo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.opu_indirizzo (
    id integer NOT NULL,
    via character varying(300),
    cap character(20),
    provincia character(500),
    nazione character varying(500),
    latitudine double precision,
    longitudine double precision,
    comune integer DEFAULT '-1'::integer,
    riferimento_org_id integer,
    riferimento_address_id integer,
    address_type integer,
    comune_testo text,
    tiponimo integer,
    toponimo integer,
    civico text,
    clean text,
    topon text,
    via_old text,
    note_hd text,
    id_soggetto_fisico_update_indirizzo integer,
    lat_old double precision,
    long_old double precision,
    note_recupero_cap text,
    da_rivedere boolean,
    coordinate_da_riverificare boolean,
    presso text
);


ALTER TABLE public.opu_indirizzo OWNER TO postgres;

--
-- TOC entry 292 (class 1259 OID 17182)
-- Name: opu_lookup_tipologia_attivita; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.opu_lookup_tipologia_attivita (
    code integer NOT NULL,
    description character varying(255) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true,
    entered timestamp(3) without time zone DEFAULT now() NOT NULL,
    modified timestamp(3) without time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.opu_lookup_tipologia_attivita OWNER TO postgres;

--
-- TOC entry 293 (class 1259 OID 17190)
-- Name: opu_lookup_tipologia_carattere; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.opu_lookup_tipologia_carattere (
    code integer NOT NULL,
    description character varying(255) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true,
    entered timestamp(3) without time zone DEFAULT now() NOT NULL,
    modified timestamp(3) without time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.opu_lookup_tipologia_carattere OWNER TO postgres;

--
-- TOC entry 294 (class 1259 OID 17198)
-- Name: opu_operatore; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.opu_operatore (
    id integer NOT NULL,
    codice_fiscale_impresa character varying,
    note text,
    partita_iva character varying(255),
    ragione_sociale character varying(300),
    enteredby integer,
    modifiedby integer,
    entered timestamp without time zone,
    modified timestamp without time zone,
    trashed_date timestamp without time zone,
    riferimento_org_id integer,
    domicilio_digitale text,
    flag_ric_ce boolean,
    num_ric_ce text,
    tipo_impresa integer,
    tipo_societa integer,
    codice_interno_impresa text,
    note_internal_use_only_hd text,
    id_indirizzo integer,
    azienda_agricola boolean,
    id_operatore_valido_caso_doppioni integer,
    id_tipologia_organization integer,
    flag_clean boolean DEFAULT false,
    riferimento_ag integer,
    id_indirizzo_prima_della_pulizia integer,
    id_operatore_precedente integer,
    note_cambio text
);


ALTER TABLE public.opu_operatore OWNER TO postgres;

--
-- TOC entry 295 (class 1259 OID 17204)
-- Name: opu_rel_operatore_soggetto_fisico; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.opu_rel_operatore_soggetto_fisico (
    id_operatore integer NOT NULL,
    id_soggetto_fisico integer NOT NULL,
    tipo_soggetto_fisico integer NOT NULL,
    data_fine timestamp without time zone,
    id integer NOT NULL,
    data_inizio timestamp without time zone,
    stato_ruolo integer,
    enabled boolean,
    id_soggett_fisico_old integer,
    notes text
);


ALTER TABLE public.opu_rel_operatore_soggetto_fisico OWNER TO postgres;

--
-- TOC entry 296 (class 1259 OID 17209)
-- Name: opu_soggetto_fisico; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.opu_soggetto_fisico (
    id integer NOT NULL,
    titolo character(20),
    cognome text,
    nome text,
    comune_nascita text,
    codice_fiscale character varying,
    enteredby integer,
    modifiedby integer,
    ipenteredby character(100),
    ipmodifiedby character(100),
    sesso character(1),
    telefono character(50),
    fax character(50),
    email character varying(100),
    telefono1 character(50),
    data_nascita timestamp without time zone,
    documento_identita text,
    indirizzo_id integer,
    provenienza_estera boolean DEFAULT false,
    riferimento_org_id integer,
    provincia_nascita text,
    id_bdn integer,
    id_operatore_temp integer,
    trashed_date timestamp without time zone,
    note_hd text,
    id_soggetto_precedente integer,
    id_nazione_nascita integer,
    id_comune_nascita integer,
    CONSTRAINT opu_soggetto_fisico_check CHECK (((nome <> cognome) OR provenienza_estera))
);


ALTER TABLE public.opu_soggetto_fisico OWNER TO postgres;

--
-- TOC entry 297 (class 1259 OID 17216)
-- Name: opu_stabilimento; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.opu_stabilimento (
    id integer NOT NULL,
    entered timestamp without time zone,
    modified timestamp without time zone,
    entered_by integer,
    id_operatore integer,
    modified_by integer,
    id_asl integer,
    id_soggetto_fisico integer,
    id_indirizzo integer,
    flag_fuori_regione boolean DEFAULT false,
    flag_modifica_residenza_fuori_asl_in_corso boolean,
    id_tipologia_sede integer,
    riferimento_org_id integer,
    flag_dia boolean,
    data_fine_dia timestamp without time zone,
    id_operatore_old_prima_del_raggruppamento integer,
    categoria_rischio integer,
    data_prossimo_controllo timestamp without time zone,
    cun text,
    id_sinvsa integer,
    data_import timestamp without time zone,
    esito_import text,
    descrizione_errore text,
    stato integer,
    numero_registrazione text,
    linea_attivita_aziende_agricole_old text,
    data_generazione_numero timestamp without time zone,
    codice_interno text,
    denominazione text,
    trashed_date timestamp without time zone,
    notes_hd text,
    tipo_attivita integer,
    tipo_carattere integer,
    data_inizio_attivita timestamp without time zone,
    data_fine_attivita timestamp without time zone,
    num_protocollo text,
    linee_pregresse boolean DEFAULT false,
    note text,
    numero_registrazione_precedente text,
    codice_ufficiale_esistente text,
    import_opu boolean,
    importato boolean,
    codiceinternoreg text,
    alt_id integer,
    cessazione_automatica boolean,
    trashed_by integer,
    categoria_precedente integer,
    linee_pregresse_old boolean DEFAULT false,
    note_trasferimento text
);


ALTER TABLE public.opu_stabilimento OWNER TO postgres;

--
-- TOC entry 298 (class 1259 OID 17224)
-- Name: anagrafica_stabilimenti_puliti; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.anagrafica_stabilimenti_puliti AS
 SELECT DISTINCT op.id AS id_opu_operatore,
    ti.description AS tipoi_mpresa,
    ts.description AS tipo_societa,
    op.ragione_sociale,
    op.partita_iva,
    op.codice_fiscale_impresa,
    op.domicilio_digitale,
    sogg.id AS id_soggetto_fisico,
    sogg.nome,
    sogg.cognome,
    sogg.codice_fiscale AS cf_soggetto,
    sogg.data_nascita,
    sogg.comune_nascita,
    sogg.sesso,
    sogg.indirizzo_id AS id_indirizzo_residenza,
    cres.nome AS comune_residenza,
    lpres.description AS provincia_residenza,
    topres.description AS toponimo_residenza,
    res.via AS indirizzo_residenza,
    res.civico AS civico_residenza,
    res.cap AS cap_resindenza,
    op.id_indirizzo AS id_indirizzo_sede_legale,
    csl.nome AS comune_sede_legale,
    lpsl.description AS provincia_sede_legale,
    top.description AS toponimo_sede_legale,
    sl.via AS indirizzo_sede_legale,
    sl.civico AS civico_sede_legale,
    sl.cap AS cap_sede_legale,
    st.id AS id_stabilimento,
    st.id_indirizzo AS id_indirizzo_sede_operativa,
    cso.nome AS comune_sede_operativa,
    lpso.description AS provincia_sede_operativa,
    topso.description AS toponimo_sede_operativa,
    so.via AS indirizzo_sede_operativa,
    so.civico AS civicco_sede_operativa,
    so.cap AS cap_sede_operativa,
    lta.description AS tipo_attivita,
    ltc.description AS tipo_carattere
   FROM (((((((((((((((((((public.opu_operatore op
     JOIN public.opu_rel_operatore_soggetto_fisico relso ON (((relso.id_operatore = op.id) AND relso.enabled)))
     JOIN public.opu_soggetto_fisico sogg ON ((sogg.id = relso.id_soggetto_fisico)))
     JOIN public.opu_indirizzo res ON ((res.id = sogg.indirizzo_id)))
     LEFT JOIN public.comuni1 cres ON ((cres.id = res.comune)))
     LEFT JOIN public.lookup_province lpres ON ((lpres.code = (cres.cod_provincia)::integer)))
     LEFT JOIN public.lookup_toponimi topres ON ((topres.code = res.toponimo)))
     LEFT JOIN public.lookup_opu_tipo_impresa ti ON ((ti.code = op.tipo_impresa)))
     LEFT JOIN public.lookup_opu_tipo_impresa_societa ts ON ((ts.code = op.tipo_societa)))
     JOIN public.opu_indirizzo sl ON ((sl.id = op.id_indirizzo)))
     LEFT JOIN public.comuni1 csl ON ((csl.id = sl.comune)))
     LEFT JOIN public.lookup_province lpsl ON ((lpsl.code = (csl.cod_provincia)::integer)))
     LEFT JOIN public.lookup_toponimi top ON ((top.code = sl.toponimo)))
     JOIN public.opu_stabilimento st ON ((st.id_operatore = op.id)))
     JOIN public.opu_indirizzo so ON ((so.id = st.id_indirizzo)))
     LEFT JOIN public.comuni1 cso ON ((cso.id = so.comune)))
     LEFT JOIN public.lookup_province lpso ON ((lpso.code = (cso.cod_provincia)::integer)))
     LEFT JOIN public.lookup_toponimi topso ON ((topso.code = so.toponimo)))
     JOIN public.opu_lookup_tipologia_attivita lta ON ((lta.code = st.tipo_attivita)))
     JOIN public.opu_lookup_tipologia_carattere ltc ON ((ltc.code = st.tipo_carattere)))
  WHERE ((1 = 1) AND (op.trashed_date IS NULL) AND (st.trashed_date IS NULL) AND (op.domicilio_digitale IS NOT NULL) AND (op.domicilio_digitale <> ''::text) AND (res.toponimo > 0) AND
        CASE
            WHEN (op.tipo_impresa <> 1) THEN ((sl.toponimo > 0) AND (res.civico <> ''::text) AND (sl.civico <> ''::text))
            ELSE (1 = 1)
        END AND
        CASE
            WHEN ((so.id > 0) AND (st.tipo_attivita <> 2)) THEN ((topso.code > 0) AND (so.civico IS NOT NULL) AND (so.civico <> ''::text))
            ELSE (1 = 1)
        END)
  ORDER BY op.id, st.id;


ALTER TABLE public.anagrafica_stabilimenti_puliti OWNER TO postgres;

--
-- TOC entry 299 (class 1259 OID 17229)
-- Name: analiti; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.analiti (
    progressivo bigint,
    descrizione_analita_livello_uno character varying(254),
    descrizione_analita_livello_due character varying(254),
    descrizione_analita_livello_tre character varying(254),
    codice_analita_livello_uno text,
    codice_analita_livello_due text,
    codice_analita_livello_tre text,
    enabled boolean DEFAULT true
);


ALTER TABLE public.analiti OWNER TO postgres;

--
-- TOC entry 300 (class 1259 OID 17235)
-- Name: campione_analiti; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.campione_analiti (
    id integer NOT NULL,
    id_campione integer,
    analiti_id integer,
    cammino text,
    note text,
    esito_data timestamp without time zone,
    esito_id integer,
    esito_responsabilita_positivita integer,
    esito_punteggio integer,
    esito_allarme_rapido boolean,
    esito_segnalazione_informazioni boolean,
    esito_note_esame text,
    esito_motivazione_respingimento text,
    esito_nonconforme_nonc text
);


ALTER TABLE public.campione_analiti OWNER TO postgres;

--
-- TOC entry 301 (class 1259 OID 17240)
-- Name: analiti_campioni_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.analiti_campioni_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.analiti_campioni_id_seq OWNER TO postgres;

--
-- TOC entry 7466 (class 0 OID 0)
-- Dependencies: 301
-- Name: analiti_campioni_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.analiti_campioni_id_seq OWNED BY public.campione_analiti.id;


--
-- TOC entry 302 (class 1259 OID 17241)
-- Name: asset; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.asset (
    asset_id integer NOT NULL,
    account_id integer,
    contract_id integer,
    date_listed timestamp(3) without time zone,
    asset_tag character varying(30),
    status integer,
    location character varying(256),
    level1 integer,
    level2 integer,
    level3 integer,
    serial_number character varying(30),
    model_version character varying(30),
    description text,
    expiration_date timestamp(3) without time zone,
    inclusions text,
    exclusions text,
    purchase_date timestamp(3) without time zone,
    po_number character varying(30),
    purchased_from character varying(30),
    contact_id integer,
    notes text,
    response_time integer,
    telephone_service_model integer,
    onsite_service_model integer,
    email_service_model integer,
    entered timestamp(3) without time zone DEFAULT now() NOT NULL,
    enteredby integer NOT NULL,
    modified timestamp(3) without time zone DEFAULT now() NOT NULL,
    modifiedby integer NOT NULL,
    enabled boolean DEFAULT true,
    purchase_cost double precision,
    date_listed_timezone character varying(255),
    expiration_date_timezone character varying(255),
    purchase_date_timezone character varying(255),
    trashed_date timestamp(3) without time zone,
    parent_id integer,
    vendor_code integer,
    manufacturer_code integer,
    data_nascita timestamp without time zone,
    razza text,
    sesso text,
    asset_id_canina integer,
    site_id integer,
    mantello text,
    taglia text,
    idcontrollo integer
);


ALTER TABLE public.asset OWNER TO postgres;

--
-- TOC entry 303 (class 1259 OID 17249)
-- Name: asset_asset_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.asset_asset_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.asset_asset_id_seq OWNER TO postgres;

--
-- TOC entry 7467 (class 0 OID 0)
-- Dependencies: 303
-- Name: asset_asset_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.asset_asset_id_seq OWNED BY public.asset.asset_id;


--
-- TOC entry 304 (class 1259 OID 17250)
-- Name: audit; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.audit (
    id integer NOT NULL,
    org_id integer NOT NULL,
    livello_rischio integer NOT NULL,
    numero_registrazione character varying(100),
    componenti_gruppo text,
    note text,
    data_1 timestamp(3) without time zone,
    data_2 timestamp(3) without time zone,
    livello_rischio_finale integer,
    tipo_check integer,
    punteggio_ultimi_anni integer,
    id_controllo character varying,
    categoria integer,
    last text,
    data_prossimo_controllo timestamp without time zone,
    flag_bb boolean,
    trashed_date timestamp without time zone,
    modified_by integer,
    is_principale boolean,
    stato text,
    id_stabilimento integer,
    id_apiario integer,
    alt_id integer
);


ALTER TABLE public.audit OWNER TO postgres;

--
-- TOC entry 305 (class 1259 OID 17255)
-- Name: audit_checklist; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.audit_checklist (
    checklist_id integer NOT NULL,
    audit_id integer NOT NULL,
    risposta boolean,
    punti integer DEFAULT 0 NOT NULL,
    stato text NOT NULL
);


ALTER TABLE public.audit_checklist OWNER TO postgres;

--
-- TOC entry 306 (class 1259 OID 17261)
-- Name: audit_checklist_checklist_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.audit_checklist_checklist_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.audit_checklist_checklist_id_seq OWNER TO postgres;

--
-- TOC entry 7468 (class 0 OID 0)
-- Dependencies: 306
-- Name: audit_checklist_checklist_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.audit_checklist_checklist_id_seq OWNED BY public.audit_checklist.checklist_id;


--
-- TOC entry 307 (class 1259 OID 17262)
-- Name: audit_checklist_type; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.audit_checklist_type (
    checklist_type_id integer NOT NULL,
    audit_id integer NOT NULL,
    valore_range integer NOT NULL,
    operazione character(1),
    nota text,
    is_abilitato boolean
);


ALTER TABLE public.audit_checklist_type OWNER TO postgres;

--
-- TOC entry 308 (class 1259 OID 17267)
-- Name: audit_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.audit_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.audit_id_seq OWNER TO postgres;

--
-- TOC entry 7469 (class 0 OID 0)
-- Dependencies: 308
-- Name: audit_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.audit_id_seq OWNED BY public.audit.id;


--
-- TOC entry 309 (class 1259 OID 17268)
-- Name: aziende; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.aziende (
    cod_azienda text NOT NULL,
    indrizzo_azienda text,
    cap_azienda text,
    localita text,
    cod_comune_azienda text,
    prov_sede_azienda text,
    latitudine double precision,
    longitudine double precision,
    id_fiscale_prop text,
    dat_apertura_azienda timestamp without time zone,
    data_chius_azienda timestamp without time zone,
    id_azienda text,
    id integer NOT NULL,
    latitudine_utm double precision,
    longitudine_utm double precision,
    latitudine_geo double precision,
    longitudine_geo double precision,
    latitudine_wgs84_utm33n double precision,
    longitudine_wgs84_utm33n double precision,
    note_hd text,
    CONSTRAINT check_capna CHECK ((btrim(cap_azienda) <> '80100'::text))
);


ALTER TABLE public.aziende OWNER TO postgres;

--
-- TOC entry 310 (class 1259 OID 17274)
-- Name: aziende_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.aziende_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.aziende_id_seq OWNER TO postgres;

--
-- TOC entry 7470 (class 0 OID 0)
-- Dependencies: 310
-- Name: aziende_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.aziende_id_seq OWNED BY public.aziende.id;


--
-- TOC entry 311 (class 1259 OID 17275)
-- Name: aziendezootecniche_osm; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.aziendezootecniche_osm (
    id integer NOT NULL,
    id_azienda integer,
    id_osm integer,
    cod_azienda character varying(50),
    num_reg_osm character varying(50),
    entered timestamp without time zone DEFAULT now() NOT NULL,
    enteredby integer NOT NULL
);


ALTER TABLE public.aziendezootecniche_osm OWNER TO postgres;

--
-- TOC entry 312 (class 1259 OID 17279)
-- Name: aziendezootecniche_osm_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.aziendezootecniche_osm_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.aziendezootecniche_osm_id_seq OWNER TO postgres;

--
-- TOC entry 7471 (class 0 OID 0)
-- Dependencies: 312
-- Name: aziendezootecniche_osm_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.aziendezootecniche_osm_id_seq OWNED BY public.aziendezootecniche_osm.id;


--
-- TOC entry 313 (class 1259 OID 17280)
-- Name: blacklist_ip; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.blacklist_ip (
    id integer NOT NULL,
    ip character varying(15) NOT NULL
);


ALTER TABLE public.blacklist_ip OWNER TO postgres;

--
-- TOC entry 314 (class 1259 OID 17283)
-- Name: blacklist_range_ip; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.blacklist_range_ip (
    id integer NOT NULL,
    ip_from character varying(15) NOT NULL,
    ip_to character varying(15) NOT NULL
);


ALTER TABLE public.blacklist_range_ip OWNER TO postgres;

--
-- TOC entry 315 (class 1259 OID 17286)
-- Name: blacklist_range_ip_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.blacklist_range_ip_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.blacklist_range_ip_id_seq OWNER TO postgres;

--
-- TOC entry 7472 (class 0 OID 0)
-- Dependencies: 315
-- Name: blacklist_range_ip_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.blacklist_range_ip_id_seq OWNED BY public.blacklist_range_ip.id;


--
-- TOC entry 316 (class 1259 OID 17287)
-- Name: buffer; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.buffer (
    id integer NOT NULL,
    descrizione_breve text NOT NULL,
    note text,
    stato integer,
    data_stato timestamp without time zone,
    entered timestamp without time zone,
    enteredby integer,
    modified timestamp without time zone,
    modifiedby integer,
    data_evento timestamp without time zone,
    trashed_date timestamp without time zone,
    codice_buffer text
);


ALTER TABLE public.buffer OWNER TO postgres;

--
-- TOC entry 317 (class 1259 OID 17292)
-- Name: campione_gruppo_ispettivo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.campione_gruppo_ispettivo (
    id integer NOT NULL,
    id_campione integer,
    id_componente integer,
    enabled boolean DEFAULT true,
    note_hd text,
    id_struttura integer,
    nome_struttura text
);


ALTER TABLE public.campione_gruppo_ispettivo OWNER TO postgres;

--
-- TOC entry 318 (class 1259 OID 17298)
-- Name: campione_gruppo_ispettivo_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.campione_gruppo_ispettivo_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.campione_gruppo_ispettivo_id_seq OWNER TO postgres;

--
-- TOC entry 7473 (class 0 OID 0)
-- Dependencies: 318
-- Name: campione_gruppo_ispettivo_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.campione_gruppo_ispettivo_id_seq OWNED BY public.campione_gruppo_ispettivo.id;


--
-- TOC entry 319 (class 1259 OID 17299)
-- Name: campione_programma_campionamento; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.campione_programma_campionamento (
    id integer NOT NULL,
    id_campione integer,
    id_programma_campionamento integer,
    enabled boolean DEFAULT true
);


ALTER TABLE public.campione_programma_campionamento OWNER TO postgres;

--
-- TOC entry 320 (class 1259 OID 17303)
-- Name: campione_programma_campionamento_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.campione_programma_campionamento_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.campione_programma_campionamento_id_seq OWNER TO postgres;

--
-- TOC entry 7474 (class 0 OID 0)
-- Dependencies: 320
-- Name: campione_programma_campionamento_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.campione_programma_campionamento_id_seq OWNED BY public.campione_programma_campionamento.id;


--
-- TOC entry 321 (class 1259 OID 17304)
-- Name: campioni; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.campioni (
    id integer NOT NULL,
    id_giornata_ispettiva integer,
    data_prelievo timestamp without time zone,
    data_chiusura timestamp without time zone,
    esito text,
    num_verbale text,
    id_laboratorio integer,
    id_motivazione integer,
    entered timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    enteredby integer,
    modified timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    modifiedby integer,
    trashed_date timestamp without time zone,
    note text,
    id_tipo_attivita integer
);


ALTER TABLE public.campioni OWNER TO postgres;

--
-- TOC entry 322 (class 1259 OID 17311)
-- Name: campioni_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.campioni_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.campioni_id_seq OWNER TO postgres;

--
-- TOC entry 7475 (class 0 OID 0)
-- Dependencies: 322
-- Name: campioni_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.campioni_id_seq OWNED BY public.campioni.id;


--
-- TOC entry 323 (class 1259 OID 17312)
-- Name: campioni_verbali_protocolli; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.campioni_verbali_protocolli (
    id integer NOT NULL,
    id_campione integer,
    tipo_verbale text,
    anno_protocollo integer,
    id_documento integer,
    numero_protocollo integer,
    data_protocollo text,
    esito text,
    fault_string text,
    enteredby integer,
    entered timestamp without time zone DEFAULT now(),
    trashed_date timestamp without time zone,
    note_hd text,
    base64file text,
    cf_rappresentante text
);


ALTER TABLE public.campioni_verbali_protocolli OWNER TO postgres;

--
-- TOC entry 324 (class 1259 OID 17318)
-- Name: campioni_verbali_protocolli_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.campioni_verbali_protocolli_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.campioni_verbali_protocolli_id_seq OWNER TO postgres;

--
-- TOC entry 7476 (class 0 OID 0)
-- Dependencies: 324
-- Name: campioni_verbali_protocolli_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.campioni_verbali_protocolli_id_seq OWNED BY public.campioni_verbali_protocolli.id;


--
-- TOC entry 325 (class 1259 OID 17319)
-- Name: tab_cap; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.tab_cap (
    id_cap integer,
    prov_cap text,
    comu_cap text,
    com2_cap text,
    fraz_cap text,
    fra2_cap text,
    topo_cap text,
    top2_cap text,
    dugt_cap text,
    nciv_cap text,
    capi_cap text
);


ALTER TABLE public.tab_cap OWNER TO postgres;

--
-- TOC entry 326 (class 1259 OID 17324)
-- Name: cap; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.cap AS
 SELECT tab_cap.dugt_cap AS toponimo,
    tab_cap.topo_cap AS indirizzo,
    tab_cap.nciv_cap AS numeri,
    tab_cap.capi_cap AS cap
   FROM public.tab_cap;


ALTER TABLE public.cap OWNER TO postgres;

--
-- TOC entry 327 (class 1259 OID 17328)
-- Name: cfsinbox_message; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cfsinbox_message (
    id integer NOT NULL,
    subject character varying(255),
    body text NOT NULL,
    reply_id integer NOT NULL,
    enteredby integer NOT NULL,
    sent timestamp(3) without time zone DEFAULT now() NOT NULL,
    entered timestamp(3) without time zone DEFAULT now() NOT NULL,
    modified timestamp(3) without time zone DEFAULT now() NOT NULL,
    type integer DEFAULT '-1'::integer NOT NULL,
    modifiedby integer NOT NULL,
    delete_flag boolean DEFAULT false,
    tipo integer
);


ALTER TABLE public.cfsinbox_message OWNER TO postgres;

--
-- TOC entry 328 (class 1259 OID 17338)
-- Name: cfsinbox_message_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.cfsinbox_message_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.cfsinbox_message_id_seq OWNER TO postgres;

--
-- TOC entry 7477 (class 0 OID 0)
-- Dependencies: 328
-- Name: cfsinbox_message_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.cfsinbox_message_id_seq OWNED BY public.cfsinbox_message.id;


--
-- TOC entry 329 (class 1259 OID 17339)
-- Name: cfsinbox_messagelink; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cfsinbox_messagelink (
    id integer NOT NULL,
    sent_to integer NOT NULL,
    status integer DEFAULT 0 NOT NULL,
    viewed timestamp(3) without time zone,
    enabled boolean DEFAULT true NOT NULL,
    sent_from integer NOT NULL
);


ALTER TABLE public.cfsinbox_messagelink OWNER TO postgres;

--
-- TOC entry 330 (class 1259 OID 17344)
-- Name: checklist; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.checklist (
    id integer NOT NULL,
    parent_id integer,
    checklist_type_id integer NOT NULL,
    domanda text NOT NULL,
    descrizione text,
    punti_no integer DEFAULT 0,
    punti_si integer DEFAULT 0,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true,
    grand_parents_id integer,
    super_domanda boolean
);


ALTER TABLE public.checklist OWNER TO postgres;

--
-- TOC entry 331 (class 1259 OID 17353)
-- Name: checklist_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.checklist_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.checklist_id_seq OWNER TO postgres;

--
-- TOC entry 7478 (class 0 OID 0)
-- Dependencies: 331
-- Name: checklist_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.checklist_id_seq OWNED BY public.checklist.id;


--
-- TOC entry 332 (class 1259 OID 17354)
-- Name: checklist_type; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.checklist_type (
    code integer NOT NULL,
    catrischio_id integer NOT NULL,
    description character varying(300) NOT NULL,
    range integer DEFAULT 0,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true,
    is_disabilitato boolean,
    is_disabilitato_solo_xlaprima boolean,
    is_disabilitabile integer
);


ALTER TABLE public.checklist_type OWNER TO postgres;

--
-- TOC entry 333 (class 1259 OID 17361)
-- Name: checklist_type_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.checklist_type_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.checklist_type_code_seq OWNER TO postgres;

--
-- TOC entry 7479 (class 0 OID 0)
-- Dependencies: 333
-- Name: checklist_type_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.checklist_type_code_seq OWNED BY public.checklist_type.code;


--
-- TOC entry 334 (class 1259 OID 17362)
-- Name: chk_bns_mod_ist; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.chk_bns_mod_ist (
    id integer NOT NULL,
    id_alleg integer,
    idcu integer,
    entered timestamp(3) without time zone DEFAULT now() NOT NULL,
    enteredby integer NOT NULL,
    modified timestamp(3) without time zone DEFAULT now() NOT NULL,
    modifiedby integer NOT NULL,
    trashed_date timestamp(3) without time zone,
    data_chk timestamp(3) without time zone,
    orgid integer,
    bozza boolean,
    mod_b11_note text,
    mod_b11_flag_preavviso boolean,
    mod_b11_telefono text,
    mod_b11_data text,
    mod_b11_fax text,
    mod_b11_provvedimenti text,
    mod_b11_altra_forma text,
    mod_b11_flag_rilascio_copia boolean,
    note text,
    esito_import text,
    descrizione_errore text,
    id_bdn integer,
    data_import timestamp without time zone
);


ALTER TABLE public.chk_bns_mod_ist OWNER TO postgres;

--
-- TOC entry 335 (class 1259 OID 17369)
-- Name: chk_bns_mod_ist_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.chk_bns_mod_ist_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.chk_bns_mod_ist_id_seq OWNER TO postgres;

--
-- TOC entry 7480 (class 0 OID 0)
-- Dependencies: 335
-- Name: chk_bns_mod_ist_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.chk_bns_mod_ist_id_seq OWNED BY public.chk_bns_mod_ist.id;


--
-- TOC entry 336 (class 1259 OID 17370)
-- Name: chk_bns_risposte; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.chk_bns_risposte (
    id integer NOT NULL,
    idmodist integer,
    idcap integer,
    iddom integer,
    desccap text,
    descdom text,
    esito boolean,
    osservazioni text,
    punteggioa integer,
    punteggiob integer,
    punteggioc integer,
    punteggiototale integer,
    idcap_fkey integer,
    tipo_domanda text,
    tipo_capitolo text,
    domanda_non_pertinente boolean DEFAULT false,
    classe_ws integer
);


ALTER TABLE public.chk_bns_risposte OWNER TO postgres;

--
-- TOC entry 337 (class 1259 OID 17376)
-- Name: chk_bns_risposte_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.chk_bns_risposte_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.chk_bns_risposte_id_seq OWNER TO postgres;

--
-- TOC entry 7481 (class 0 OID 0)
-- Dependencies: 337
-- Name: chk_bns_risposte_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.chk_bns_risposte_id_seq OWNED BY public.chk_bns_risposte.id;


--
-- TOC entry 338 (class 1259 OID 17377)
-- Name: codici_malattie_allevamenti; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.codici_malattie_allevamenti (
    code text NOT NULL,
    description character varying(50) NOT NULL,
    enabled boolean DEFAULT true
);


ALTER TABLE public.codici_malattie_allevamenti OWNER TO postgres;

--
-- TOC entry 339 (class 1259 OID 17383)
-- Name: codici_qualifica_sanitaria_allevamenti; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.codici_qualifica_sanitaria_allevamenti (
    code text NOT NULL,
    description character varying(100) NOT NULL,
    enabled boolean DEFAULT true
);


ALTER TABLE public.codici_qualifica_sanitaria_allevamenti OWNER TO postgres;

--
-- TOC entry 340 (class 1259 OID 17389)
-- Name: comuni; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.comuni AS
 SELECT c1.nome AS comune,
    c1.codice,
    c1.istat AS codiceistatcomune,
    c1.cod_regione AS codiceistatregione,
    c1.codiceistatasl,
    c1.codiceistatasl_old,
    c1.codice_old,
    c1.notused,
    true AS enabled
   FROM public.comuni1 c1
  WHERE ((c1.cod_regione)::text = '15'::text);


ALTER TABLE public.comuni OWNER TO postgres;

--
-- TOC entry 341 (class 1259 OID 17393)
-- Name: comuni1_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.comuni1_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.comuni1_id_seq OWNER TO postgres;

--
-- TOC entry 7482 (class 0 OID 0)
-- Dependencies: 341
-- Name: comuni1_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.comuni1_id_seq OWNED BY public.comuni1.id;


--
-- TOC entry 342 (class 1259 OID 17394)
-- Name: configuratore_template_no_scia; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.configuratore_template_no_scia (
    id integer NOT NULL,
    html_label text,
    html_enabled boolean DEFAULT true,
    sql_campo text,
    sql_origine text,
    sql_condizione text,
    html_ordine text DEFAULT '0'::text,
    html_type text,
    sql_campo_lookup text,
    sql_origine_lookup text,
    sql_condizione_lookup text,
    html_name text,
    mapping_field text,
    oid_parent integer,
    html_style character varying,
    html_event text
);


ALTER TABLE public.configuratore_template_no_scia OWNER TO postgres;

--
-- TOC entry 343 (class 1259 OID 17401)
-- Name: configuratore_template_no_scia_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.configuratore_template_no_scia_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.configuratore_template_no_scia_id_seq OWNER TO postgres;

--
-- TOC entry 7483 (class 0 OID 0)
-- Dependencies: 343
-- Name: configuratore_template_no_scia_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.configuratore_template_no_scia_id_seq OWNED BY public.configuratore_template_no_scia.id;


--
-- TOC entry 344 (class 1259 OID 17402)
-- Name: contact_; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.contact_ (
    contact_id integer NOT NULL,
    user_id integer,
    org_id integer,
    company character varying(255),
    title character varying(80),
    department integer,
    super integer,
    namesalutation character varying(80),
    namelast character varying(80) NOT NULL,
    namefirst character varying(80) NOT NULL,
    namemiddle character varying(80),
    namesuffix character varying(80),
    assistant integer,
    birthdate date,
    notes text,
    site integer,
    locale integer,
    employee_id character varying(80),
    employmenttype integer,
    startofday character varying(10),
    endofday character varying(10),
    entered timestamp(3) without time zone DEFAULT now() NOT NULL,
    enteredby integer NOT NULL,
    modified timestamp(3) without time zone DEFAULT now() NOT NULL,
    modifiedby integer NOT NULL,
    enabled boolean DEFAULT true,
    owner integer,
    custom1 integer DEFAULT '-1'::integer,
    url character varying(100),
    primary_contact boolean DEFAULT false,
    employee boolean DEFAULT false NOT NULL,
    org_name character varying(255),
    access_type integer,
    status_id integer,
    import_id integer,
    information_update_date timestamp(3) without time zone DEFAULT now(),
    lead boolean DEFAULT false,
    lead_status integer,
    source integer,
    rating integer,
    comments character varying(255),
    conversion_date timestamp(3) without time zone,
    additional_names character varying(255),
    nickname character varying(80),
    role character varying(255),
    trashed_date timestamp(3) without time zone,
    secret_word character varying(255),
    account_number character varying(50),
    revenue double precision,
    industry_temp_code integer,
    potential double precision,
    no_email boolean DEFAULT false,
    no_mail boolean DEFAULT false,
    no_phone boolean DEFAULT false,
    no_textmessage boolean DEFAULT false,
    no_im boolean DEFAULT false,
    no_fax boolean DEFAULT false,
    site_id integer,
    assigned_date timestamp(3) without time zone,
    lead_trashed_date timestamp(3) without time zone,
    employees integer,
    duns_type character varying(300),
    duns_number character varying(30),
    business_name_two character varying(300),
    sic_code integer,
    year_started integer,
    sic_description character varying(300),
    site_id_old integer,
    codice_fiscale character varying(60),
    luogo text,
    state text,
    visibilita_delega text,
    num_registrazione_stab text,
    descrizione text,
    note_internal_use_only_hd text
);


ALTER TABLE public.contact_ OWNER TO postgres;

--
-- TOC entry 345 (class 1259 OID 17421)
-- Name: contact; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.contact AS
 SELECT contact_.contact_id,
    contact_.user_id,
    contact_.org_id,
    contact_.company,
    contact_.title,
    contact_.department,
    contact_.super,
    contact_.namesalutation,
    contact_.namelast,
    contact_.namefirst,
    contact_.namemiddle,
    contact_.namesuffix,
    contact_.assistant,
    contact_.birthdate,
    contact_.notes,
    contact_.site,
    contact_.locale,
    contact_.employee_id,
    contact_.employmenttype,
    contact_.startofday,
    contact_.endofday,
    contact_.entered,
    contact_.enteredby,
    contact_.modified,
    contact_.modifiedby,
    contact_.enabled,
    contact_.owner,
    contact_.custom1,
    contact_.url,
    contact_.primary_contact,
    contact_.employee,
    contact_.org_name,
    contact_.access_type,
    contact_.status_id,
    contact_.import_id,
    contact_.information_update_date,
    contact_.lead,
    contact_.lead_status,
    contact_.source,
    contact_.rating,
    contact_.comments,
    contact_.conversion_date,
    contact_.additional_names,
    contact_.nickname,
    contact_.role,
    contact_.trashed_date,
    contact_.secret_word,
    contact_.account_number,
    contact_.revenue,
    contact_.industry_temp_code,
    contact_.potential,
    contact_.no_email,
    contact_.no_mail,
    contact_.no_phone,
    contact_.no_textmessage,
    contact_.no_im,
    contact_.no_fax,
    contact_.site_id,
    contact_.assigned_date,
    contact_.lead_trashed_date,
    contact_.employees,
    contact_.duns_type,
    contact_.duns_number,
    contact_.business_name_two,
    contact_.sic_code,
    contact_.year_started,
    contact_.sic_description,
    contact_.site_id_old,
    contact_.codice_fiscale,
    contact_.luogo,
    contact_.visibilita_delega,
    contact_.num_registrazione_stab
   FROM public.contact_;


ALTER TABLE public.contact OWNER TO postgres;

--
-- TOC entry 346 (class 1259 OID 17426)
-- Name: contact_contact_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.contact_contact_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.contact_contact_id_seq OWNER TO postgres;

--
-- TOC entry 7484 (class 0 OID 0)
-- Dependencies: 346
-- Name: contact_contact_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.contact_contact_id_seq OWNED BY public.contact_.contact_id;


--
-- TOC entry 347 (class 1259 OID 17427)
-- Name: contact_emailaddress; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.contact_emailaddress (
    emailaddress_id integer NOT NULL,
    contact_id integer,
    emailaddress_type integer,
    email character varying(256),
    entered timestamp(3) without time zone DEFAULT now() NOT NULL,
    enteredby integer NOT NULL,
    modified timestamp(3) without time zone DEFAULT now() NOT NULL,
    modifiedby integer NOT NULL,
    primary_email boolean DEFAULT false NOT NULL
);


ALTER TABLE public.contact_emailaddress OWNER TO postgres;

--
-- TOC entry 348 (class 1259 OID 17433)
-- Name: contact_emailaddress_emailaddress_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.contact_emailaddress_emailaddress_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.contact_emailaddress_emailaddress_id_seq OWNER TO postgres;

--
-- TOC entry 7485 (class 0 OID 0)
-- Dependencies: 348
-- Name: contact_emailaddress_emailaddress_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.contact_emailaddress_emailaddress_id_seq OWNED BY public.contact_emailaddress.emailaddress_id;


--
-- TOC entry 349 (class 1259 OID 17434)
-- Name: contact_ext_; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.contact_ext_ (
    contact_id integer NOT NULL,
    user_id integer,
    org_id integer,
    company character varying(255),
    title character varying(80),
    tipo_contatto integer,
    super integer,
    namesalutation character varying(80),
    namelast character varying(80) NOT NULL,
    namefirst character varying(80) NOT NULL,
    namemiddle character varying(80),
    namesuffix character varying(80),
    assistant integer,
    birthdate date,
    notes text,
    site integer,
    locale integer,
    employee_id character varying(80),
    employmenttype integer,
    startofday character varying(10),
    endofday character varying(10),
    entered timestamp(3) without time zone DEFAULT now() NOT NULL,
    enteredby integer NOT NULL,
    modified timestamp(3) without time zone DEFAULT now() NOT NULL,
    modifiedby integer NOT NULL,
    enabled boolean DEFAULT true,
    owner integer,
    custom1 integer DEFAULT '-1'::integer,
    url character varying(100),
    primary_contact boolean DEFAULT false,
    employee boolean DEFAULT false NOT NULL,
    org_name character varying(255),
    access_type integer,
    status_id integer,
    import_id integer,
    information_update_date timestamp(3) without time zone DEFAULT now(),
    lead boolean DEFAULT false,
    lead_status integer,
    source integer,
    rating integer,
    comments character varying(255),
    conversion_date timestamp(3) without time zone,
    additional_names character varying(255),
    nickname character varying(80),
    role character varying(255),
    trashed_date timestamp(3) without time zone,
    secret_word character varying(255),
    account_number character varying(50),
    revenue double precision,
    industry_temp_code integer,
    potential double precision,
    no_email boolean DEFAULT false,
    no_mail boolean DEFAULT false,
    no_phone boolean DEFAULT false,
    no_textmessage boolean DEFAULT false,
    no_im boolean DEFAULT false,
    no_fax boolean DEFAULT false,
    site_id integer,
    assigned_date timestamp(3) without time zone,
    lead_trashed_date timestamp(3) without time zone,
    employees integer,
    duns_type character varying(300),
    duns_number character varying(30),
    business_name_two character varying(300),
    sic_code integer,
    year_started integer,
    sic_description character varying(300),
    stage integer,
    codice_fiscale text,
    luogo text,
    id_provincia_iscrizione_albo_vet_privato integer,
    nr_iscrione_albo_vet_privato character varying(300),
    department integer,
    site_id_old integer,
    state text,
    visibilita_delega text,
    suap_pec text,
    suap_callback text,
    num_registrazione_stab text,
    descrizione text
);


ALTER TABLE public.contact_ext_ OWNER TO postgres;

--
-- TOC entry 350 (class 1259 OID 17453)
-- Name: contact_ext; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.contact_ext AS
 SELECT contact_ext_.contact_id,
    contact_ext_.user_id,
    contact_ext_.org_id,
    contact_ext_.company,
    contact_ext_.title,
    contact_ext_.department,
    contact_ext_.super,
    contact_ext_.namesalutation,
    contact_ext_.namelast,
    contact_ext_.namefirst,
    contact_ext_.namemiddle,
    contact_ext_.namesuffix,
    contact_ext_.assistant,
    contact_ext_.birthdate,
    contact_ext_.notes,
    contact_ext_.site,
    contact_ext_.locale,
    contact_ext_.employee_id,
    contact_ext_.employmenttype,
    contact_ext_.startofday,
    contact_ext_.endofday,
    contact_ext_.entered,
    contact_ext_.enteredby,
    contact_ext_.modified,
    contact_ext_.modifiedby,
    contact_ext_.enabled,
    contact_ext_.owner,
    contact_ext_.custom1,
    contact_ext_.url,
    contact_ext_.primary_contact,
    contact_ext_.employee,
    contact_ext_.org_name,
    contact_ext_.access_type,
    contact_ext_.status_id,
    contact_ext_.import_id,
    contact_ext_.information_update_date,
    contact_ext_.lead,
    contact_ext_.lead_status,
    contact_ext_.source,
    contact_ext_.rating,
    contact_ext_.comments,
    contact_ext_.conversion_date,
    contact_ext_.additional_names,
    contact_ext_.nickname,
    contact_ext_.role,
    contact_ext_.trashed_date,
    contact_ext_.secret_word,
    contact_ext_.account_number,
    contact_ext_.revenue,
    contact_ext_.industry_temp_code,
    contact_ext_.potential,
    contact_ext_.no_email,
    contact_ext_.no_mail,
    contact_ext_.no_phone,
    contact_ext_.no_textmessage,
    contact_ext_.no_im,
    contact_ext_.no_fax,
    contact_ext_.site_id,
    contact_ext_.assigned_date,
    contact_ext_.lead_trashed_date,
    contact_ext_.employees,
    contact_ext_.duns_type,
    contact_ext_.duns_number,
    contact_ext_.business_name_two,
    contact_ext_.sic_code,
    contact_ext_.year_started,
    contact_ext_.sic_description,
    contact_ext_.site_id_old,
    contact_ext_.codice_fiscale,
    contact_ext_.luogo,
    contact_ext_.visibilita_delega,
    contact_ext_.suap_pec,
    contact_ext_.suap_callback,
    contact_ext_.num_registrazione_stab
   FROM public.contact_ext_;


ALTER TABLE public.contact_ext OWNER TO postgres;

--
-- TOC entry 351 (class 1259 OID 17458)
-- Name: contact_ext_contact_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.contact_ext_contact_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.contact_ext_contact_id_seq OWNER TO postgres;

--
-- TOC entry 7486 (class 0 OID 0)
-- Dependencies: 351
-- Name: contact_ext_contact_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.contact_ext_contact_id_seq OWNED BY public.contact_ext_.contact_id;


--
-- TOC entry 352 (class 1259 OID 17459)
-- Name: giornate_ispettive_fase_lavorazione; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.giornate_ispettive_fase_lavorazione (
    id integer NOT NULL,
    id_giornata_ispettiva integer,
    id_fase_lavorazione integer,
    entered timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    enteredby integer,
    modified timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    modifiedby integer,
    trashed_date timestamp without time zone
);


ALTER TABLE public.giornate_ispettive_fase_lavorazione OWNER TO postgres;

--
-- TOC entry 353 (class 1259 OID 17464)
-- Name: controlli_fase_lavorazione_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.controlli_fase_lavorazione_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.controlli_fase_lavorazione_id_seq OWNER TO postgres;

--
-- TOC entry 7487 (class 0 OID 0)
-- Dependencies: 353
-- Name: controlli_fase_lavorazione_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.controlli_fase_lavorazione_id_seq OWNED BY public.giornate_ispettive_fase_lavorazione.id;


--
-- TOC entry 354 (class 1259 OID 17465)
-- Name: giornate_ispettive_per_conto_di; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.giornate_ispettive_per_conto_di (
    id integer NOT NULL,
    id_giornata_ispettiva integer,
    id_percontodi integer,
    entered timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    enteredby integer,
    modified timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    modifiedby integer,
    trashed_date timestamp without time zone
);


ALTER TABLE public.giornate_ispettive_per_conto_di OWNER TO postgres;

--
-- TOC entry 355 (class 1259 OID 17470)
-- Name: controlli_per_conto_di_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.controlli_per_conto_di_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.controlli_per_conto_di_id_seq OWNER TO postgres;

--
-- TOC entry 7488 (class 0 OID 0)
-- Dependencies: 355
-- Name: controlli_per_conto_di_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.controlli_per_conto_di_id_seq OWNED BY public.giornate_ispettive_per_conto_di.id;


--
-- TOC entry 356 (class 1259 OID 17471)
-- Name: giornate_ispettive_emissioni_in_atmosfera_camini; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.giornate_ispettive_emissioni_in_atmosfera_camini (
    id integer NOT NULL,
    id_emissioni_in_atmosfera_camini integer,
    id_giornata_ispettiva integer,
    esito_conforme boolean DEFAULT true,
    note text,
    data_sopralluogo_2016 text,
    parametri_analizzati text,
    superamenti_limiti_normativi text,
    entered timestamp without time zone DEFAULT now(),
    enteredby integer,
    modified timestamp without time zone,
    modifiedby integer,
    trashed_date timestamp without time zone
);


ALTER TABLE public.giornate_ispettive_emissioni_in_atmosfera_camini OWNER TO postgres;

--
-- TOC entry 357 (class 1259 OID 17478)
-- Name: controlli_ufficiali_emissioni_in_atmosfera_camini_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.controlli_ufficiali_emissioni_in_atmosfera_camini_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.controlli_ufficiali_emissioni_in_atmosfera_camini_id_seq OWNER TO postgres;

--
-- TOC entry 7489 (class 0 OID 0)
-- Dependencies: 357
-- Name: controlli_ufficiali_emissioni_in_atmosfera_camini_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.controlli_ufficiali_emissioni_in_atmosfera_camini_id_seq OWNED BY public.giornate_ispettive_emissioni_in_atmosfera_camini.id;


--
-- TOC entry 358 (class 1259 OID 17479)
-- Name: giornate_ispettive_esami; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.giornate_ispettive_esami (
    id integer NOT NULL,
    id_giornata_ispettiva integer,
    id_esame integer,
    entered timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    enteredby integer,
    modified timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    modifiedby integer,
    trashed_date timestamp without time zone
);


ALTER TABLE public.giornate_ispettive_esami OWNER TO postgres;

--
-- TOC entry 359 (class 1259 OID 17484)
-- Name: controlli_ufficiali_esami_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.controlli_ufficiali_esami_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.controlli_ufficiali_esami_id_seq OWNER TO postgres;

--
-- TOC entry 7490 (class 0 OID 0)
-- Dependencies: 359
-- Name: controlli_ufficiali_esami_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.controlli_ufficiali_esami_id_seq OWNED BY public.giornate_ispettive_esami.id;


--
-- TOC entry 360 (class 1259 OID 17485)
-- Name: giornate_ispettive; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.giornate_ispettive (
    id integer NOT NULL,
    id_dipartimento integer,
    data_inizio timestamp without time zone,
    data_fine timestamp without time zone,
    data_chiusura timestamp without time zone,
    stato integer,
    ore text,
    entered timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    enteredby integer,
    modified timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    modifiedby integer,
    trashed_date timestamp without time zone,
    riferimento_id integer,
    riferimento_id_nome_tab text,
    id_tecnica integer,
    note text,
    id_fascicolo_ispettivo integer,
    ora_fine text,
    conclusa_verifica boolean
);


ALTER TABLE public.giornate_ispettive OWNER TO postgres;

--
-- TOC entry 361 (class 1259 OID 17492)
-- Name: controlli_ufficiali_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.controlli_ufficiali_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.controlli_ufficiali_id_seq OWNER TO postgres;

--
-- TOC entry 7491 (class 0 OID 0)
-- Dependencies: 361
-- Name: controlli_ufficiali_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.controlli_ufficiali_id_seq OWNED BY public.giornate_ispettive.id;


--
-- TOC entry 362 (class 1259 OID 17493)
-- Name: giornate_ispettive_matrici; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.giornate_ispettive_matrici (
    id integer NOT NULL,
    id_giornata_ispettiva integer,
    id_matrice integer,
    conclusa text,
    entered timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    enteredby integer,
    modified timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    modifiedby integer,
    trashed_date timestamp without time zone
);


ALTER TABLE public.giornate_ispettive_matrici OWNER TO postgres;

--
-- TOC entry 363 (class 1259 OID 17500)
-- Name: controlli_ufficiali_matrici_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.controlli_ufficiali_matrici_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.controlli_ufficiali_matrici_id_seq OWNER TO postgres;

--
-- TOC entry 7492 (class 0 OID 0)
-- Dependencies: 363
-- Name: controlli_ufficiali_matrici_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.controlli_ufficiali_matrici_id_seq OWNED BY public.giornate_ispettive_matrici.id;


--
-- TOC entry 364 (class 1259 OID 17501)
-- Name: lookup_audit_tipo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_audit_tipo (
    code integer NOT NULL,
    description character varying(50) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_audit_tipo OWNER TO postgres;

--
-- TOC entry 365 (class 1259 OID 17507)
-- Name: lookup_bpi; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_bpi (
    code integer NOT NULL,
    description character varying(50) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true,
    code_lookup_tipo_audit integer
);


ALTER TABLE public.lookup_bpi OWNER TO postgres;

--
-- TOC entry 366 (class 1259 OID 17513)
-- Name: lookup_haccp; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_haccp (
    code integer NOT NULL,
    description character varying(50) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true,
    code_lookup_tipo_audit integer
);


ALTER TABLE public.lookup_haccp OWNER TO postgres;

--
-- TOC entry 367 (class 1259 OID 17519)
-- Name: lookup_tipo_audit; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_tipo_audit (
    code integer NOT NULL,
    description character varying(50) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true,
    code_lookup_audit_tipo integer
);


ALTER TABLE public.lookup_tipo_audit OWNER TO postgres;

--
-- TOC entry 368 (class 1259 OID 17525)
-- Name: controlli_ufficiali_motivi_audit; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.controlli_ufficiali_motivi_audit AS
 SELECT DISTINCT atipo.code AS id_audit_tipo,
    atipo.description AS descrizione_audit_tipo,
    ta.code AS id_tipo_audit,
    ta.description AS descrizione_tipo_audit,
        CASE
            WHEN (bpi.code > 0) THEN 'bpi'::text
            WHEN (haccp.code > 0) THEN 'haccp'::text
            ELSE ''::text
        END AS tipo_bpi_o_haccp,
        CASE
            WHEN (bpi.code > 0) THEN bpi.code
            WHEN (haccp.code > 0) THEN haccp.code
            ELSE '-1'::integer
        END AS id_bpi_haccp,
        CASE
            WHEN (bpi.code > 0) THEN bpi.description
            WHEN (haccp.code > 0) THEN haccp.description
            ELSE ''::character varying
        END AS descrizione_bpi_o_haccp,
    atipo.level,
    atipo.level AS livello_audit_tipo
   FROM (((public.lookup_audit_tipo atipo
     LEFT JOIN public.lookup_tipo_audit ta ON (((atipo.code = ta.code_lookup_audit_tipo) AND ta.enabled)))
     LEFT JOIN public.lookup_bpi bpi ON (((bpi.code_lookup_tipo_audit = ta.code) AND bpi.enabled)))
     LEFT JOIN public.lookup_haccp haccp ON (((haccp.code_lookup_tipo_audit = ta.code) AND haccp.enabled)))
  WHERE atipo.enabled
  ORDER BY atipo.level;


ALTER TABLE public.controlli_ufficiali_motivi_audit OWNER TO postgres;

--
-- TOC entry 369 (class 1259 OID 17530)
-- Name: giornate_ispettive_motivi; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.giornate_ispettive_motivi (
    id integer NOT NULL,
    id_giornata_ispettiva integer,
    id_motivo integer,
    entered timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    enteredby integer,
    modified timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    modifiedby integer,
    trashed_date timestamp without time zone
);


ALTER TABLE public.giornate_ispettive_motivi OWNER TO postgres;

--
-- TOC entry 370 (class 1259 OID 17535)
-- Name: controlli_ufficiali_motivi_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.controlli_ufficiali_motivi_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.controlli_ufficiali_motivi_id_seq OWNER TO postgres;

--
-- TOC entry 7493 (class 0 OID 0)
-- Dependencies: 370
-- Name: controlli_ufficiali_motivi_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.controlli_ufficiali_motivi_id_seq OWNED BY public.giornate_ispettive_motivi.id;


--
-- TOC entry 371 (class 1259 OID 17536)
-- Name: dpat_indicatore_new; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.dpat_indicatore_new (
    id integer NOT NULL,
    cod_raggruppamento integer NOT NULL,
    id_piano_attivita integer,
    anno integer NOT NULL,
    descrizione text,
    ordinamento integer NOT NULL,
    data_scadenza timestamp without time zone,
    stato integer NOT NULL,
    codice_esame text,
    codice_interno_indicatore integer,
    alias_indicatore text,
    codice_interno_piani_gestione_cu integer,
    codice_interno_attivita_gestione_cu text,
    codice_interno_univoco_tipo_attivita_gestione_cu text,
    codice_alias_indicatore text,
    flag_benessere boolean,
    entered timestamp(3) without time zone,
    modified timestamp(3) without time zone,
    entered_by integer,
    modified_by integer,
    note_hd text,
    tipo_item_dpat integer DEFAULT 0,
    rendic_per_campioni boolean DEFAULT false
);


ALTER TABLE public.dpat_indicatore_new OWNER TO postgres;

--
-- TOC entry 372 (class 1259 OID 17543)
-- Name: dpat_piano_attivita_new; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.dpat_piano_attivita_new (
    id integer NOT NULL,
    cod_raggruppamento integer NOT NULL,
    id_sezione integer NOT NULL,
    anno integer NOT NULL,
    descrizione text,
    ordinamento integer NOT NULL,
    data_scadenza timestamp without time zone,
    stato integer NOT NULL,
    codice_esame text,
    tipo_attivita text,
    codice_interno_piano integer,
    codice_interno_attivita integer,
    alias_piano text,
    alias_attivita text,
    codice_alias_attivita text,
    entered timestamp(3) without time zone,
    modified timestamp(3) without time zone,
    entered_by integer,
    modified_by integer,
    note_hd text
);


ALTER TABLE public.dpat_piano_attivita_new OWNER TO postgres;

--
-- TOC entry 373 (class 1259 OID 17548)
-- Name: lookup_piano_monitoraggio; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_piano_monitoraggio (
    code integer,
    description character varying,
    default_item boolean,
    level integer,
    enabled boolean,
    site_id integer,
    id_sezione integer,
    ordinamento integer,
    ordinamento_figli integer,
    codice_interno integer,
    anno integer,
    flag_condizionalita boolean,
    codice_interno_tipo_ispezione text,
    codice_interno_ind integer,
    data_scadenza timestamp without time zone,
    id_indicatore integer,
    id_padre integer,
    codice_esame text,
    flag_vitelli boolean,
    short_description character varying,
    alias text,
    codice_interno_univoco integer,
    codice text,
    flag_benessere boolean
);


ALTER TABLE public.lookup_piano_monitoraggio OWNER TO postgres;

--
-- TOC entry 374 (class 1259 OID 17553)
-- Name: lookup_tipo_ispezione; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_tipo_ispezione (
    code integer,
    description character varying,
    default_item boolean,
    level integer,
    enabled boolean,
    codice_esame text,
    codice_interno text,
    anno integer,
    codice_interno_univoco text,
    ordinamento integer,
    ordinamento_figli integer,
    data_scadenza timestamp without time zone,
    codice_interno_ind integer,
    id_indicatore integer,
    alias text,
    codice text,
    id_padre integer
);


ALTER TABLE public.lookup_tipo_ispezione OWNER TO postgres;

--
-- TOC entry 375 (class 1259 OID 17558)
-- Name: controlli_ufficiali_motivi_ispezione_vista; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.controlli_ufficiali_motivi_ispezione_vista AS
 SELECT ti.code AS id_tipo_ispezione,
    ti.description AS descrizione_tipo_ispezione,
    ti.codice_interno AS codice_int_tipo_ispe,
    p.code AS id_piano,
    p.description AS descrizione_piano,
    p.codice_interno AS codice_int_piano,
    COALESCE(p.ordinamento, ti.ordinamento) AS ordinamento,
    COALESCE(p.ordinamento_figli, ti.ordinamento_figli) AS ordinamento_figli,
    ti.level AS livello_tipo_ispezione,
        CASE
            WHEN (p.code > 0) THEN p.data_scadenza
            ELSE ti.data_scadenza
        END AS data_scadenza,
        CASE
            WHEN (p.code > 0) THEN (p.codice_interno_ind)::text
            ELSE (ti.codice_interno_ind || ''::text)
        END AS codice_interno_ind,
    COALESCE(p.anno, ti.anno) AS anno,
    COALESCE(p.data_scadenza, ti.data_scadenza) AS "coalesce",
    COALESCE(p.codice, ti.codice) AS codice,
    dpan.tipo_attivita
   FROM (((public.lookup_tipo_ispezione ti
     LEFT JOIN public.lookup_piano_monitoraggio p ON (((ti.codice_interno ~~* p.codice_interno_tipo_ispezione) AND p.enabled)))
     LEFT JOIN public.dpat_indicatore_new din ON (((din.id = ti.code) OR (din.id = p.code))))
     LEFT JOIN public.dpat_piano_attivita_new dpan ON ((dpan.id = din.id_piano_attivita)))
  WHERE ti.enabled
  ORDER BY p.ordinamento, p.ordinamento_figli;


ALTER TABLE public.controlli_ufficiali_motivi_ispezione_vista OWNER TO postgres;

--
-- TOC entry 376 (class 1259 OID 17563)
-- Name: controlli_ufficiali_operatori_mercato; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.controlli_ufficiali_operatori_mercato (
    id integer NOT NULL,
    id_controllo_ufficiale integer,
    id_operatore_mercato integer,
    entered timestamp without time zone DEFAULT now(),
    trashed_date timestamp without time zone
);


ALTER TABLE public.controlli_ufficiali_operatori_mercato OWNER TO postgres;

--
-- TOC entry 377 (class 1259 OID 17567)
-- Name: controlli_ufficiali_operatori_mercato_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.controlli_ufficiali_operatori_mercato_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.controlli_ufficiali_operatori_mercato_id_seq OWNER TO postgres;

--
-- TOC entry 7494 (class 0 OID 0)
-- Dependencies: 377
-- Name: controlli_ufficiali_operatori_mercato_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.controlli_ufficiali_operatori_mercato_id_seq OWNED BY public.controlli_ufficiali_operatori_mercato.id;


--
-- TOC entry 378 (class 1259 OID 17568)
-- Name: giornate_ispettive_tipi_verifica; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.giornate_ispettive_tipi_verifica (
    id integer NOT NULL,
    id_giornata_ispettiva integer,
    id_tipo_verifica integer,
    entered timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    enteredby integer,
    modified timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    modifiedby integer,
    trashed_date timestamp without time zone
);


ALTER TABLE public.giornate_ispettive_tipi_verifica OWNER TO postgres;

--
-- TOC entry 379 (class 1259 OID 17573)
-- Name: controlli_ufficiali_tipi_verifica_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.controlli_ufficiali_tipi_verifica_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.controlli_ufficiali_tipi_verifica_id_seq OWNER TO postgres;

--
-- TOC entry 7495 (class 0 OID 0)
-- Dependencies: 379
-- Name: controlli_ufficiali_tipi_verifica_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.controlli_ufficiali_tipi_verifica_id_seq OWNED BY public.giornate_ispettive_tipi_verifica.id;


--
-- TOC entry 380 (class 1259 OID 17574)
-- Name: giornate_ispettive_verbali_protocolli; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.giornate_ispettive_verbali_protocolli (
    id integer NOT NULL,
    id_giornata_ispettiva integer,
    tipo_verbale text,
    anno_protocollo integer,
    id_documento integer,
    numero_protocollo integer,
    data_protocollo text,
    esito text,
    fault_string text,
    enteredby integer,
    entered timestamp without time zone DEFAULT now(),
    trashed_date timestamp without time zone,
    note_hd text,
    base64file text,
    cf_rappresentante text
);


ALTER TABLE public.giornate_ispettive_verbali_protocolli OWNER TO postgres;

--
-- TOC entry 381 (class 1259 OID 17580)
-- Name: controlli_ufficiali_verbali_protocolli_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.controlli_ufficiali_verbali_protocolli_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.controlli_ufficiali_verbali_protocolli_id_seq OWNER TO postgres;

--
-- TOC entry 7496 (class 0 OID 0)
-- Dependencies: 381
-- Name: controlli_ufficiali_verbali_protocolli_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.controlli_ufficiali_verbali_protocolli_id_seq OWNED BY public.giornate_ispettive_verbali_protocolli.id;


--
-- TOC entry 382 (class 1259 OID 17581)
-- Name: cu_fields_value; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cu_fields_value (
    id integer NOT NULL,
    id_controllo integer,
    id_cu_html_fields integer,
    valore text,
    enabled boolean DEFAULT true,
    id_utente_inserimento integer,
    data_inserimento timestamp without time zone DEFAULT now(),
    id_codice_interno text
);


ALTER TABLE public.cu_fields_value OWNER TO postgres;

--
-- TOC entry 383 (class 1259 OID 17588)
-- Name: cu_fields_value_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.cu_fields_value_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.cu_fields_value_id_seq OWNER TO postgres;

--
-- TOC entry 7497 (class 0 OID 0)
-- Dependencies: 383
-- Name: cu_fields_value_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.cu_fields_value_id_seq OWNED BY public.cu_fields_value.id;


--
-- TOC entry 384 (class 1259 OID 17589)
-- Name: cu_html_fields; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cu_html_fields (
    id integer NOT NULL,
    codice_interno text,
    nome_campo character varying NOT NULL,
    tipo_campo character varying NOT NULL,
    label_campo character varying NOT NULL,
    tabella_lookup character varying,
    javascript_function character varying,
    javascript_function_evento character varying,
    link_value character varying,
    ordine_campo integer,
    valore_campo character varying,
    tipo_controlli_date character varying,
    label_campo_controlli_date character varying,
    maxlength integer,
    id_specie_only integer,
    only_hd integer DEFAULT 0,
    label_link character varying,
    multiple boolean,
    obbligatorio boolean DEFAULT true
);


ALTER TABLE public.cu_html_fields OWNER TO postgres;

--
-- TOC entry 385 (class 1259 OID 17596)
-- Name: cu_html_fields_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.cu_html_fields_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.cu_html_fields_id_seq OWNER TO postgres;

--
-- TOC entry 7498 (class 0 OID 0)
-- Dependencies: 385
-- Name: cu_html_fields_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.cu_html_fields_id_seq OWNED BY public.cu_html_fields.id;


--
-- TOC entry 386 (class 1259 OID 17597)
-- Name: giornate_ispettive_log_json; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.giornate_ispettive_log_json (
    id integer NOT NULL,
    enteredby integer,
    entered timestamp without time zone DEFAULT now(),
    json_cu json
);


ALTER TABLE public.giornate_ispettive_log_json OWNER TO postgres;

--
-- TOC entry 387 (class 1259 OID 17603)
-- Name: cu_log_json_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.cu_log_json_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.cu_log_json_id_seq OWNER TO postgres;

--
-- TOC entry 7499 (class 0 OID 0)
-- Dependencies: 387
-- Name: cu_log_json_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.cu_log_json_id_seq OWNED BY public.giornate_ispettive_log_json.id;


--
-- TOC entry 388 (class 1259 OID 17604)
-- Name: cu_motivi_operatori; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cu_motivi_operatori (
    id integer NOT NULL,
    codice_piano_o_attivita text,
    tipologia_operatore integer
);


ALTER TABLE public.cu_motivi_operatori OWNER TO postgres;

--
-- TOC entry 389 (class 1259 OID 17609)
-- Name: cu_motivi_operatori_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.cu_motivi_operatori_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.cu_motivi_operatori_id_seq OWNER TO postgres;

--
-- TOC entry 7500 (class 0 OID 0)
-- Dependencies: 389
-- Name: cu_motivi_operatori_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.cu_motivi_operatori_id_seq OWNED BY public.cu_motivi_operatori.id;


--
-- TOC entry 390 (class 1259 OID 17610)
-- Name: cu_nucleo_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.cu_nucleo_id_seq
    START WITH 2241423
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.cu_nucleo_id_seq OWNER TO postgres;

--
-- TOC entry 391 (class 1259 OID 17611)
-- Name: cu_riferimenti_soa; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cu_riferimenti_soa (
    id_cu integer,
    ragione_sociale text,
    indirizzo text,
    org_id integer
);


ALTER TABLE public.cu_riferimenti_soa OWNER TO postgres;

--
-- TOC entry 392 (class 1259 OID 17616)
-- Name: cun_amr; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cun_amr (
    id integer NOT NULL,
    numero_registrazione text,
    cun_sinvsa text
);


ALTER TABLE public.cun_amr OWNER TO postgres;

--
-- TOC entry 393 (class 1259 OID 17621)
-- Name: cun_amr_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.cun_amr_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.cun_amr_id_seq OWNER TO postgres;

--
-- TOC entry 7501 (class 0 OID 0)
-- Dependencies: 393
-- Name: cun_amr_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.cun_amr_id_seq OWNED BY public.cun_amr.id;


--
-- TOC entry 394 (class 1259 OID 17622)
-- Name: dpat; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.dpat (
    id integer NOT NULL,
    anno integer NOT NULL,
    id_asl integer NOT NULL,
    obiettivo_in_ui integer,
    carico_in_ui integer,
    entered timestamp without time zone,
    entered_by integer,
    modified timestamp without time zone,
    modified_by integer,
    enabled boolean,
    strutture text,
    completo boolean DEFAULT false,
    id_dpat_istanza integer,
    congelato boolean,
    data_congelamento timestamp without time zone
);


ALTER TABLE public.dpat OWNER TO postgres;

--
-- TOC entry 395 (class 1259 OID 17628)
-- Name: dpat_codici_indicatore; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.dpat_codici_indicatore (
    id integer NOT NULL,
    codice_interno_univoco_indicatore integer,
    codice text,
    data_scadenza timestamp without time zone
);


ALTER TABLE public.dpat_codici_indicatore OWNER TO postgres;

--
-- TOC entry 396 (class 1259 OID 17633)
-- Name: dpat_codici_indicatore_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.dpat_codici_indicatore_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.dpat_codici_indicatore_id_seq OWNER TO postgres;

--
-- TOC entry 7502 (class 0 OID 0)
-- Dependencies: 396
-- Name: dpat_codici_indicatore_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.dpat_codici_indicatore_id_seq OWNED BY public.dpat_codici_indicatore.id;


--
-- TOC entry 397 (class 1259 OID 17634)
-- Name: dpat_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.dpat_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.dpat_id_seq OWNER TO postgres;

--
-- TOC entry 7503 (class 0 OID 0)
-- Dependencies: 397
-- Name: dpat_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.dpat_id_seq OWNED BY public.dpat.id;


--
-- TOC entry 398 (class 1259 OID 17635)
-- Name: dpat_indicatore_new_cod_raggruppamento_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.dpat_indicatore_new_cod_raggruppamento_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.dpat_indicatore_new_cod_raggruppamento_seq OWNER TO postgres;

--
-- TOC entry 7504 (class 0 OID 0)
-- Dependencies: 398
-- Name: dpat_indicatore_new_cod_raggruppamento_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.dpat_indicatore_new_cod_raggruppamento_seq OWNED BY public.dpat_indicatore_new.cod_raggruppamento;


--
-- TOC entry 399 (class 1259 OID 17636)
-- Name: dpat_indicatore_new_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.dpat_indicatore_new_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.dpat_indicatore_new_id_seq OWNER TO postgres;

--
-- TOC entry 7505 (class 0 OID 0)
-- Dependencies: 399
-- Name: dpat_indicatore_new_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.dpat_indicatore_new_id_seq OWNED BY public.dpat_indicatore_new.id;


--
-- TOC entry 400 (class 1259 OID 17637)
-- Name: dpat_istanza; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.dpat_istanza (
    id integer NOT NULL,
    anno integer,
    entered timestamp without time zone,
    enteredby integer,
    trashed_date timestamp without time zone,
    stato text,
    flag_import_piani boolean DEFAULT false
);


ALTER TABLE public.dpat_istanza OWNER TO postgres;

--
-- TOC entry 401 (class 1259 OID 17643)
-- Name: dpat_istanza_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.dpat_istanza_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.dpat_istanza_id_seq OWNER TO postgres;

--
-- TOC entry 7506 (class 0 OID 0)
-- Dependencies: 401
-- Name: dpat_istanza_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.dpat_istanza_id_seq OWNED BY public.dpat_istanza.id;


--
-- TOC entry 402 (class 1259 OID 17644)
-- Name: dpat_piano_attivita_new_cod_raggruppamento_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.dpat_piano_attivita_new_cod_raggruppamento_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.dpat_piano_attivita_new_cod_raggruppamento_seq OWNER TO postgres;

--
-- TOC entry 7507 (class 0 OID 0)
-- Dependencies: 402
-- Name: dpat_piano_attivita_new_cod_raggruppamento_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.dpat_piano_attivita_new_cod_raggruppamento_seq OWNED BY public.dpat_piano_attivita_new.cod_raggruppamento;


--
-- TOC entry 403 (class 1259 OID 17645)
-- Name: dpat_piano_attivita_new_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.dpat_piano_attivita_new_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.dpat_piano_attivita_new_id_seq OWNER TO postgres;

--
-- TOC entry 7508 (class 0 OID 0)
-- Dependencies: 403
-- Name: dpat_piano_attivita_new_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.dpat_piano_attivita_new_id_seq OWNED BY public.dpat_piano_attivita_new.id;


--
-- TOC entry 404 (class 1259 OID 17646)
-- Name: dpat_sez_new; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.dpat_sez_new (
    id integer NOT NULL,
    cod_raggruppamento integer NOT NULL,
    anno integer NOT NULL,
    descrizione text,
    ordinamento integer NOT NULL,
    data_scadenza timestamp without time zone,
    stato integer NOT NULL,
    codice_interno integer,
    color character varying(100),
    entered timestamp(3) without time zone,
    modified timestamp(3) without time zone,
    entered_by integer,
    modified_by integer
);


ALTER TABLE public.dpat_sez_new OWNER TO postgres;

--
-- TOC entry 405 (class 1259 OID 17651)
-- Name: dpat_sez_new_cod_raggruppamento_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.dpat_sez_new_cod_raggruppamento_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.dpat_sez_new_cod_raggruppamento_seq OWNER TO postgres;

--
-- TOC entry 7509 (class 0 OID 0)
-- Dependencies: 405
-- Name: dpat_sez_new_cod_raggruppamento_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.dpat_sez_new_cod_raggruppamento_seq OWNED BY public.dpat_sez_new.cod_raggruppamento;


--
-- TOC entry 406 (class 1259 OID 17652)
-- Name: dpat_sez_new_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.dpat_sez_new_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.dpat_sez_new_id_seq OWNER TO postgres;

--
-- TOC entry 7510 (class 0 OID 0)
-- Dependencies: 406
-- Name: dpat_sez_new_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.dpat_sez_new_id_seq OWNED BY public.dpat_sez_new.id;


--
-- TOC entry 407 (class 1259 OID 17653)
-- Name: dpat_strumento_calcolo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.dpat_strumento_calcolo (
    anno integer,
    id_asl integer,
    entered timestamp without time zone,
    modified timestamp without time zone,
    enteredby integer,
    modifiedby integer,
    id integer NOT NULL,
    completo boolean DEFAULT false,
    riaperto boolean,
    id_sdc_temp integer,
    stato integer
);


ALTER TABLE public.dpat_strumento_calcolo OWNER TO postgres;

--
-- TOC entry 408 (class 1259 OID 17657)
-- Name: dpat_strumento_calcolo_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.dpat_strumento_calcolo_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.dpat_strumento_calcolo_id_seq OWNER TO postgres;

--
-- TOC entry 7511 (class 0 OID 0)
-- Dependencies: 408
-- Name: dpat_strumento_calcolo_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.dpat_strumento_calcolo_id_seq OWNED BY public.dpat_strumento_calcolo.id;


--
-- TOC entry 409 (class 1259 OID 17658)
-- Name: dpat_strumento_calcolo_nominativi_; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.dpat_strumento_calcolo_nominativi_ (
    id_anagrafica_nominativo integer,
    id_lookup_qualifica integer,
    id integer NOT NULL,
    id_dpat_strumento_calcolo_strutture integer,
    trashed_date timestamp without time zone,
    id_old_anagrafica_nominativo integer,
    note_hd text,
    confermato boolean DEFAULT false,
    confermato_da integer,
    data_conferma timestamp without time zone,
    stato integer,
    data_scadenza timestamp without time zone,
    codice_interno_fk integer,
    modified_by integer,
    modified timestamp without time zone,
    entered timestamp without time zone,
    entered_by integer
);


ALTER TABLE public.dpat_strumento_calcolo_nominativi_ OWNER TO postgres;

--
-- TOC entry 410 (class 1259 OID 17664)
-- Name: lookup_area_struttura_asl; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_area_struttura_asl (
    code integer NOT NULL,
    description character varying(50) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_area_struttura_asl OWNER TO postgres;

--
-- TOC entry 411 (class 1259 OID 17670)
-- Name: lookup_site_id; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_site_id (
    code integer NOT NULL,
    description character varying(300) NOT NULL,
    short_description character varying(300),
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true,
    codiceistat character varying,
    code_canina integer,
    id_provincia integer
);


ALTER TABLE public.lookup_site_id OWNER TO postgres;

--
-- TOC entry 412 (class 1259 OID 17678)
-- Name: strutture_asl; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.strutture_asl (
    id integer NOT NULL,
    id_padre integer,
    id_asl integer NOT NULL,
    nome character varying(500),
    descrizione_lunga character varying(500),
    n_livello smallint NOT NULL,
    id_utente integer,
    entered timestamp with time zone DEFAULT now(),
    entered_by integer,
    modified timestamp with time zone DEFAULT now(),
    modified_by integer,
    trashed_date timestamp with time zone,
    tipologia_struttura integer,
    mail text,
    comune text,
    indirizzo text,
    delegato integer,
    descrizione_comune text,
    enabled boolean DEFAULT false,
    obsoleto boolean,
    confermato boolean,
    id_oia_nodo_temp integer,
    id_strumento_calcolo integer,
    codice_interno_fk integer,
    data_scadenza timestamp without time zone,
    stato integer,
    anno integer,
    descrizione_area_struttura_complessa text,
    id_struttura_anno_prec integer,
    id_lookup_area_struttura_asl integer,
    id_utente_edit integer,
    percentuale_area_a integer,
    ui_struttura_foglio_att_iniziale integer,
    ui_struttura_foglio_att_finale integer,
    stato_all2 integer DEFAULT 0,
    stato_all6 integer DEFAULT 0,
    codice_interno_univoco integer,
    data_congelamento timestamp(3) without time zone,
    id_utente_congelamento integer,
    note_hd text,
    uba_ui integer,
    codice_ufficio text
);


ALTER TABLE public.strutture_asl OWNER TO postgres;

--
-- TOC entry 413 (class 1259 OID 17688)
-- Name: oia_nodo; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.oia_nodo AS
 SELECT a.id,
    a.id_padre,
    a.id_asl,
    a.descrizione_lunga,
    a.n_livello,
    a.entered,
    a.entered_by,
    a.modified,
    a.modified_by,
    a.trashed_date,
    a.tipologia_struttura,
    a.comune,
    a.enabled,
    a.obsoleto,
    a.confermato,
    a.id_strumento_calcolo,
    a.codice_interno_fk,
    a.nome,
    a.id_utente,
    a.mail,
    a.indirizzo,
    a.delegato,
    a.descrizione_comune,
    a.id_oia_nodo_temp,
    a.data_scadenza,
    a.disabilitata,
    a.stato,
    a.anno,
    a.descrizione_area_struttura_complessa,
    a.id_lookup_area_struttura_asl,
    a.ui_struttura_foglio_att_iniziale,
    a.ui_struttura_foglio_att_finale,
    a.id_utente_edit,
    a.percentuale_area_a,
    a.stato_all2,
    a.stato_all6,
    a.codice_interno_univoco,
    a.descrizione_area_struttura,
    a.data_congelamento,
    a.codice_ufficio
   FROM ( SELECT strutture_asl.id,
            strutture_asl.id_padre,
            strutture_asl.id_asl,
            strutture_asl.descrizione_lunga,
            strutture_asl.n_livello,
            strutture_asl.entered,
            strutture_asl.entered_by,
            strutture_asl.modified,
            strutture_asl.modified_by,
            strutture_asl.trashed_date,
            strutture_asl.tipologia_struttura,
            strutture_asl.comune,
            strutture_asl.enabled,
            strutture_asl.obsoleto,
            strutture_asl.confermato,
            strutture_asl.id_strumento_calcolo,
            strutture_asl.codice_interno_fk,
            strutture_asl.nome,
            strutture_asl.id_utente,
            strutture_asl.mail,
            strutture_asl.indirizzo,
            strutture_asl.delegato,
            strutture_asl.descrizione_comune,
            strutture_asl.id_oia_nodo_temp,
            strutture_asl.data_scadenza,
            strutture_asl.stato,
            strutture_asl.anno,
                CASE
                    WHEN ((strutture_asl.data_scadenza > now()) OR (strutture_asl.data_scadenza IS NULL)) THEN false
                    ELSE true
                END AS disabilitata,
            strutture_asl.descrizione_area_struttura_complessa,
            strutture_asl.id_lookup_area_struttura_asl,
            strutture_asl.ui_struttura_foglio_att_iniziale,
            strutture_asl.ui_struttura_foglio_att_finale,
            strutture_asl.id_utente_edit,
            strutture_asl.percentuale_area_a,
            strutture_asl.stato_all2,
            strutture_asl.stato_all6,
            strutture_asl.codice_interno_univoco,
            area.description AS descrizione_area_struttura,
            strutture_asl.data_congelamento,
            strutture_asl.codice_ufficio
           FROM (public.strutture_asl
             LEFT JOIN public.lookup_area_struttura_asl area ON ((area.code = strutture_asl.id_lookup_area_struttura_asl)))) a
  ORDER BY a.codice_interno_fk, a.data_scadenza;


ALTER TABLE public.oia_nodo OWNER TO postgres;

--
-- TOC entry 756 (class 1259 OID 21136)
-- Name: dpat_strutture_asl; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.dpat_strutture_asl AS
 WITH RECURSIVE recursetree(id, descrizione, nonno, livello, pathid, pathdes, id_asl, idsc, tipostruttura, codicefk, datascadenza, disabilitato, id_padre, anno, stato, enabled, descrizione_area_struttura_complessa, id_lookup_area_struttura_asl, ui_struttura_foglio_att_iniziale, ui_struttura_foglio_att_finale, id_utente_edit, percentuale_area_a, stato_all2, stato_all6, descrizione_area_struttura, codice_interno_univoco, data_congelamento, codice_ufficio, entered, modified) AS (
         SELECT n.id,
            n.descrizione_lunga,
            n.id_padre AS nonno,
            n.n_livello,
            (n.id_padre)::character varying(1000) AS path_id,
            (n.descrizione_lunga)::character varying(1000) AS pathdes,
            n.id_asl,
            n.id_strumento_calcolo,
            n.tipologia_struttura,
            n.codice_interno_fk,
            n.data_scadenza,
            n.disabilitata,
            n.id_padre,
            n.anno,
            n.stato,
            n.enabled,
            n.descrizione_area_struttura_complessa,
            n.id_lookup_area_struttura_asl,
            n.ui_struttura_foglio_att_iniziale,
            n.ui_struttura_foglio_att_finale,
            n.id_utente_edit,
            n.percentuale_area_a,
            n.stato_all2,
            n.stato_all6,
            area.description AS descrizione_area_struttura,
            n.codice_interno_univoco,
            n.data_congelamento,
            n.codice_ufficio,
            n.entered,
            n.modified
           FROM ((public.oia_nodo n
             LEFT JOIN public.lookup_area_struttura_asl area ON ((area.code = n.id_lookup_area_struttura_asl)))
             JOIN public.lookup_site_id asl ON ((asl.code = n.id_asl)))
          WHERE ((n.id_padre > 0) AND (n.trashed_date IS NULL))
        UNION ALL
         SELECT rt.id,
            rt.descrizione,
            t.id_padre AS nonno,
            rt.livello,
            (((t.id_padre || ';'::text) || (rt.pathid)::text))::character varying(1000) AS "varchar",
            ((((t.descrizione_lunga)::text || '->'::text) || (rt.pathdes)::text))::character varying(1000) AS pathdes,
            rt.id_asl,
            rt.idsc,
            rt.tipostruttura,
            rt.codicefk,
            rt.datascadenza,
            rt.disabilitato,
            rt.id_padre,
            rt.anno,
            rt.stato,
            rt.enabled,
            rt.descrizione_area_struttura_complessa,
            COALESCE(rt.id_lookup_area_struttura_asl, t.id_lookup_area_struttura_asl) AS id_lookup_area_struttura_asl,
            rt.ui_struttura_foglio_att_iniziale,
            rt.ui_struttura_foglio_att_finale,
            rt.id_utente_edit,
            rt.percentuale_area_a,
            rt.stato_all2,
            rt.stato_all6,
            COALESCE(rt.descrizione_area_struttura, area.description) AS descrizione_area_struttura,
            rt.codice_interno_univoco,
            rt.data_congelamento,
            rt.codice_ufficio,
            rt.entered,
            rt.modified
           FROM ((public.oia_nodo t
             LEFT JOIN public.lookup_area_struttura_asl area ON ((area.code = t.id_lookup_area_struttura_asl)))
             JOIN recursetree rt ON ((rt.nonno = t.id)))
          WHERE (t.trashed_date IS NULL)
        )
 SELECT recursetree.id,
    recursetree.descrizione,
    recursetree.descrizione AS descrizione_struttura,
    recursetree.nonno,
    recursetree.livello,
    recursetree.livello AS n_livello,
    recursetree.pathid,
    recursetree.pathdes,
    recursetree.id_asl,
    recursetree.tipostruttura AS tipologia_struttura,
    recursetree.idsc AS id_strumento_calcolo,
        CASE
            WHEN (recursetree.tipostruttura = 3) THEN 'S'::text
            ELSE 'V'::text
        END AS flag_sian_veterinari,
    recursetree.tipostruttura AS tipologia_struttura_flag,
    recursetree.codicefk AS codice_interno_fk,
    recursetree.datascadenza AS data_scadenza,
    recursetree.disabilitato,
    recursetree.id_padre,
    recursetree.anno,
    recursetree.stato,
    recursetree.enabled,
    padre.descrizione_lunga AS descrizione_padre,
    recursetree.descrizione_area_struttura_complessa,
    recursetree.id_lookup_area_struttura_asl,
    recursetree.ui_struttura_foglio_att_iniziale,
    recursetree.ui_struttura_foglio_att_finale,
    recursetree.id_utente_edit,
    recursetree.percentuale_area_a,
    recursetree.stato_all2,
    recursetree.stato_all6,
    recursetree.descrizione_area_struttura,
    recursetree.codice_interno_univoco,
    recursetree.data_congelamento,
    recursetree.codice_ufficio,
    recursetree.entered,
    recursetree.modified
   FROM (recursetree
     LEFT JOIN public.oia_nodo padre ON (((padre.codice_interno_fk = recursetree.id_padre) AND (padre.disabilitata = false))))
  WHERE (recursetree.nonno = 8)
  ORDER BY recursetree.id_asl;


ALTER TABLE public.dpat_strutture_asl OWNER TO postgres;

--
-- TOC entry 414 (class 1259 OID 17698)
-- Name: role; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.role (
    role_id integer NOT NULL,
    role character varying(80) NOT NULL,
    description character varying(255) DEFAULT ''::character varying NOT NULL,
    enteredby integer NOT NULL,
    entered timestamp(3) without time zone DEFAULT now() NOT NULL,
    modifiedby integer NOT NULL,
    modified timestamp(3) without time zone DEFAULT now() NOT NULL,
    enabled boolean DEFAULT true NOT NULL,
    role_type integer,
    role_old text,
    admin boolean,
    note text,
    super_ruolo integer,
    descrizione_super_ruolo text,
    in_access boolean DEFAULT true,
    in_dpat boolean DEFAULT false,
    in_nucleo_ispettivo boolean DEFAULT false,
    carico_default integer DEFAULT 0,
    peso_per_somma_ui integer DEFAULT 0,
    id_lookup_qualifica_old integer,
    livello_qualifiche_dpat integer DEFAULT 0,
    enabled_as_qualifica boolean,
    view_lista_utenti_nucleo_ispettivo boolean DEFAULT true,
    peso_per_somma_ui_old integer
);


ALTER TABLE public.role OWNER TO postgres;

--
-- TOC entry 415 (class 1259 OID 17714)
-- Name: role_ext; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.role_ext (
    role_id integer NOT NULL,
    role character varying(80) NOT NULL,
    description character varying(255) DEFAULT ''::character varying NOT NULL,
    enteredby integer NOT NULL,
    entered timestamp(3) without time zone DEFAULT now() NOT NULL,
    modifiedby integer NOT NULL,
    modified timestamp(3) without time zone DEFAULT now() NOT NULL,
    enabled boolean DEFAULT true NOT NULL,
    role_type integer,
    carico_default integer,
    super_ruolo integer,
    descrizione_super_ruolo text,
    role_old text,
    admin boolean,
    note text,
    in_access boolean DEFAULT true,
    in_dpat boolean DEFAULT false,
    in_nucleo_ispettivo boolean DEFAULT false,
    peso_per_somma_ui integer DEFAULT 0,
    id_lookup_qualifica_old integer,
    livello_qualifiche_dpat integer DEFAULT 0,
    enabled_as_qualifica boolean,
    view_lista_utenti_nucleo_ispettivo boolean DEFAULT true
);


ALTER TABLE public.role_ext OWNER TO postgres;

--
-- TOC entry 416 (class 1259 OID 17729)
-- Name: lookup_qualifiche; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.lookup_qualifiche AS
 SELECT a.code,
    a.description,
    a.short_description,
    a.default_item,
    a.level,
    a.enabled,
    a.carico_default,
    a.peso_per_somma_ui,
    a.in_dpat,
    a.view_lista_utenti_nucleo_ispettivo,
    a.gruppo,
    a.in_nucleo_ispettivo,
    a.livello_qualifiche_dpat,
    a.origine
   FROM ( SELECT role.role_id AS code,
            role.role AS description,
            role.description AS short_description,
            false AS default_item,
                CASE
                    WHEN (role.in_dpat = true) THEN 1
                    WHEN ((role.in_dpat = false) AND (role.super_ruolo = 1)) THEN 10
                    WHEN (role.super_ruolo = 2) THEN 0
                    ELSE NULL::integer
                END AS level,
            role.enabled_as_qualifica AS enabled,
            role.carico_default,
            role.peso_per_somma_ui,
            role.in_dpat,
            role.view_lista_utenti_nucleo_ispettivo,
            false AS gruppo,
            role.in_nucleo_ispettivo,
            role.livello_qualifiche_dpat,
            10 AS origine
           FROM public.role
          WHERE role.enabled
        UNION
         SELECT role.role_id AS code,
            role.role AS description,
            role.description AS short_description,
            false AS default_item,
                CASE
                    WHEN (role.in_dpat = true) THEN 1
                    WHEN ((role.in_dpat = false) AND (role.super_ruolo = 1)) THEN 10
                    WHEN (role.super_ruolo = 2) THEN 0
                    ELSE NULL::integer
                END AS level,
            role.enabled_as_qualifica AS enabled,
            role.carico_default,
            role.peso_per_somma_ui,
            role.in_dpat,
            role.view_lista_utenti_nucleo_ispettivo,
            false AS gruppo,
            role.in_nucleo_ispettivo,
            role.livello_qualifiche_dpat,
            11 AS origine
           FROM public.role_ext role
          WHERE role.enabled
        UNION
         SELECT 0 AS code,
            'UTENTI ASL'::character varying(80) AS description,
            'UTENTI ASL'::character varying(255) AS short_description,
            false AS default_item,
            0 AS level,
            true AS enabled,
            NULL::integer AS carico_default,
            NULL::integer AS aspeso_per_somma_ui,
            NULL::boolean AS in_dpat,
            NULL::boolean AS view_lista_utenti_nucleo_ispettivo,
            true AS gruppo,
            true AS in_nucleo_ispettivo,
            0 AS livello_qualifiche_dpat,
            0 AS origine
        UNION
         SELECT 1 AS code,
            'UTENTI EXTRA ASL'::character varying(80) AS description,
            'UTENTI EXTRA ASL'::character varying(255) AS short_description,
            false AS default_item,
            1 AS level,
            true AS enabled,
            NULL::integer AS carico_default,
            NULL::integer AS aspeso_per_somma_ui,
            NULL::boolean AS in_dpat,
            NULL::boolean AS view_lista_utenti_nucleo_ispettivo,
            true AS gruppo,
            true AS in_nucleo_ispettivo,
            1 AS livello_qualifiche_dpat,
            1 AS origine) a
  ORDER BY a.code;


ALTER TABLE public.lookup_qualifiche OWNER TO postgres;

--
-- TOC entry 757 (class 1259 OID 21141)
-- Name: dpat_strumento_calcolo_nominativi; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.dpat_strumento_calcolo_nominativi AS
 SELECT DISTINCT ON (a.codice_interno_fk) a.codice_interno_fk AS codice_interno_fk_,
    a.id_anagrafica_nominativo,
    a.id_lookup_qualifica,
    a.id,
    a.id_dpat_strumento_calcolo_strutture,
    a.trashed_date,
    a.id_old_anagrafica_nominativo,
    a.confermato,
    a.data_conferma,
    a.confermato_da,
    a.data_scadenza,
    a.stato,
    a.codice_interno_fk,
    a.entered_by,
    a.entered,
    a.modified,
    a.modified_by,
    ((
        CASE
            WHEN (a.descrizione IS NOT NULL) THEN a.descrizione
            ELSE ''::character varying
        END)::text)::character varying(1000) AS descrizione,
    a.id_struttura,
    a.level,
    a.id_asl,
    a.anno,
    a.disabilitato,
    a.id_strumento_calcolo,
    a.stato_struttura
   FROM ( SELECT dpat_strumento_calcolo_nominativi_.id_anagrafica_nominativo,
            dpat_strumento_calcolo_nominativi_.id_lookup_qualifica,
            dpat_strumento_calcolo_nominativi_.id,
            dpat_strumento_calcolo_nominativi_.id_dpat_strumento_calcolo_strutture,
            dpat_strumento_calcolo_nominativi_.trashed_date,
            dpat_strumento_calcolo_nominativi_.id_old_anagrafica_nominativo,
            dpat_strumento_calcolo_nominativi_.confermato,
            dpat_strumento_calcolo_nominativi_.data_conferma,
            dpat_strumento_calcolo_nominativi_.confermato_da,
            dpat_strumento_calcolo_nominativi_.data_scadenza,
            dpat_strumento_calcolo_nominativi_.stato,
            dpat_strumento_calcolo_nominativi_.codice_interno_fk,
            dpat_strumento_calcolo_nominativi_.entered_by,
            dpat_strumento_calcolo_nominativi_.entered,
            dpat_strumento_calcolo_nominativi_.modified,
            dpat_strumento_calcolo_nominativi_.modified_by,
            scstr.pathdes AS descrizione,
            scstr.id AS id_struttura,
            lq.livello_qualifiche_dpat AS level,
            scstr.id_asl,
            scstr.anno,
            scstr.disabilitato,
            scstr.id_strumento_calcolo,
            scstr.stato AS stato_struttura
           FROM ((public.dpat_strumento_calcolo_nominativi_
             LEFT JOIN public.dpat_strutture_asl scstr ON (((scstr.codice_interno_fk = dpat_strumento_calcolo_nominativi_.id_dpat_strumento_calcolo_strutture) AND (scstr.disabilitato = false))))
             LEFT JOIN public.lookup_qualifiche lq ON ((lq.code = dpat_strumento_calcolo_nominativi_.id_lookup_qualifica)))
          WHERE ((dpat_strumento_calcolo_nominativi_.trashed_date IS NULL) AND ((dpat_strumento_calcolo_nominativi_.data_scadenza > (now() + '1 day'::interval)) OR (dpat_strumento_calcolo_nominativi_.data_scadenza IS NULL)))) a
  ORDER BY a.codice_interno_fk, a.data_scadenza;


ALTER TABLE public.dpat_strumento_calcolo_nominativi OWNER TO postgres;

--
-- TOC entry 417 (class 1259 OID 17739)
-- Name: dpat_tolleranza_inserimento_cu; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.dpat_tolleranza_inserimento_cu (
    intervallo text,
    inizio_inserimento_cu_nuovo_anno timestamp without time zone
);


ALTER TABLE public.dpat_tolleranza_inserimento_cu OWNER TO postgres;

--
-- TOC entry 418 (class 1259 OID 17744)
-- Name: elenco_attivita_osm_reg; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.elenco_attivita_osm_reg (
    id_ integer NOT NULL,
    org_id integer,
    id_attivita integer,
    descrizione_attivita text,
    id integer NOT NULL
);


ALTER TABLE public.elenco_attivita_osm_reg OWNER TO postgres;

--
-- TOC entry 419 (class 1259 OID 17749)
-- Name: elenco_attivita_osm_reg_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.elenco_attivita_osm_reg_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.elenco_attivita_osm_reg_id_seq OWNER TO postgres;

--
-- TOC entry 7512 (class 0 OID 0)
-- Dependencies: 419
-- Name: elenco_attivita_osm_reg_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.elenco_attivita_osm_reg_id_seq OWNED BY public.elenco_attivita_osm_reg.id_;


--
-- TOC entry 420 (class 1259 OID 17750)
-- Name: elenco_attivita_osm_reg_id_seq1; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.elenco_attivita_osm_reg_id_seq1
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.elenco_attivita_osm_reg_id_seq1 OWNER TO postgres;

--
-- TOC entry 7513 (class 0 OID 0)
-- Dependencies: 420
-- Name: elenco_attivita_osm_reg_id_seq1; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.elenco_attivita_osm_reg_id_seq1 OWNED BY public.elenco_attivita_osm_reg.id;


--
-- TOC entry 421 (class 1259 OID 17751)
-- Name: emissioni_in_atmosfera_camini_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.emissioni_in_atmosfera_camini_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.emissioni_in_atmosfera_camini_id_seq OWNER TO postgres;

--
-- TOC entry 7514 (class 0 OID 0)
-- Dependencies: 421
-- Name: emissioni_in_atmosfera_camini_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.emissioni_in_atmosfera_camini_id_seq OWNED BY public.emissioni_in_atmosfera_camini.id;


--
-- TOC entry 422 (class 1259 OID 17752)
-- Name: evento_blocco; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.evento_blocco (
    id integer NOT NULL,
    data_blocco timestamp without time zone,
    id_evento_blocco_controlli integer,
    data_sblocco timestamp without time zone,
    tipo_blocco text,
    tipo_evento text
);


ALTER TABLE public.evento_blocco OWNER TO postgres;

--
-- TOC entry 423 (class 1259 OID 17757)
-- Name: evento_blocco_controlli; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.evento_blocco_controlli (
    id integer NOT NULL,
    data_blocco timestamp without time zone,
    note text,
    enteredby integer,
    entered timestamp without time zone,
    modified timestamp without time zone,
    modifiedby integer,
    sblocco boolean DEFAULT false,
    data_sblocco timestamp without time zone,
    tipo_blocco text,
    tipo_evento text
);


ALTER TABLE public.evento_blocco_controlli OWNER TO postgres;

--
-- TOC entry 424 (class 1259 OID 17763)
-- Name: evento_blocco_controlli_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.evento_blocco_controlli_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.evento_blocco_controlli_id_seq OWNER TO postgres;

--
-- TOC entry 7515 (class 0 OID 0)
-- Dependencies: 424
-- Name: evento_blocco_controlli_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.evento_blocco_controlli_id_seq OWNED BY public.evento_blocco_controlli.id;


--
-- TOC entry 425 (class 1259 OID 17764)
-- Name: evento_blocco_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.evento_blocco_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.evento_blocco_id_seq OWNER TO postgres;

--
-- TOC entry 7516 (class 0 OID 0)
-- Dependencies: 425
-- Name: evento_blocco_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.evento_blocco_id_seq OWNED BY public.evento_blocco.id;


--
-- TOC entry 426 (class 1259 OID 17765)
-- Name: fascicoli_ispettivi; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.fascicoli_ispettivi (
    id integer NOT NULL,
    numero text,
    data_inizio timestamp without time zone,
    entered timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    enteredby integer,
    modified timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    modifiedby integer,
    trashed_date timestamp without time zone,
    riferimento_id integer,
    riferimento_id_nome_tab text,
    note text,
    stato integer DEFAULT 1,
    data_chiusura timestamp without time zone,
    note_hd text
);


ALTER TABLE public.fascicoli_ispettivi OWNER TO postgres;

--
-- TOC entry 427 (class 1259 OID 17773)
-- Name: fascicoli_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.fascicoli_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.fascicoli_id_seq OWNER TO postgres;

--
-- TOC entry 7517 (class 0 OID 0)
-- Dependencies: 427
-- Name: fascicoli_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.fascicoli_id_seq OWNED BY public.fascicoli_ispettivi.id;


--
-- TOC entry 428 (class 1259 OID 17774)
-- Name: fascicoli_ispettivi_protocolli; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.fascicoli_ispettivi_protocolli (
    id integer NOT NULL,
    id_fascicolo_ispettivo integer,
    anno_protocollo integer,
    numero_protocollo integer,
    enteredby integer,
    entered timestamp without time zone DEFAULT now(),
    trashed_date timestamp without time zone,
    note_hd text
);


ALTER TABLE public.fascicoli_ispettivi_protocolli OWNER TO postgres;

--
-- TOC entry 429 (class 1259 OID 17780)
-- Name: fascicoli_protocolli_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.fascicoli_protocolli_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.fascicoli_protocolli_id_seq OWNER TO postgres;

--
-- TOC entry 7518 (class 0 OID 0)
-- Dependencies: 429
-- Name: fascicoli_protocolli_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.fascicoli_protocolli_id_seq OWNED BY public.fascicoli_ispettivi_protocolli.id;


--
-- TOC entry 430 (class 1259 OID 17781)
-- Name: fasi_lavorazione; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.fasi_lavorazione (
    id integer NOT NULL,
    tipo_quadro text,
    tipo_impianto text,
    punti_emissione text,
    fasi_lavorazione text,
    inquinanti text,
    impianti_abbattimento text
);


ALTER TABLE public.fasi_lavorazione OWNER TO postgres;

--
-- TOC entry 431 (class 1259 OID 17786)
-- Name: fasi_lavorazione_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.fasi_lavorazione_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.fasi_lavorazione_id_seq OWNER TO postgres;

--
-- TOC entry 7519 (class 0 OID 0)
-- Dependencies: 431
-- Name: fasi_lavorazione_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.fasi_lavorazione_id_seq OWNED BY public.fasi_lavorazione.id;


--
-- TOC entry 432 (class 1259 OID 17787)
-- Name: giornata_ispettiva_gruppo_ispettivo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.giornata_ispettiva_gruppo_ispettivo (
    id integer DEFAULT nextval('public.cu_nucleo_id_seq'::regclass) NOT NULL,
    id_giornata_ispettiva integer,
    id_componente integer,
    enabled boolean DEFAULT true,
    livello_modifica integer,
    notes_hd text,
    note_hd text,
    referente boolean DEFAULT false,
    responsabile boolean DEFAULT false,
    id_struttura integer,
    nome_struttura text
);


ALTER TABLE public.giornata_ispettiva_gruppo_ispettivo OWNER TO postgres;

--
-- TOC entry 761 (class 1259 OID 21689)
-- Name: giornate_ispettive_allegati; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.giornate_ispettive_allegati (
    id integer NOT NULL,
    id_giornata_ispettiva integer,
    codice_allegato text,
    nome_allegato text,
    oggetto_allegato text,
    enteredby integer,
    entered timestamp without time zone DEFAULT now(),
    trashedby integer,
    trashed_date timestamp without time zone,
    note_hd text
);


ALTER TABLE public.giornate_ispettive_allegati OWNER TO postgres;

--
-- TOC entry 760 (class 1259 OID 21688)
-- Name: giornate_ispettive_allegati_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.giornate_ispettive_allegati_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.giornate_ispettive_allegati_id_seq OWNER TO postgres;

--
-- TOC entry 7520 (class 0 OID 0)
-- Dependencies: 760
-- Name: giornate_ispettive_allegati_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.giornate_ispettive_allegati_id_seq OWNED BY public.giornate_ispettive_allegati.id;


--
-- TOC entry 433 (class 1259 OID 17796)
-- Name: giornate_ispettive_motivi_ispezione; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.giornate_ispettive_motivi_ispezione (
    id_tipo_ispezione integer,
    descrizione_tipo_ispezione character varying,
    codice_int_tipo_ispe text,
    id_piano integer,
    descrizione_piano character varying,
    codice_int_piano integer,
    ordinamento integer,
    ordinamento_figli integer,
    livello_tipo_ispezione integer,
    data_scadenza timestamp without time zone,
    codice_interno_ind text,
    anno integer,
    "coalesce" timestamp without time zone,
    codice text,
    tipo_attivita text
);


ALTER TABLE public.giornate_ispettive_motivi_ispezione OWNER TO postgres;

--
-- TOC entry 434 (class 1259 OID 17801)
-- Name: gisa_storico_operazioni_utenti; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.gisa_storico_operazioni_utenti (
    user_id integer NOT NULL,
    username character varying(255) NOT NULL,
    ip character varying(20) NOT NULL,
    data timestamp without time zone NOT NULL,
    path text NOT NULL,
    automatico boolean DEFAULT false NOT NULL,
    id integer NOT NULL,
    parametri text,
    browser text
);


ALTER TABLE public.gisa_storico_operazioni_utenti OWNER TO postgres;

--
-- TOC entry 435 (class 1259 OID 17807)
-- Name: gisa_storico_operazioni_utenti_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.gisa_storico_operazioni_utenti_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.gisa_storico_operazioni_utenti_id_seq OWNER TO postgres;

--
-- TOC entry 7521 (class 0 OID 0)
-- Dependencies: 435
-- Name: gisa_storico_operazioni_utenti_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.gisa_storico_operazioni_utenti_id_seq OWNED BY public.gisa_storico_operazioni_utenti.id;


--
-- TOC entry 436 (class 1259 OID 17808)
-- Name: gruppi_template_no_scia; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.gruppi_template_no_scia (
    id integer NOT NULL,
    html_label text,
    ftl_name text
);


ALTER TABLE public.gruppi_template_no_scia OWNER TO postgres;

--
-- TOC entry 437 (class 1259 OID 17813)
-- Name: gruppi_template_no_scia_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.gruppi_template_no_scia_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.gruppi_template_no_scia_id_seq OWNER TO postgres;

--
-- TOC entry 7522 (class 0 OID 0)
-- Dependencies: 437
-- Name: gruppi_template_no_scia_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.gruppi_template_no_scia_id_seq OWNED BY public.gruppi_template_no_scia.id;


--
-- TOC entry 438 (class 1259 OID 17814)
-- Name: guru_log; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.guru_log (
    id integer NOT NULL,
    entered timestamp without time zone DEFAULT now(),
    enteredby integer,
    ip_enteredby text,
    operazione text,
    output text,
    user_id integer,
    username text
);


ALTER TABLE public.guru_log OWNER TO postgres;

--
-- TOC entry 439 (class 1259 OID 17820)
-- Name: import_aia_anagrafiche; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.import_aia_anagrafiche (
    id_aia text,
    ragione_sociale text,
    codice_fiscale text,
    comune text,
    pr text,
    indirizzo text,
    coordinate_geografiche_x text,
    coordinate_geografiche_y text,
    note text,
    id integer NOT NULL
);


ALTER TABLE public.import_aia_anagrafiche OWNER TO postgres;

--
-- TOC entry 440 (class 1259 OID 17825)
-- Name: import_aia_anagrafiche_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.import_aia_anagrafiche_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.import_aia_anagrafiche_id_seq OWNER TO postgres;

--
-- TOC entry 7523 (class 0 OID 0)
-- Dependencies: 440
-- Name: import_aia_anagrafiche_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.import_aia_anagrafiche_id_seq OWNED BY public.import_aia_anagrafiche.id;


--
-- TOC entry 441 (class 1259 OID 17826)
-- Name: import_aia_decreti; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.import_aia_decreti (
    id_aia text,
    autorizzazione text,
    num_decreto_dirigenziale text,
    data_decreto_dirigenziale text,
    nota_su_decreto text,
    burc text
);


ALTER TABLE public.import_aia_decreti OWNER TO postgres;

--
-- TOC entry 442 (class 1259 OID 17831)
-- Name: import_aia_linee_principali; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.import_aia_linee_principali (
    id_aia text,
    denominazione_categoria_impianto text,
    codice_ipcc_principale text,
    descrizione_att_principale text
);


ALTER TABLE public.import_aia_linee_principali OWNER TO postgres;

--
-- TOC entry 443 (class 1259 OID 17836)
-- Name: import_aia_linee_secondarie; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.import_aia_linee_secondarie (
    id_aia text,
    denominazione_categoria_impianto text,
    codice_ipcc_secondaria text,
    descrizione_att_secondaria text
);


ALTER TABLE public.import_aia_linee_secondarie OWNER TO postgres;

--
-- TOC entry 444 (class 1259 OID 17841)
-- Name: indirizzo_temp; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.indirizzo_temp (
    toponimo integer,
    topon text,
    via text,
    civico text,
    clean text
);


ALTER TABLE public.indirizzo_temp OWNER TO postgres;

--
-- TOC entry 445 (class 1259 OID 17846)
-- Name: iter_cartografie; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.iter_cartografie (
    id integer NOT NULL,
    nome text,
    descrizione text,
    url text,
    level integer DEFAULT 0,
    entered timestamp without time zone DEFAULT now(),
    enabled boolean DEFAULT true,
    note_hd text
);


ALTER TABLE public.iter_cartografie OWNER TO postgres;

--
-- TOC entry 446 (class 1259 OID 17854)
-- Name: iter_cartografie_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.iter_cartografie_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.iter_cartografie_id_seq OWNER TO postgres;

--
-- TOC entry 7524 (class 0 OID 0)
-- Dependencies: 446
-- Name: iter_cartografie_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.iter_cartografie_id_seq OWNED BY public.iter_cartografie.id;


--
-- TOC entry 447 (class 1259 OID 17855)
-- Name: la_imprese_linee_attivita; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.la_imprese_linee_attivita (
    id integer NOT NULL,
    org_id integer,
    id_rel_ateco_attivita integer,
    primario boolean,
    entered timestamp with time zone DEFAULT now(),
    entered_by integer,
    modified timestamp with time zone DEFAULT now(),
    modified_by integer,
    trashed_date timestamp with time zone,
    id_attivita_masterlist integer,
    id_attivita_masterlist_old integer,
    mappato boolean DEFAULT false,
    note_ht text,
    doppione boolean,
    flag_spostamento boolean,
    scelto_per_mapping boolean DEFAULT false,
    cancellazione_per_mapping boolean DEFAULT false,
    note_internal_use_only text
);


ALTER TABLE public.la_imprese_linee_attivita OWNER TO postgres;

--
-- TOC entry 448 (class 1259 OID 17865)
-- Name: la_imprese_linee_attivita_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.la_imprese_linee_attivita_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.la_imprese_linee_attivita_id_seq OWNER TO postgres;

--
-- TOC entry 7525 (class 0 OID 0)
-- Dependencies: 448
-- Name: la_imprese_linee_attivita_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.la_imprese_linee_attivita_id_seq OWNED BY public.la_imprese_linee_attivita.id;


--
-- TOC entry 449 (class 1259 OID 17866)
-- Name: la_linee_attivita; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.la_linee_attivita (
    id integer NOT NULL,
    categoria character varying(600),
    linea_attivita character varying(600)
);


ALTER TABLE public.la_linee_attivita OWNER TO postgres;

--
-- TOC entry 450 (class 1259 OID 17871)
-- Name: la_linee_attivita_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.la_linee_attivita_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.la_linee_attivita_id_seq OWNER TO postgres;

--
-- TOC entry 7526 (class 0 OID 0)
-- Dependencies: 450
-- Name: la_linee_attivita_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.la_linee_attivita_id_seq OWNED BY public.la_linee_attivita.id;


--
-- TOC entry 451 (class 1259 OID 17872)
-- Name: la_rel_ateco_attivita; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.la_rel_ateco_attivita (
    id integer NOT NULL,
    id_linee_attivita integer,
    id_lookup_codistat integer
);


ALTER TABLE public.la_rel_ateco_attivita OWNER TO postgres;

--
-- TOC entry 452 (class 1259 OID 17875)
-- Name: la_rel_ateco_attivita_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.la_rel_ateco_attivita_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.la_rel_ateco_attivita_id_seq OWNER TO postgres;

--
-- TOC entry 7527 (class 0 OID 0)
-- Dependencies: 452
-- Name: la_rel_ateco_attivita_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.la_rel_ateco_attivita_id_seq OWNED BY public.la_rel_ateco_attivita.id;


--
-- TOC entry 453 (class 1259 OID 17876)
-- Name: laboratori_haccp_controllati; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.laboratori_haccp_controllati (
    id integer NOT NULL,
    org_id integer,
    ticket_id integer,
    entered timestamp without time zone DEFAULT now(),
    entered_by integer,
    modified timestamp without time zone,
    modified_by integer,
    trashed_date timestamp(3) without time zone,
    dati_lab text
);


ALTER TABLE public.laboratori_haccp_controllati OWNER TO postgres;

--
-- TOC entry 454 (class 1259 OID 17882)
-- Name: laboratori_haccp_controllati_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.laboratori_haccp_controllati_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.laboratori_haccp_controllati_id_seq OWNER TO postgres;

--
-- TOC entry 7528 (class 0 OID 0)
-- Dependencies: 454
-- Name: laboratori_haccp_controllati_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.laboratori_haccp_controllati_id_seq OWNED BY public.laboratori_haccp_controllati.id;


--
-- TOC entry 455 (class 1259 OID 17883)
-- Name: linee_attivita_giornate_ispettive; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.linee_attivita_giornate_ispettive (
    id_giornata_ispettiva integer NOT NULL,
    id_linea_attivita integer,
    flag_spostamento boolean,
    note text,
    id_linea_attivita_old integer,
    trashed_date timestamp without time zone,
    id_vecchio_tipo_operatore integer,
    codice_linea character varying,
    riferimento_nome_tab character varying,
    note_internal_use_only text,
    modified timestamp without time zone,
    modified_by integer,
    entered timestamp without time zone,
    entered_by integer,
    categoria_quantitativa integer
);


ALTER TABLE public.linee_attivita_giornate_ispettive OWNER TO postgres;

--
-- TOC entry 456 (class 1259 OID 17888)
-- Name: linee_mobili_html_fields; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.linee_mobili_html_fields (
    id integer NOT NULL,
    id_linea integer NOT NULL,
    nome_campo character varying NOT NULL,
    tipo_campo character varying NOT NULL,
    label_campo character varying NOT NULL,
    tabella_lookup character varying,
    javascript_function character varying,
    javascript_function_evento character varying,
    link_value character varying,
    ordine_campo integer,
    maxlength integer,
    only_hd integer DEFAULT 0,
    label_link character varying,
    multiple boolean,
    obbligatorio boolean DEFAULT true,
    gestione_interna boolean DEFAULT false,
    ordine integer,
    enabled boolean DEFAULT true,
    readonly boolean DEFAULT false,
    dbi_generazione character varying,
    regex_expr character varying,
    messaggio_se_invalid character varying,
    id_linea_produttiva_old integer,
    codice_raggruppamento text
);


ALTER TABLE public.linee_mobili_html_fields OWNER TO postgres;

--
-- TOC entry 457 (class 1259 OID 17898)
-- Name: linee_mobili_html_fields_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.linee_mobili_html_fields_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.linee_mobili_html_fields_id_seq OWNER TO postgres;

--
-- TOC entry 7529 (class 0 OID 0)
-- Dependencies: 457
-- Name: linee_mobili_html_fields_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.linee_mobili_html_fields_id_seq OWNED BY public.linee_mobili_html_fields.id;


--
-- TOC entry 458 (class 1259 OID 17899)
-- Name: lista_controlli_ufficiali; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lista_controlli_ufficiali (
    id integer NOT NULL,
    tipologia_operatore integer,
    sql_join text,
    sql_campi_variabili text
);


ALTER TABLE public.lista_controlli_ufficiali OWNER TO postgres;

--
-- TOC entry 459 (class 1259 OID 17904)
-- Name: lista_controlli_ufficiali_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lista_controlli_ufficiali_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lista_controlli_ufficiali_id_seq OWNER TO postgres;

--
-- TOC entry 7530 (class 0 OID 0)
-- Dependencies: 459
-- Name: lista_controlli_ufficiali_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lista_controlli_ufficiali_id_seq OWNED BY public.lista_controlli_ufficiali.id;


--
-- TOC entry 460 (class 1259 OID 17905)
-- Name: lista_utenti_centralizzata; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.lista_utenti_centralizzata AS
 SELECT a.in_dpat,
    a.in_access,
    a.in_nucleo_ispettivo,
    a.username,
    a.password,
    a.role_id,
    a.last_login,
    a.manager_id,
    ad.site_id AS siteid,
    a.last_ip,
    a.timezone,
    a.startofday AS access_startofday,
    a.endofday AS access_endofday,
    a.expires,
    a.alias,
    a.contact_id AS contact_id_link,
    a.user_id AS access_user_id,
    r.carico_default AS carico_lavoro_annuale,
    a.enabled AS access_enabled,
    a.assistant AS access_assistant,
    a.entered AS access_entered,
    a.enteredby AS access_enteredby,
    a.modified AS access_modified,
    a.modifiedby AS access_modifiedby,
    a.currency,
    a.language,
    a.webdav_password,
    a.hidden,
    a.allow_webdav_access,
    a.allow_httpapi_access,
    a.data_scadenza,
    r.role AS systemrole,
    r.role_type,
    m_usr.enabled AS mgr_enabled,
    b.description AS site_id_name,
    c.contact_id,
    c.user_id,
    c.org_id,
    c.company,
    c.title,
    c.department,
    c.super,
    c.namesalutation,
    c.namelast,
    c.namefirst,
    c.namemiddle,
    c.namesuffix,
    c.assistant,
    c.birthdate,
    c.notes,
    c.site,
    c.locale,
    c.employee_id,
    c.employmenttype,
    c.startofday,
    c.endofday,
    c.entered,
    c.enteredby,
    c.modified,
    c.modifiedby,
    c.enabled,
    c.owner,
    c.custom1,
    c.url,
    c.primary_contact,
    c.employee,
    c.org_name,
    c.access_type,
    c.status_id,
    c.import_id,
    c.information_update_date,
    c.lead,
    c.lead_status,
    c.source,
    c.rating,
    c.comments,
    c.conversion_date,
    c.additional_names,
    c.nickname,
    c.role,
    c.trashed_date,
    c.secret_word,
    c.account_number,
    c.revenue,
    c.industry_temp_code,
    c.potential,
    c.no_email,
    c.no_mail,
    c.no_phone,
    c.no_textmessage,
    c.no_im,
    c.no_fax,
    ad.site_id,
    c.assigned_date,
    c.lead_trashed_date,
    c.employees,
    c.duns_type,
    c.duns_number,
    c.business_name_two,
    c.sic_code,
    c.year_started,
    c.sic_description,
    c.site_id_old,
    c.codice_fiscale,
    c.luogo,
    true AS orgenabled,
    'n.d'::text AS departmentname,
    ''::text AS city,
    ''::text AS postalcode,
    'n.d'::text AS industry_name,
    'n.d'::text AS source_name,
    'n.d'::text AS stage_name,
    'n.d'::text AS rating_name,
    'n.d'::text AS import_name,
    ''::text AS state,
    r.super_ruolo,
    r.descrizione_super_ruolo,
    ad.visibilita_delega,
    a.pec_suap,
    a.callback_suap,
    ''::text AS istat_comune,
    ad.num_registrazione_stab,
    a.callback_suap_ko,
    r.enabled_as_qualifica
   FROM (((((public.access a
     LEFT JOIN public.contact_ c ON ((a.contact_id = c.contact_id)))
     LEFT JOIN public.access_ m_usr ON ((a.manager_id = m_usr.user_id)))
     LEFT JOIN public.role r ON ((a.role_id = r.role_id)))
     LEFT JOIN public.access_dati ad ON ((ad.user_id = a.user_id)))
     LEFT JOIN public.lookup_site_id b ON ((ad.site_id = b.code)))
  WHERE ((a.user_id > '-1'::integer) AND (a.trashed_date IS NULL))
UNION
 SELECT a.in_dpat,
    a.in_access,
    a.in_nucleo_ispettivo,
    a.username,
    a.password,
    a.role_id,
    a.last_login,
    a.manager_id,
    ad.site_id AS siteid,
    a.last_ip,
    a.timezone,
    a.startofday AS access_startofday,
    a.endofday AS access_endofday,
    a.expires,
    a.alias,
    a.contact_id AS contact_id_link,
    a.user_id AS access_user_id,
    r.carico_default AS carico_lavoro_annuale,
    a.enabled AS access_enabled,
    a.assistant AS access_assistant,
    a.entered AS access_entered,
    a.enteredby AS access_enteredby,
    a.modified AS access_modified,
    a.modifiedby AS access_modifiedby,
    a.currency,
    a.language,
    a.webdav_password,
    a.hidden,
    a.allow_webdav_access,
    a.allow_httpapi_access,
    a.data_scadenza,
    r.role AS systemrole,
    r.role_type,
    m_usr.enabled AS mgr_enabled,
    b.description AS site_id_name,
    c.contact_id,
    c.user_id,
    c.org_id,
    c.company,
    c.title,
    c.department,
    c.super,
    c.namesalutation,
    c.namelast,
    c.namefirst,
    c.namemiddle,
    c.namesuffix,
    c.assistant,
    c.birthdate,
    c.notes,
    c.site,
    c.locale,
    c.employee_id,
    c.employmenttype,
    c.startofday,
    c.endofday,
    c.entered,
    c.enteredby,
    c.modified,
    c.modifiedby,
    c.enabled,
    c.owner,
    c.custom1,
    c.url,
    c.primary_contact,
    c.employee,
    c.org_name,
    c.access_type,
    c.status_id,
    c.import_id,
    c.information_update_date,
    c.lead,
    c.lead_status,
    c.source,
    c.rating,
    c.comments,
    c.conversion_date,
    c.additional_names,
    c.nickname,
    c.role,
    c.trashed_date,
    c.secret_word,
    c.account_number,
    c.revenue,
    c.industry_temp_code,
    c.potential,
    c.no_email,
    c.no_mail,
    c.no_phone,
    c.no_textmessage,
    c.no_im,
    c.no_fax,
    ad.site_id,
    c.assigned_date,
    c.lead_trashed_date,
    c.employees,
    c.duns_type,
    c.duns_number,
    c.business_name_two,
    c.sic_code,
    c.year_started,
    c.sic_description,
    c.site_id_old,
    c.codice_fiscale,
    c.luogo,
    true AS orgenabled,
    'n.d'::text AS departmentname,
    ''::text AS city,
    ''::text AS postalcode,
    'n.d'::text AS industry_name,
    'n.d'::text AS source_name,
    'n.d'::text AS stage_name,
    'n.d'::text AS rating_name,
    'n.d'::text AS import_name,
    ''::text AS state,
    r.super_ruolo,
    r.descrizione_super_ruolo,
    ad.visibilita_delega,
    a.pec_suap,
    a.callback_suap,
    a.istat_comune,
    ad.num_registrazione_stab,
    a.callback_suap_ko,
    r.enabled_as_qualifica
   FROM (((((public.access_ext a
     LEFT JOIN public.contact_ext_ c ON ((a.contact_id = c.contact_id)))
     LEFT JOIN public.access_ext_ m_usr ON ((a.manager_id = m_usr.user_id)))
     LEFT JOIN public.role_ext r ON ((a.role_id = r.role_id)))
     LEFT JOIN public.access_dati ad ON ((ad.user_id = a.user_id)))
     LEFT JOIN public.lookup_site_id b ON ((ad.site_id = b.code)))
  WHERE ((a.user_id > '-1'::integer) AND (a.trashed_date IS NULL));


ALTER TABLE public.lista_utenti_centralizzata OWNER TO postgres;

--
-- TOC entry 461 (class 1259 OID 17910)
-- Name: lista_utenti_centralizzata_storico; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.lista_utenti_centralizzata_storico AS
 SELECT a.in_dpat,
    a.in_access,
    a.in_nucleo_ispettivo,
    a.username,
    a.password,
    a.role_id,
    a.last_login,
    a.manager_id,
    a.site_id AS siteid,
    a.last_ip,
    a.timezone,
    a.startofday AS access_startofday,
    a.endofday AS access_endofday,
    a.expires,
    a.alias,
    a.contact_id AS contact_id_link,
    a.user_id AS access_user_id,
    r.carico_default AS carico_lavoro_annuale,
    a.enabled AS access_enabled,
    a.assistant AS access_assistant,
    a.entered AS access_entered,
    a.enteredby AS access_enteredby,
    a.modified AS access_modified,
    a.modifiedby AS access_modifiedby,
    a.currency,
    a.language,
    a.webdav_password,
    a.hidden,
    a.allow_webdav_access,
    a.allow_httpapi_access,
    a.data_scadenza,
    r.role AS systemrole,
    r.role_type,
    m_usr.enabled AS mgr_enabled,
    b.description AS site_id_name,
    c.contact_id,
    a.user_id,
    c.org_id,
    c.company,
    c.title,
    c.department,
    c.super,
    c.namesalutation,
    c.namelast,
    c.namefirst,
    c.namemiddle,
    c.namesuffix,
    c.assistant,
    c.birthdate,
    c.notes,
    c.site,
    c.locale,
    c.employee_id,
    c.employmenttype,
    c.startofday,
    c.endofday,
    c.entered,
    c.enteredby,
    c.modified,
    c.modifiedby,
    c.enabled,
    c.owner,
    c.custom1,
    c.url,
    c.primary_contact,
    c.employee,
    c.org_name,
    c.access_type,
    c.status_id,
    c.import_id,
    c.information_update_date,
    c.lead,
    c.lead_status,
    c.source,
    c.rating,
    c.comments,
    c.conversion_date,
    c.additional_names,
    c.nickname,
    c.role,
    c.trashed_date,
    c.secret_word,
    c.account_number,
    c.revenue,
    c.industry_temp_code,
    c.potential,
    c.no_email,
    c.no_mail,
    c.no_phone,
    c.no_textmessage,
    c.no_im,
    c.no_fax,
    c.site_id,
    c.assigned_date,
    c.lead_trashed_date,
    c.employees,
    c.duns_type,
    c.duns_number,
    c.business_name_two,
    c.sic_code,
    c.year_started,
    c.sic_description,
    c.site_id_old,
    c.codice_fiscale,
    c.luogo,
    true AS orgenabled,
    'n.d'::text AS departmentname,
    ''::text AS city,
    ''::text AS postalcode,
    'n.d'::text AS industry_name,
    'n.d'::text AS source_name,
    'n.d'::text AS stage_name,
    'n.d'::text AS rating_name,
    'n.d'::text AS import_name,
    ''::text AS state,
    r.super_ruolo,
    r.descrizione_super_ruolo,
    c.visibilita_delega,
    a.pec_suap,
    a.callback_suap,
    ''::text AS istat_comune,
    a.callback_suap_ko
   FROM ((((public.access_ a
     LEFT JOIN public.contact_ c ON ((a.contact_id = c.contact_id)))
     LEFT JOIN public.access_ m_usr ON ((a.manager_id = m_usr.user_id)))
     LEFT JOIN public.role r ON ((a.role_id = r.role_id)))
     LEFT JOIN public.lookup_site_id b ON ((a.site_id = b.code)))
  WHERE ((a.user_id > '-1'::integer) AND (a.trashed_date IS NULL))
UNION
 SELECT a.in_dpat,
    a.in_access,
    a.in_nucleo_ispettivo,
    a.username,
    a.password,
    a.role_id,
    a.last_login,
    a.manager_id,
    a.site_id AS siteid,
    a.last_ip,
    a.timezone,
    a.startofday AS access_startofday,
    a.endofday AS access_endofday,
    a.expires,
    a.alias,
    a.contact_id AS contact_id_link,
    a.user_id AS access_user_id,
    r.carico_default AS carico_lavoro_annuale,
    a.enabled AS access_enabled,
    a.assistant AS access_assistant,
    a.entered AS access_entered,
    a.enteredby AS access_enteredby,
    a.modified AS access_modified,
    a.modifiedby AS access_modifiedby,
    a.currency,
    a.language,
    a.webdav_password,
    a.hidden,
    a.allow_webdav_access,
    a.allow_httpapi_access,
    a.data_scadenza,
    r.role AS systemrole,
    r.role_type,
    m_usr.enabled AS mgr_enabled,
    b.description AS site_id_name,
    c.contact_id,
    a.user_id,
    c.org_id,
    c.company,
    c.title,
    c.department,
    c.super,
    c.namesalutation,
    c.namelast,
    c.namefirst,
    c.namemiddle,
    c.namesuffix,
    c.assistant,
    c.birthdate,
    c.notes,
    c.site,
    c.locale,
    c.employee_id,
    c.employmenttype,
    c.startofday,
    c.endofday,
    c.entered,
    c.enteredby,
    c.modified,
    c.modifiedby,
    c.enabled,
    c.owner,
    c.custom1,
    c.url,
    c.primary_contact,
    c.employee,
    c.org_name,
    c.access_type,
    c.status_id,
    c.import_id,
    c.information_update_date,
    c.lead,
    c.lead_status,
    c.source,
    c.rating,
    c.comments,
    c.conversion_date,
    c.additional_names,
    c.nickname,
    c.role,
    c.trashed_date,
    c.secret_word,
    c.account_number,
    c.revenue,
    c.industry_temp_code,
    c.potential,
    c.no_email,
    c.no_mail,
    c.no_phone,
    c.no_textmessage,
    c.no_im,
    c.no_fax,
    c.site_id,
    c.assigned_date,
    c.lead_trashed_date,
    c.employees,
    c.duns_type,
    c.duns_number,
    c.business_name_two,
    c.sic_code,
    c.year_started,
    c.sic_description,
    c.site_id_old,
    c.codice_fiscale,
    c.luogo,
    true AS orgenabled,
    'n.d'::text AS departmentname,
    ''::text AS city,
    ''::text AS postalcode,
    'n.d'::text AS industry_name,
    'n.d'::text AS source_name,
    'n.d'::text AS stage_name,
    'n.d'::text AS rating_name,
    'n.d'::text AS import_name,
    ''::text AS state,
    r.super_ruolo,
    r.descrizione_super_ruolo,
    c.visibilita_delega,
    a.pec_suap,
    a.callback_suap,
    a.istat_comune,
    a.callback_suap_ko
   FROM ((((public.access_ext_ a
     LEFT JOIN public.contact_ext_ c ON ((a.contact_id = c.contact_id)))
     LEFT JOIN public.access_ext_ m_usr ON ((a.manager_id = m_usr.user_id)))
     LEFT JOIN public.role_ext r ON ((a.role_id = r.role_id)))
     LEFT JOIN public.lookup_site_id b ON ((a.site_id = b.code)))
  WHERE ((a.user_id > '-1'::integer) AND (a.trashed_date IS NULL));


ALTER TABLE public.lista_utenti_centralizzata_storico OWNER TO postgres;

--
-- TOC entry 462 (class 1259 OID 17915)
-- Name: lock_action; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lock_action (
    id integer NOT NULL,
    name_action character varying(200),
    name_command character varying(200),
    enabled boolean
);


ALTER TABLE public.lock_action OWNER TO postgres;

--
-- TOC entry 463 (class 1259 OID 17918)
-- Name: lock_action_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lock_action_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lock_action_id_seq OWNER TO postgres;

--
-- TOC entry 7531 (class 0 OID 0)
-- Dependencies: 463
-- Name: lock_action_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lock_action_id_seq OWNED BY public.lock_action.id;


--
-- TOC entry 759 (class 1259 OID 21545)
-- Name: log_chiamate_get_documenti_sicra; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.log_chiamate_get_documenti_sicra (
    id integer NOT NULL,
    data timestamp without time zone,
    ip_chiamante text,
    request text,
    response text
);


ALTER TABLE public.log_chiamate_get_documenti_sicra OWNER TO postgres;

--
-- TOC entry 758 (class 1259 OID 21544)
-- Name: log_chiamate_get_documenti_sicra_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.log_chiamate_get_documenti_sicra_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.log_chiamate_get_documenti_sicra_id_seq OWNER TO postgres;

--
-- TOC entry 7532 (class 0 OID 0)
-- Dependencies: 758
-- Name: log_chiamate_get_documenti_sicra_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.log_chiamate_get_documenti_sicra_id_seq OWNED BY public.log_chiamate_get_documenti_sicra.id;


--
-- TOC entry 464 (class 1259 OID 17919)
-- Name: log_import_aia; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.log_import_aia (
    id integer NOT NULL,
    id_import_aia integer,
    riferimento_id integer,
    riferimento_id_nome_tab text,
    dbi text,
    output integer,
    entered timestamp without time zone DEFAULT now(),
    modified timestamp without time zone,
    note_hd text,
    error text
);


ALTER TABLE public.log_import_aia OWNER TO postgres;

--
-- TOC entry 465 (class 1259 OID 17925)
-- Name: log_import_aia_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.log_import_aia_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.log_import_aia_id_seq OWNER TO postgres;

--
-- TOC entry 7533 (class 0 OID 0)
-- Dependencies: 465
-- Name: log_import_aia_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.log_import_aia_id_seq OWNED BY public.log_import_aia.id;


--
-- TOC entry 466 (class 1259 OID 17926)
-- Name: log_import_gisa_remoto; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.log_import_gisa_remoto (
    id integer NOT NULL,
    riferimento_id_remoto integer,
    riferimento_id_nome_tab_remoto text,
    riferimento_id integer,
    riferimento_id_nome_tab text,
    dbi text,
    output integer,
    entered timestamp without time zone DEFAULT now(),
    modified timestamp without time zone,
    note_hd text,
    error text
);


ALTER TABLE public.log_import_gisa_remoto OWNER TO postgres;

--
-- TOC entry 467 (class 1259 OID 17932)
-- Name: log_import_gisa_remoto_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.log_import_gisa_remoto_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.log_import_gisa_remoto_id_seq OWNER TO postgres;

--
-- TOC entry 7534 (class 0 OID 0)
-- Dependencies: 467
-- Name: log_import_gisa_remoto_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.log_import_gisa_remoto_id_seq OWNED BY public.log_import_gisa_remoto.id;


--
-- TOC entry 468 (class 1259 OID 17933)
-- Name: lookup_access_types; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_access_types (
    code integer NOT NULL,
    link_module_id integer NOT NULL,
    description character varying(50) NOT NULL,
    default_item boolean DEFAULT false,
    level integer,
    enabled boolean DEFAULT true,
    rule_id integer NOT NULL
);


ALTER TABLE public.lookup_access_types OWNER TO postgres;

--
-- TOC entry 469 (class 1259 OID 17938)
-- Name: lookup_access_types_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_access_types_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_access_types_code_seq OWNER TO postgres;

--
-- TOC entry 7535 (class 0 OID 0)
-- Dependencies: 469
-- Name: lookup_access_types_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_access_types_code_seq OWNED BY public.lookup_access_types.code;


--
-- TOC entry 470 (class 1259 OID 17939)
-- Name: lookup_account_size; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_account_size (
    code integer NOT NULL,
    description character varying(300) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_account_size OWNER TO postgres;

--
-- TOC entry 471 (class 1259 OID 17945)
-- Name: lookup_account_size_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_account_size_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_account_size_code_seq OWNER TO postgres;

--
-- TOC entry 7536 (class 0 OID 0)
-- Dependencies: 471
-- Name: lookup_account_size_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_account_size_code_seq OWNED BY public.lookup_account_size.code;


--
-- TOC entry 472 (class 1259 OID 17946)
-- Name: lookup_articoli_azioni; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_articoli_azioni (
    code integer NOT NULL,
    description character varying(300) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_articoli_azioni OWNER TO postgres;

--
-- TOC entry 473 (class 1259 OID 17952)
-- Name: lookup_articoli_azioni_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_articoli_azioni_code_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_articoli_azioni_code_seq OWNER TO postgres;

--
-- TOC entry 7537 (class 0 OID 0)
-- Dependencies: 473
-- Name: lookup_articoli_azioni_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_articoli_azioni_code_seq OWNED BY public.lookup_articoli_azioni.code;


--
-- TOC entry 474 (class 1259 OID 17953)
-- Name: lookup_audit_tipo_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_audit_tipo_code_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_audit_tipo_code_seq OWNER TO postgres;

--
-- TOC entry 7538 (class 0 OID 0)
-- Dependencies: 474
-- Name: lookup_audit_tipo_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_audit_tipo_code_seq OWNED BY public.lookup_audit_tipo.code;


--
-- TOC entry 475 (class 1259 OID 17954)
-- Name: lookup_autorizzazione_tipo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_autorizzazione_tipo (
    code integer NOT NULL,
    description character varying(300) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_autorizzazione_tipo OWNER TO postgres;

--
-- TOC entry 476 (class 1259 OID 17960)
-- Name: lookup_autorizzazione_tipo_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_autorizzazione_tipo_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_autorizzazione_tipo_code_seq OWNER TO postgres;

--
-- TOC entry 7539 (class 0 OID 0)
-- Dependencies: 476
-- Name: lookup_autorizzazione_tipo_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_autorizzazione_tipo_code_seq OWNED BY public.lookup_autorizzazione_tipo.code;


--
-- TOC entry 477 (class 1259 OID 17961)
-- Name: lookup_azioni_adottate; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_azioni_adottate (
    code integer NOT NULL,
    description character varying(300) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_azioni_adottate OWNER TO postgres;

--
-- TOC entry 478 (class 1259 OID 17967)
-- Name: lookup_azioni_adottate_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_azioni_adottate_code_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_azioni_adottate_code_seq OWNER TO postgres;

--
-- TOC entry 7540 (class 0 OID 0)
-- Dependencies: 478
-- Name: lookup_azioni_adottate_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_azioni_adottate_code_seq OWNED BY public.lookup_azioni_adottate.code;


--
-- TOC entry 479 (class 1259 OID 17968)
-- Name: lookup_bpi_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_bpi_code_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_bpi_code_seq OWNER TO postgres;

--
-- TOC entry 7541 (class 0 OID 0)
-- Dependencies: 479
-- Name: lookup_bpi_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_bpi_code_seq OWNED BY public.lookup_bpi.code;


--
-- TOC entry 480 (class 1259 OID 17969)
-- Name: lookup_buffer_stato; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_buffer_stato (
    code integer NOT NULL,
    description text,
    level integer,
    default_item boolean,
    enabled boolean
);


ALTER TABLE public.lookup_buffer_stato OWNER TO postgres;

--
-- TOC entry 481 (class 1259 OID 17974)
-- Name: lookup_categoria_specie_allevata; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_categoria_specie_allevata (
    code integer NOT NULL,
    description character varying(300) NOT NULL,
    short_description character varying(300),
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_categoria_specie_allevata OWNER TO postgres;

--
-- TOC entry 482 (class 1259 OID 17982)
-- Name: lookup_categoria_specie_allevata_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_categoria_specie_allevata_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_categoria_specie_allevata_code_seq OWNER TO postgres;

--
-- TOC entry 7542 (class 0 OID 0)
-- Dependencies: 482
-- Name: lookup_categoria_specie_allevata_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_categoria_specie_allevata_code_seq OWNED BY public.lookup_categoria_specie_allevata.code;


--
-- TOC entry 483 (class 1259 OID 17983)
-- Name: lookup_categoriarischio_soa; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_categoriarischio_soa (
    code integer NOT NULL,
    description character varying(300) NOT NULL,
    short_description character varying(300),
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true,
    range_da integer,
    range_a integer,
    tipologia integer,
    desc_tipologia character varying
);


ALTER TABLE public.lookup_categoriarischio_soa OWNER TO postgres;

--
-- TOC entry 484 (class 1259 OID 17991)
-- Name: lookup_chk_bns_mod; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_chk_bns_mod (
    code integer NOT NULL,
    description character varying(50) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true,
    codice_specie integer,
    nuova_gestione boolean DEFAULT true,
    tipo_allegato_bdn integer,
    versione integer,
    start_date timestamp without time zone,
    end_date timestamp without time zone,
    num_allegato integer,
    codice_checklist text
);


ALTER TABLE public.lookup_chk_bns_mod OWNER TO postgres;

--
-- TOC entry 485 (class 1259 OID 18000)
-- Name: lookup_codistat; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_codistat (
    code integer NOT NULL,
    description character varying(300) NOT NULL,
    short_description character varying(300),
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true,
    categoria_default integer
);


ALTER TABLE public.lookup_codistat OWNER TO postgres;

--
-- TOC entry 486 (class 1259 OID 18008)
-- Name: lookup_codistat_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_codistat_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_codistat_code_seq OWNER TO postgres;

--
-- TOC entry 7543 (class 0 OID 0)
-- Dependencies: 486
-- Name: lookup_codistat_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_codistat_code_seq OWNED BY public.lookup_codistat.code;


--
-- TOC entry 487 (class 1259 OID 18009)
-- Name: lookup_condizionalita; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_condizionalita (
    code integer NOT NULL,
    description text NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_condizionalita OWNER TO postgres;

--
-- TOC entry 488 (class 1259 OID 18017)
-- Name: lookup_condizionalita_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_condizionalita_code_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_condizionalita_code_seq OWNER TO postgres;

--
-- TOC entry 7544 (class 0 OID 0)
-- Dependencies: 488
-- Name: lookup_condizionalita_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_condizionalita_code_seq OWNED BY public.lookup_condizionalita.code;


--
-- TOC entry 489 (class 1259 OID 18018)
-- Name: lookup_condizionalita_new; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.lookup_condizionalita_new AS
 SELECT lookup_condizionalita.code,
    lookup_condizionalita.description,
    lookup_condizionalita.default_item,
    lookup_condizionalita.level,
    lookup_condizionalita.enabled
   FROM public.lookup_condizionalita
  WHERE (lookup_condizionalita.code = ANY (ARRAY[10, 11, 12]))
  ORDER BY lookup_condizionalita.level;


ALTER TABLE public.lookup_condizionalita_new OWNER TO postgres;

--
-- TOC entry 490 (class 1259 OID 18022)
-- Name: lookup_contact_source; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_contact_source (
    code integer NOT NULL,
    description character varying(50) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_contact_source OWNER TO postgres;

--
-- TOC entry 491 (class 1259 OID 18028)
-- Name: lookup_contact_source_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_contact_source_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_contact_source_code_seq OWNER TO postgres;

--
-- TOC entry 7545 (class 0 OID 0)
-- Dependencies: 491
-- Name: lookup_contact_source_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_contact_source_code_seq OWNED BY public.lookup_contact_source.code;


--
-- TOC entry 492 (class 1259 OID 18029)
-- Name: lookup_contactemail_types; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_contactemail_types (
    code integer NOT NULL,
    description character varying(50) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_contactemail_types OWNER TO postgres;

--
-- TOC entry 493 (class 1259 OID 18035)
-- Name: lookup_contactemail_types_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_contactemail_types_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_contactemail_types_code_seq OWNER TO postgres;

--
-- TOC entry 7546 (class 0 OID 0)
-- Dependencies: 493
-- Name: lookup_contactemail_types_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_contactemail_types_code_seq OWNED BY public.lookup_contactemail_types.code;


--
-- TOC entry 494 (class 1259 OID 18036)
-- Name: lookup_destinazione_campione_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_destinazione_campione_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_destinazione_campione_code_seq OWNER TO postgres;

--
-- TOC entry 7547 (class 0 OID 0)
-- Dependencies: 494
-- Name: lookup_destinazione_campione_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_destinazione_campione_code_seq OWNED BY public.lookup_destinazione_campione.code;


--
-- TOC entry 495 (class 1259 OID 18037)
-- Name: lookup_destinazione_distribuzione; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_destinazione_distribuzione (
    code integer NOT NULL,
    description character varying(300) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_destinazione_distribuzione OWNER TO postgres;

--
-- TOC entry 496 (class 1259 OID 18043)
-- Name: lookup_destinazione_distribuzione_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_destinazione_distribuzione_code_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_destinazione_distribuzione_code_seq OWNER TO postgres;

--
-- TOC entry 7548 (class 0 OID 0)
-- Dependencies: 496
-- Name: lookup_destinazione_distribuzione_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_destinazione_distribuzione_code_seq OWNED BY public.lookup_destinazione_distribuzione.code;


--
-- TOC entry 497 (class 1259 OID 18044)
-- Name: lookup_distribuzione_partita; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_distribuzione_partita (
    code integer NOT NULL,
    description character varying(300) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_distribuzione_partita OWNER TO postgres;

--
-- TOC entry 498 (class 1259 OID 18050)
-- Name: lookup_distribuzione_partita_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_distribuzione_partita_code_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_distribuzione_partita_code_seq OWNER TO postgres;

--
-- TOC entry 7549 (class 0 OID 0)
-- Dependencies: 498
-- Name: lookup_distribuzione_partita_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_distribuzione_partita_code_seq OWNED BY public.lookup_distribuzione_partita.code;


--
-- TOC entry 499 (class 1259 OID 18051)
-- Name: lookup_email_model; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_email_model (
    code integer NOT NULL,
    description character varying(300),
    default_item boolean DEFAULT false,
    level integer,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_email_model OWNER TO postgres;

--
-- TOC entry 500 (class 1259 OID 18056)
-- Name: lookup_email_model_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_email_model_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_email_model_code_seq OWNER TO postgres;

--
-- TOC entry 7550 (class 0 OID 0)
-- Dependencies: 500
-- Name: lookup_email_model_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_email_model_code_seq OWNED BY public.lookup_email_model.code;


--
-- TOC entry 501 (class 1259 OID 18057)
-- Name: lookup_esami; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_esami (
    code integer NOT NULL,
    description character varying(500) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true,
    id_tecnica integer
);


ALTER TABLE public.lookup_esami OWNER TO postgres;

--
-- TOC entry 502 (class 1259 OID 18065)
-- Name: lookup_esami_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_esami_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_esami_code_seq OWNER TO postgres;

--
-- TOC entry 7551 (class 0 OID 0)
-- Dependencies: 502
-- Name: lookup_esami_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_esami_code_seq OWNED BY public.lookup_esami.code;


--
-- TOC entry 503 (class 1259 OID 18066)
-- Name: lookup_esiti_sequestri; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_esiti_sequestri (
    code integer NOT NULL,
    description character varying(50) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_esiti_sequestri OWNER TO postgres;

--
-- TOC entry 504 (class 1259 OID 18072)
-- Name: lookup_esito_campione; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_esito_campione (
    code integer NOT NULL,
    description character varying(50) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_esito_campione OWNER TO postgres;

--
-- TOC entry 505 (class 1259 OID 18078)
-- Name: lookup_esito_campione_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_esito_campione_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_esito_campione_code_seq OWNER TO postgres;

--
-- TOC entry 7552 (class 0 OID 0)
-- Dependencies: 505
-- Name: lookup_esito_campione_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_esito_campione_code_seq OWNED BY public.lookup_esito_campione.code;


--
-- TOC entry 506 (class 1259 OID 18079)
-- Name: lookup_esito_controllo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_esito_controllo (
    code integer NOT NULL,
    description character varying(300) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_esito_controllo OWNER TO postgres;

--
-- TOC entry 507 (class 1259 OID 18085)
-- Name: lookup_esito_controllo_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_esito_controllo_code_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_esito_controllo_code_seq OWNER TO postgres;

--
-- TOC entry 7553 (class 0 OID 0)
-- Dependencies: 507
-- Name: lookup_esito_controllo_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_esito_controllo_code_seq OWNED BY public.lookup_esito_controllo.code;


--
-- TOC entry 508 (class 1259 OID 18086)
-- Name: lookup_eventi_motivi_cu; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_eventi_motivi_cu (
    code integer NOT NULL,
    description character varying(300),
    codice_evento character varying(300),
    old_description character varying(300),
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_eventi_motivi_cu OWNER TO postgres;

--
-- TOC entry 509 (class 1259 OID 18094)
-- Name: lookup_gruppo_ruoli; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_gruppo_ruoli (
    description text,
    level integer,
    enabled boolean,
    code integer NOT NULL
);


ALTER TABLE public.lookup_gruppo_ruoli OWNER TO postgres;

--
-- TOC entry 510 (class 1259 OID 18099)
-- Name: lookup_gruppo_ruoli_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_gruppo_ruoli_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_gruppo_ruoli_code_seq OWNER TO postgres;

--
-- TOC entry 7554 (class 0 OID 0)
-- Dependencies: 510
-- Name: lookup_gruppo_ruoli_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_gruppo_ruoli_code_seq OWNED BY public.lookup_gruppo_ruoli.code;


--
-- TOC entry 511 (class 1259 OID 18100)
-- Name: lookup_haccp_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_haccp_code_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_haccp_code_seq OWNER TO postgres;

--
-- TOC entry 7555 (class 0 OID 0)
-- Dependencies: 511
-- Name: lookup_haccp_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_haccp_code_seq OWNED BY public.lookup_haccp.code;


--
-- TOC entry 512 (class 1259 OID 18101)
-- Name: lookup_ispezione; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_ispezione (
    code integer NOT NULL,
    description character varying(50) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true,
    id_macrocategoria integer,
    cod_raggruppamento text
);


ALTER TABLE public.lookup_ispezione OWNER TO postgres;

--
-- TOC entry 513 (class 1259 OID 18109)
-- Name: lookup_ispezione_2_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_ispezione_2_code_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_ispezione_2_code_seq OWNER TO postgres;

--
-- TOC entry 7556 (class 0 OID 0)
-- Dependencies: 513
-- Name: lookup_ispezione_2_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_ispezione_2_code_seq OWNED BY public.lookup_ispezione.code;


--
-- TOC entry 514 (class 1259 OID 18110)
-- Name: lookup_ispezione_macrocategorie; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_ispezione_macrocategorie (
    code integer NOT NULL,
    description_old character varying(50) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true,
    description character varying(500)
);


ALTER TABLE public.lookup_ispezione_macrocategorie OWNER TO postgres;

--
-- TOC entry 515 (class 1259 OID 18118)
-- Name: lookup_matrice_controlli; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_matrice_controlli (
    code integer NOT NULL,
    description character varying(300) NOT NULL,
    short_description character varying(300),
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_matrice_controlli OWNER TO postgres;

--
-- TOC entry 516 (class 1259 OID 18126)
-- Name: lookup_matrice_controlli_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_matrice_controlli_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_matrice_controlli_code_seq OWNER TO postgres;

--
-- TOC entry 7557 (class 0 OID 0)
-- Dependencies: 516
-- Name: lookup_matrice_controlli_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_matrice_controlli_code_seq OWNED BY public.lookup_matrice_controlli.code;


--
-- TOC entry 517 (class 1259 OID 18127)
-- Name: lookup_messaggio_soggetto; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_messaggio_soggetto (
    code integer NOT NULL,
    description character varying(300) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_messaggio_soggetto OWNER TO postgres;

--
-- TOC entry 518 (class 1259 OID 18133)
-- Name: lookup_messaggio_soggetto_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_messaggio_soggetto_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_messaggio_soggetto_code_seq OWNER TO postgres;

--
-- TOC entry 7558 (class 0 OID 0)
-- Dependencies: 518
-- Name: lookup_messaggio_soggetto_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_messaggio_soggetto_code_seq OWNED BY public.lookup_messaggio_soggetto.code;


--
-- TOC entry 519 (class 1259 OID 18134)
-- Name: lookup_messaggio_tipo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_messaggio_tipo (
    code integer NOT NULL,
    description character varying(300) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_messaggio_tipo OWNER TO postgres;

--
-- TOC entry 520 (class 1259 OID 18140)
-- Name: lookup_messaggio_tipo_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_messaggio_tipo_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_messaggio_tipo_code_seq OWNER TO postgres;

--
-- TOC entry 7559 (class 0 OID 0)
-- Dependencies: 520
-- Name: lookup_messaggio_tipo_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_messaggio_tipo_code_seq OWNED BY public.lookup_messaggio_tipo.code;


--
-- TOC entry 521 (class 1259 OID 18141)
-- Name: lookup_motivi; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_motivi (
    code integer NOT NULL,
    description character varying(500) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true,
    id_tecnica integer
);


ALTER TABLE public.lookup_motivi OWNER TO postgres;

--
-- TOC entry 522 (class 1259 OID 18149)
-- Name: lookup_motivi_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_motivi_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_motivi_code_seq OWNER TO postgres;

--
-- TOC entry 7560 (class 0 OID 0)
-- Dependencies: 522
-- Name: lookup_motivi_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_motivi_code_seq OWNED BY public.lookup_motivi.code;


--
-- TOC entry 523 (class 1259 OID 18150)
-- Name: lookup_nazioni_; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_nazioni_ (
    code integer NOT NULL,
    description text NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true,
    short_desc text
);


ALTER TABLE public.lookup_nazioni_ OWNER TO postgres;

--
-- TOC entry 524 (class 1259 OID 18158)
-- Name: lookup_nazioni; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.lookup_nazioni AS
 SELECT lookup_nazioni_.code,
    lookup_nazioni_.description,
    lookup_nazioni_.default_item,
    0 AS level,
    true AS enabled,
    lookup_nazioni_.short_desc
   FROM public.lookup_nazioni_
  ORDER BY lookup_nazioni_.description;


ALTER TABLE public.lookup_nazioni OWNER TO postgres;

--
-- TOC entry 525 (class 1259 OID 18162)
-- Name: lookup_nazioni_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_nazioni_code_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_nazioni_code_seq OWNER TO postgres;

--
-- TOC entry 7561 (class 0 OID 0)
-- Dependencies: 525
-- Name: lookup_nazioni_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_nazioni_code_seq OWNED BY public.lookup_nazioni_.code;


--
-- TOC entry 526 (class 1259 OID 18163)
-- Name: lookup_nucleo_ispettivo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_nucleo_ispettivo (
    code integer NOT NULL,
    description character varying(50) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_nucleo_ispettivo OWNER TO postgres;

--
-- TOC entry 527 (class 1259 OID 18169)
-- Name: lookup_nucleo_ispettivo_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_nucleo_ispettivo_code_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_nucleo_ispettivo_code_seq OWNER TO postgres;

--
-- TOC entry 7562 (class 0 OID 0)
-- Dependencies: 527
-- Name: lookup_nucleo_ispettivo_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_nucleo_ispettivo_code_seq OWNED BY public.lookup_nucleo_ispettivo.code;


--
-- TOC entry 528 (class 1259 OID 18170)
-- Name: lookup_oggetto_audit; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_oggetto_audit (
    code integer NOT NULL,
    description text NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_oggetto_audit OWNER TO postgres;

--
-- TOC entry 529 (class 1259 OID 18178)
-- Name: lookup_oggetto_audit_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_oggetto_audit_code_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_oggetto_audit_code_seq OWNER TO postgres;

--
-- TOC entry 7563 (class 0 OID 0)
-- Dependencies: 529
-- Name: lookup_oggetto_audit_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_oggetto_audit_code_seq OWNED BY public.lookup_oggetto_audit.code;


--
-- TOC entry 530 (class 1259 OID 18179)
-- Name: lookup_opportunity_budget; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_opportunity_budget (
    code integer NOT NULL,
    description character varying(300) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_opportunity_budget OWNER TO postgres;

--
-- TOC entry 531 (class 1259 OID 18185)
-- Name: lookup_opportunity_budget_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_opportunity_budget_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_opportunity_budget_code_seq OWNER TO postgres;

--
-- TOC entry 7564 (class 0 OID 0)
-- Dependencies: 531
-- Name: lookup_opportunity_budget_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_opportunity_budget_code_seq OWNED BY public.lookup_opportunity_budget.code;


--
-- TOC entry 532 (class 1259 OID 18186)
-- Name: lookup_opu_tipo_impresa_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_opu_tipo_impresa_code_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_opu_tipo_impresa_code_seq OWNER TO postgres;

--
-- TOC entry 7565 (class 0 OID 0)
-- Dependencies: 532
-- Name: lookup_opu_tipo_impresa_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_opu_tipo_impresa_code_seq OWNED BY public.lookup_opu_tipo_impresa.code;


--
-- TOC entry 533 (class 1259 OID 18187)
-- Name: lookup_opu_tipo_impresa_societa_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_opu_tipo_impresa_societa_code_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_opu_tipo_impresa_societa_code_seq OWNER TO postgres;

--
-- TOC entry 7566 (class 0 OID 0)
-- Dependencies: 533
-- Name: lookup_opu_tipo_impresa_societa_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_opu_tipo_impresa_societa_code_seq OWNED BY public.lookup_opu_tipo_impresa_societa.code;


--
-- TOC entry 534 (class 1259 OID 18188)
-- Name: lookup_org_catrischio_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_org_catrischio_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_org_catrischio_code_seq OWNER TO postgres;

--
-- TOC entry 7567 (class 0 OID 0)
-- Dependencies: 534
-- Name: lookup_org_catrischio_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_org_catrischio_code_seq OWNED BY public.lookup_org_catrischio.code;


--
-- TOC entry 535 (class 1259 OID 18189)
-- Name: lookup_orgaddress_types; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_orgaddress_types (
    code integer NOT NULL,
    description character varying(50) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_orgaddress_types OWNER TO postgres;

--
-- TOC entry 536 (class 1259 OID 18195)
-- Name: lookup_orgaddress_types_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_orgaddress_types_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_orgaddress_types_code_seq OWNER TO postgres;

--
-- TOC entry 7568 (class 0 OID 0)
-- Dependencies: 536
-- Name: lookup_orgaddress_types_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_orgaddress_types_code_seq OWNED BY public.lookup_orgaddress_types.code;


--
-- TOC entry 537 (class 1259 OID 18196)
-- Name: lookup_orientamento_produttivo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_orientamento_produttivo (
    code integer NOT NULL,
    description character varying(300),
    default_item boolean DEFAULT false,
    level integer,
    enabled boolean DEFAULT true,
    enabled_bovini_bufalini boolean,
    enabled_equini boolean,
    enabled_suini boolean,
    enabled_ovini_caprini boolean,
    enabled_avicoli boolean,
    tipo_struttura text,
    enabled_api boolean,
    enabled_conigli boolean
);


ALTER TABLE public.lookup_orientamento_produttivo OWNER TO postgres;

--
-- TOC entry 538 (class 1259 OID 18203)
-- Name: lookup_orientamento_produttivo_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_orientamento_produttivo_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_orientamento_produttivo_code_seq OWNER TO postgres;

--
-- TOC entry 7569 (class 0 OID 0)
-- Dependencies: 538
-- Name: lookup_orientamento_produttivo_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_orientamento_produttivo_code_seq OWNED BY public.lookup_orientamento_produttivo.code;


--
-- TOC entry 539 (class 1259 OID 18204)
-- Name: lookup_piano_monitoraggio_; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_piano_monitoraggio_ (
    code integer NOT NULL,
    description character varying(300) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true,
    site_id integer,
    data date,
    entered timestamp without time zone,
    modified timestamp without time zone,
    modifiedby integer,
    enteredby integer,
    site_id_old integer,
    id_sezione integer,
    anno_riferimento integer,
    riferimento_piano_2012 integer,
    id_padre integer,
    riferimento_piano_2013 integer,
    codice_esame text,
    ordinamento integer,
    id_indicatore integer,
    ordinamento_figli integer DEFAULT 0,
    codice_interno integer,
    alias text,
    tipo_attivita text,
    coefficiente real,
    code_configuratore integer,
    anno integer,
    flag_condizionalita boolean DEFAULT false,
    note text,
    codice_interno_tipo_ispezione text,
    flag_vitelli boolean DEFAULT false
);


ALTER TABLE public.lookup_piano_monitoraggio_ OWNER TO postgres;

--
-- TOC entry 540 (class 1259 OID 18215)
-- Name: lookup_piano_monitoraggio_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_piano_monitoraggio_code_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_piano_monitoraggio_code_seq OWNER TO postgres;

--
-- TOC entry 7570 (class 0 OID 0)
-- Dependencies: 540
-- Name: lookup_piano_monitoraggio_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_piano_monitoraggio_code_seq OWNED BY public.lookup_piano_monitoraggio_.code;


--
-- TOC entry 541 (class 1259 OID 18216)
-- Name: lookup_piano_monitoraggio_vista_new; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.lookup_piano_monitoraggio_vista_new AS
 SELECT lookup_piano_monitoraggio_.code,
    lookup_piano_monitoraggio_.description,
    lookup_piano_monitoraggio_.default_item,
    lookup_piano_monitoraggio_.level,
    lookup_piano_monitoraggio_.enabled,
    lookup_piano_monitoraggio_.site_id,
    lookup_piano_monitoraggio_.id_sezione,
    lookup_piano_monitoraggio_.ordinamento,
    lookup_piano_monitoraggio_.ordinamento_figli,
    lookup_piano_monitoraggio_.codice_interno,
    lookup_piano_monitoraggio_.anno,
    lookup_piano_monitoraggio_.flag_condizionalita,
    lookup_piano_monitoraggio_.codice_interno_tipo_ispezione,
    lookup_piano_monitoraggio_.code AS codice_interno_ind,
    NULL::timestamp without time zone AS data_scadenza,
    lookup_piano_monitoraggio_.id_indicatore,
    lookup_piano_monitoraggio_.id_padre,
    lookup_piano_monitoraggio_.codice_esame,
    lookup_piano_monitoraggio_.flag_vitelli,
    lookup_piano_monitoraggio_.description AS short_description,
    ''::text AS alias,
    NULL::integer AS codice_interno_univoco,
    NULL::text AS codice,
    NULL::boolean AS flag_benessere
   FROM public.lookup_piano_monitoraggio_
UNION
( SELECT DISTINCT ind.id AS code,
    ((
        CASE
            WHEN (p.alias_piano IS NOT NULL) THEN (p.alias_piano || ' - '::text)
            ELSE ''::text
        END || (upper(p.descrizione) || ' >> '::text)) || (
        CASE
            WHEN (ind.alias_indicatore IS NOT NULL) THEN (ind.alias_indicatore || ' - '::text)
            ELSE ''::text
        END || ind.descrizione)) AS description,
    false AS default_item,
    0 AS level,
        CASE
            WHEN ((date_part('years'::text, (now() - (( SELECT dpat_tolleranza_inserimento_cu.intervallo
               FROM public.dpat_tolleranza_inserimento_cu))::interval)) = (sez.anno)::double precision) AND (p.data_scadenza IS NULL) AND (ind.data_scadenza IS NULL) AND (ind.stato = ANY (ARRAY[0, 2]))) THEN true
            ELSE false
        END AS enabled,
    '-1'::integer AS site_id,
    sez.id AS id_sezione,
    p.ordinamento,
    ind.ordinamento AS ordinamento_figli,
    ind.codice_interno_piani_gestione_cu AS codice_interno,
    sez.anno,
        CASE
            WHEN ((ind.codice_interno_piani_gestione_cu = 1483) OR (ind.codice_interno_piani_gestione_cu = 982) OR (ind.codice_interno_piani_gestione_cu = 983)) THEN true
            ELSE false
        END AS flag_condizionalita,
    '2a'::text AS codice_interno_tipo_ispezione,
    ind.codice_interno_indicatore AS codice_interno_ind,
    COALESCE(ind.data_scadenza, p.data_scadenza) AS data_scadenza,
    ind.codice_interno_indicatore AS id_indicatore,
    p.id AS id_padre,
    ind.codice_esame,
    false AS flag_vitelli,
    (
        CASE
            WHEN (ind.alias_indicatore IS NOT NULL) THEN (ind.alias_indicatore || ':'::text)
            ELSE ''::text
        END || ind.descrizione) AS short_description,
    ind.alias_indicatore AS alias,
    ind.cod_raggruppamento AS codice_interno_univoco,
    ((p.codice_alias_attivita || '.'::text) || ind.codice_alias_indicatore) AS codice,
    ind.flag_benessere
   FROM (((public.dpat_indicatore_new ind
     JOIN public.dpat_piano_attivita_new p ON (((p.id = ind.id_piano_attivita) AND (p.anno = ind.anno))))
     JOIN public.dpat_sez_new sez ON (((sez.id = p.id_sezione) AND (sez.anno = p.anno))))
     LEFT JOIN public.dpat_codici_indicatore codici ON (((codici.codice_interno_univoco_indicatore = ind.cod_raggruppamento) AND (codici.data_scadenza IS NULL))))
  WHERE ((sez.anno >= 2015) AND (p.tipo_attivita ~~* 'piano'::text) AND (ind.stato = ANY (ARRAY[0, 2])) AND (p.stato = ANY (ARRAY[0, 2])) AND (ind.tipo_item_dpat = 3))
  ORDER BY p.ordinamento, ind.ordinamento)
  ORDER BY 11;


ALTER TABLE public.lookup_piano_monitoraggio_vista_new OWNER TO postgres;

--
-- TOC entry 542 (class 1259 OID 18221)
-- Name: lookup_priorita_flusso; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_priorita_flusso (
    code integer,
    description text,
    default_item boolean DEFAULT false,
    level integer,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_priorita_flusso OWNER TO postgres;

--
-- TOC entry 543 (class 1259 OID 18228)
-- Name: lookup_processo_depurativo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_processo_depurativo (
    code integer NOT NULL,
    description text,
    short_description text,
    enabled boolean DEFAULT true,
    default_item boolean DEFAULT false,
    level integer
);


ALTER TABLE public.lookup_processo_depurativo OWNER TO postgres;

--
-- TOC entry 544 (class 1259 OID 18235)
-- Name: lookup_processo_depurativo_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_processo_depurativo_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_processo_depurativo_code_seq OWNER TO postgres;

--
-- TOC entry 7571 (class 0 OID 0)
-- Dependencies: 544
-- Name: lookup_processo_depurativo_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_processo_depurativo_code_seq OWNED BY public.lookup_processo_depurativo.code;


--
-- TOC entry 545 (class 1259 OID 18236)
-- Name: lookup_province_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_province_code_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_province_code_seq OWNER TO postgres;

--
-- TOC entry 7572 (class 0 OID 0)
-- Dependencies: 545
-- Name: lookup_province_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_province_code_seq OWNED BY public.lookup_province.code;


--
-- TOC entry 546 (class 1259 OID 18237)
-- Name: lookup_provvedimenti; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_provvedimenti (
    code integer NOT NULL,
    description character varying(50) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_provvedimenti OWNER TO postgres;

--
-- TOC entry 547 (class 1259 OID 18243)
-- Name: lookup_provvedimenti_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_provvedimenti_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_provvedimenti_code_seq OWNER TO postgres;

--
-- TOC entry 7573 (class 0 OID 0)
-- Dependencies: 547
-- Name: lookup_provvedimenti_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_provvedimenti_code_seq OWNED BY public.lookup_provvedimenti.code;


--
-- TOC entry 548 (class 1259 OID 18244)
-- Name: lookup_qualifiche_nucleo_old_view; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.lookup_qualifiche_nucleo_old_view AS
 SELECT lookup_qualifiche.code,
    lookup_qualifiche.description,
    lookup_qualifiche.short_description,
    lookup_qualifiche.default_item,
    lookup_qualifiche.level,
    lookup_qualifiche.enabled,
    lookup_qualifiche.origine
   FROM public.lookup_qualifiche
UNION
 SELECT (lookup_nucleo_ispettivo.code + 100) AS code,
    lookup_nucleo_ispettivo.description,
    ''::character varying AS short_description,
    lookup_nucleo_ispettivo.default_item,
    lookup_nucleo_ispettivo.level,
    false AS enabled,
    '-1'::integer AS origine
   FROM public.lookup_nucleo_ispettivo
  WHERE (lookup_nucleo_ispettivo.code = ANY (ARRAY[1, 2, 23, 22, 21, 24, 25, 19]));


ALTER TABLE public.lookup_qualifiche_nucleo_old_view OWNER TO postgres;

--
-- TOC entry 549 (class 1259 OID 18249)
-- Name: lookup_site_id_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_site_id_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_site_id_code_seq OWNER TO postgres;

--
-- TOC entry 7574 (class 0 OID 0)
-- Dependencies: 549
-- Name: lookup_site_id_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_site_id_code_seq OWNED BY public.lookup_site_id.code;


--
-- TOC entry 550 (class 1259 OID 18250)
-- Name: lookup_specie_allevata; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_specie_allevata (
    code integer NOT NULL,
    description character varying(300) NOT NULL,
    short_description character varying(300),
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true,
    codice_categoria integer,
    codice_specie_capo integer,
    tipo_ws integer,
    alt_short_description character varying(20),
    short_description_ba text
);


ALTER TABLE public.lookup_specie_allevata OWNER TO postgres;

--
-- TOC entry 551 (class 1259 OID 18258)
-- Name: lookup_specie_allevata_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_specie_allevata_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_specie_allevata_code_seq OWNER TO postgres;

--
-- TOC entry 7575 (class 0 OID 0)
-- Dependencies: 551
-- Name: lookup_specie_allevata_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_specie_allevata_code_seq OWNED BY public.lookup_specie_allevata.code;


--
-- TOC entry 552 (class 1259 OID 18259)
-- Name: lookup_specie_trasportata; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_specie_trasportata (
    code integer NOT NULL,
    description character varying(300) NOT NULL,
    short_description character varying(300),
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_specie_trasportata OWNER TO postgres;

--
-- TOC entry 553 (class 1259 OID 18267)
-- Name: lookup_specie_trasportata_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_specie_trasportata_code_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_specie_trasportata_code_seq OWNER TO postgres;

--
-- TOC entry 7576 (class 0 OID 0)
-- Dependencies: 553
-- Name: lookup_specie_trasportata_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_specie_trasportata_code_seq OWNED BY public.lookup_specie_trasportata.code;


--
-- TOC entry 554 (class 1259 OID 18268)
-- Name: lookup_stato_attivita_sintesis; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_stato_attivita_sintesis (
    code integer NOT NULL,
    description character varying(300),
    default_item boolean DEFAULT false,
    level integer,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_stato_attivita_sintesis OWNER TO postgres;

--
-- TOC entry 555 (class 1259 OID 18273)
-- Name: lookup_stato_attivita_sintesis_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_stato_attivita_sintesis_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_stato_attivita_sintesis_code_seq OWNER TO postgres;

--
-- TOC entry 7577 (class 0 OID 0)
-- Dependencies: 555
-- Name: lookup_stato_attivita_sintesis_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_stato_attivita_sintesis_code_seq OWNED BY public.lookup_stato_attivita_sintesis.code;


--
-- TOC entry 556 (class 1259 OID 18274)
-- Name: lookup_stato_cu; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_stato_cu (
    code integer NOT NULL,
    description character varying(500) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_stato_cu OWNER TO postgres;

--
-- TOC entry 557 (class 1259 OID 18282)
-- Name: lookup_stato_cu_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_stato_cu_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_stato_cu_code_seq OWNER TO postgres;

--
-- TOC entry 7578 (class 0 OID 0)
-- Dependencies: 557
-- Name: lookup_stato_cu_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_stato_cu_code_seq OWNED BY public.lookup_stato_cu.code;


--
-- TOC entry 558 (class 1259 OID 18283)
-- Name: lookup_stato_fascicolo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_stato_fascicolo (
    code integer NOT NULL,
    description character varying(500) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_stato_fascicolo OWNER TO postgres;

--
-- TOC entry 559 (class 1259 OID 18291)
-- Name: lookup_stato_fascicolo_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_stato_fascicolo_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_stato_fascicolo_code_seq OWNER TO postgres;

--
-- TOC entry 7579 (class 0 OID 0)
-- Dependencies: 559
-- Name: lookup_stato_fascicolo_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_stato_fascicolo_code_seq OWNED BY public.lookup_stato_fascicolo.code;


--
-- TOC entry 560 (class 1259 OID 18292)
-- Name: lookup_stato_impianto_acque_reflue; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_stato_impianto_acque_reflue (
    code integer NOT NULL,
    description text,
    short_description text,
    enabled boolean DEFAULT true,
    default_item boolean DEFAULT false,
    level integer
);


ALTER TABLE public.lookup_stato_impianto_acque_reflue OWNER TO postgres;

--
-- TOC entry 561 (class 1259 OID 18299)
-- Name: lookup_stato_impianto_acque_reflue_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_stato_impianto_acque_reflue_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_stato_impianto_acque_reflue_code_seq OWNER TO postgres;

--
-- TOC entry 7580 (class 0 OID 0)
-- Dependencies: 561
-- Name: lookup_stato_impianto_acque_reflue_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_stato_impianto_acque_reflue_code_seq OWNED BY public.lookup_stato_impianto_acque_reflue.code;


--
-- TOC entry 562 (class 1259 OID 18300)
-- Name: lookup_stato_lab; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_stato_lab (
    code integer NOT NULL,
    description character varying(50) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true,
    gins boolean,
    desc_gins text
);


ALTER TABLE public.lookup_stato_lab OWNER TO postgres;

--
-- TOC entry 563 (class 1259 OID 18308)
-- Name: lookup_stato_lab_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_stato_lab_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_stato_lab_code_seq OWNER TO postgres;

--
-- TOC entry 7581 (class 0 OID 0)
-- Dependencies: 563
-- Name: lookup_stato_lab_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_stato_lab_code_seq OWNED BY public.lookup_stato_lab.code;


--
-- TOC entry 564 (class 1259 OID 18309)
-- Name: lookup_stato_stabilimento_sintesis; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_stato_stabilimento_sintesis (
    code integer NOT NULL,
    description character varying(300),
    default_item boolean DEFAULT false,
    level integer,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_stato_stabilimento_sintesis OWNER TO postgres;

--
-- TOC entry 565 (class 1259 OID 18314)
-- Name: lookup_stato_stabilimento_sintesis_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_stato_stabilimento_sintesis_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_stato_stabilimento_sintesis_code_seq OWNER TO postgres;

--
-- TOC entry 7582 (class 0 OID 0)
-- Dependencies: 565
-- Name: lookup_stato_stabilimento_sintesis_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_stato_stabilimento_sintesis_code_seq OWNED BY public.lookup_stato_stabilimento_sintesis.code;


--
-- TOC entry 566 (class 1259 OID 18315)
-- Name: lookup_tipi_verifica; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_tipi_verifica (
    code integer NOT NULL,
    description character varying(500) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true,
    gestione_altro boolean DEFAULT false
);


ALTER TABLE public.lookup_tipi_verifica OWNER TO postgres;

--
-- TOC entry 567 (class 1259 OID 18324)
-- Name: lookup_tipi_verifica_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_tipi_verifica_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_tipi_verifica_code_seq OWNER TO postgres;

--
-- TOC entry 7583 (class 0 OID 0)
-- Dependencies: 567
-- Name: lookup_tipi_verifica_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_tipi_verifica_code_seq OWNED BY public.lookup_tipi_verifica.code;


--
-- TOC entry 568 (class 1259 OID 18325)
-- Name: lookup_tipo_attivita; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_tipo_attivita (
    code integer NOT NULL,
    tipo character varying NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_tipo_attivita OWNER TO postgres;

--
-- TOC entry 569 (class 1259 OID 18333)
-- Name: lookup_tipo_attivita_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_tipo_attivita_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_tipo_attivita_code_seq OWNER TO postgres;

--
-- TOC entry 7584 (class 0 OID 0)
-- Dependencies: 569
-- Name: lookup_tipo_attivita_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_tipo_attivita_code_seq OWNED BY public.lookup_tipo_attivita.code;


--
-- TOC entry 570 (class 1259 OID 18334)
-- Name: lookup_tipo_audit_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_tipo_audit_code_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_tipo_audit_code_seq OWNER TO postgres;

--
-- TOC entry 7585 (class 0 OID 0)
-- Dependencies: 570
-- Name: lookup_tipo_audit_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_tipo_audit_code_seq OWNED BY public.lookup_tipo_audit.code;


--
-- TOC entry 571 (class 1259 OID 18335)
-- Name: lookup_tipo_controllo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_tipo_controllo (
    code integer NOT NULL,
    description character varying(50) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true,
    info_nc boolean DEFAULT false,
    info_campione boolean DEFAULT false
);


ALTER TABLE public.lookup_tipo_controllo OWNER TO postgres;

--
-- TOC entry 572 (class 1259 OID 18343)
-- Name: lookup_tipo_controllo_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_tipo_controllo_code_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_tipo_controllo_code_seq OWNER TO postgres;

--
-- TOC entry 7586 (class 0 OID 0)
-- Dependencies: 572
-- Name: lookup_tipo_controllo_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_tipo_controllo_code_seq OWNED BY public.lookup_tipo_controllo.code;


--
-- TOC entry 573 (class 1259 OID 18344)
-- Name: lookup_tipo_impresa_societa; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_tipo_impresa_societa (
    code integer,
    description character varying(250),
    enabled boolean,
    level integer,
    default_item boolean,
    noscia boolean
);


ALTER TABLE public.lookup_tipo_impresa_societa OWNER TO postgres;

--
-- TOC entry 574 (class 1259 OID 18347)
-- Name: lookup_tipo_ispezione_; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_tipo_ispezione_ (
    code integer NOT NULL,
    description character varying(5000) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true,
    codice_esame text,
    codice_interno text,
    anno integer,
    codice_configuratore integer,
    codice_interno_univoco text,
    id_indicatore integer
);


ALTER TABLE public.lookup_tipo_ispezione_ OWNER TO postgres;

--
-- TOC entry 575 (class 1259 OID 18355)
-- Name: lookup_tipo_ispezione_2_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_tipo_ispezione_2_code_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_tipo_ispezione_2_code_seq OWNER TO postgres;

--
-- TOC entry 7587 (class 0 OID 0)
-- Dependencies: 575
-- Name: lookup_tipo_ispezione_2_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_tipo_ispezione_2_code_seq OWNED BY public.lookup_tipo_ispezione_.code;


--
-- TOC entry 576 (class 1259 OID 18356)
-- Name: lookup_tipo_ispezione_vista_new; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.lookup_tipo_ispezione_vista_new AS
 SELECT lookup_tipo_ispezione_.code,
    lookup_tipo_ispezione_.description,
    lookup_tipo_ispezione_.default_item,
    lookup_tipo_ispezione_.level,
    lookup_tipo_ispezione_.enabled,
    lookup_tipo_ispezione_.codice_esame,
    lookup_tipo_ispezione_.codice_interno,
    lookup_tipo_ispezione_.anno,
    lookup_tipo_ispezione_.codice_interno_univoco,
    0 AS ordinamento,
    0 AS ordinamento_figli,
    NULL::timestamp without time zone AS data_scadenza,
    lookup_tipo_ispezione_.code AS codice_interno_ind,
    lookup_tipo_ispezione_.id_indicatore,
    ''::text AS alias,
    NULL::text AS codice,
    '-1'::integer AS id_padre
   FROM public.lookup_tipo_ispezione_
UNION
( SELECT DISTINCT ind.id AS code,
    (((((upper(p.descrizione) || ' '::text) || ' - '::text) ||
        CASE
            WHEN (ind.alias_indicatore IS NOT NULL) THEN ind.alias_indicatore
            ELSE ''::text
        END) || ' >> '::text) || ind.descrizione) AS description,
    false AS default_item,
    0 AS level,
        CASE
            WHEN ((date_part('years'::text, (now() - (( SELECT dpat_tolleranza_inserimento_cu.intervallo
               FROM public.dpat_tolleranza_inserimento_cu))::interval)) = (sez.anno)::double precision) AND (p.data_scadenza IS NULL) AND (ind.data_scadenza IS NULL) AND (ind.stato = ANY (ARRAY[0, 2]))) THEN true
            ELSE false
        END AS enabled,
    ind.codice_esame,
    ind.codice_interno_attivita_gestione_cu AS codice_interno,
    sez.anno,
    ind.codice_interno_univoco_tipo_attivita_gestione_cu AS codice_interno_univoco,
    p.ordinamento,
    ind.ordinamento AS ordinamento_figli,
    ind.data_scadenza,
    ind.id AS codice_interno_ind,
    ind.id AS id_indicatore,
    ind.alias_indicatore AS alias,
    ((p.codice_alias_attivita || '.'::text) || ind.codice_alias_indicatore) AS codice,
    p.id AS id_padre
   FROM ((public.dpat_indicatore_new ind
     JOIN public.dpat_piano_attivita_new p ON (((p.id = ind.id_piano_attivita) AND (p.anno = ind.anno))))
     JOIN public.dpat_sez_new sez ON (((sez.id = p.id_sezione) AND (sez.anno = p.anno))))
  WHERE ((sez.anno >= 2015) AND (p.tipo_attivita !~~* 'piano'::text) AND (ind.stato = ANY (ARRAY[0, 2])) AND (p.stato = ANY (ARRAY[0, 2])) AND (ind.tipo_item_dpat = 3))
  ORDER BY p.ordinamento, ind.ordinamento);


ALTER TABLE public.lookup_tipo_ispezione_vista_new OWNER TO postgres;

--
-- TOC entry 577 (class 1259 OID 18361)
-- Name: lookup_tipo_modulo_sviluppo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_tipo_modulo_sviluppo (
    code integer NOT NULL,
    description text,
    default_item boolean,
    level integer,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_tipo_modulo_sviluppo OWNER TO postgres;

--
-- TOC entry 578 (class 1259 OID 18367)
-- Name: lookup_tipo_modulo_sviluppo_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_tipo_modulo_sviluppo_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_tipo_modulo_sviluppo_code_seq OWNER TO postgres;

--
-- TOC entry 7588 (class 0 OID 0)
-- Dependencies: 578
-- Name: lookup_tipo_modulo_sviluppo_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_tipo_modulo_sviluppo_code_seq OWNED BY public.lookup_tipo_modulo_sviluppo.code;


--
-- TOC entry 579 (class 1259 OID 18368)
-- Name: lookup_tipo_ricerca_anagrafica; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_tipo_ricerca_anagrafica (
    code integer NOT NULL,
    description text,
    short_description text,
    default_item boolean,
    level integer,
    enabled boolean
);


ALTER TABLE public.lookup_tipo_ricerca_anagrafica OWNER TO postgres;

--
-- TOC entry 580 (class 1259 OID 18373)
-- Name: lookup_tipo_ricerca_anagrafica_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_tipo_ricerca_anagrafica_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_tipo_ricerca_anagrafica_code_seq OWNER TO postgres;

--
-- TOC entry 7589 (class 0 OID 0)
-- Dependencies: 580
-- Name: lookup_tipo_ricerca_anagrafica_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_tipo_ricerca_anagrafica_code_seq OWNED BY public.lookup_tipo_ricerca_anagrafica.code;


--
-- TOC entry 581 (class 1259 OID 18374)
-- Name: lookup_tipo_scheda_operatore; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_tipo_scheda_operatore (
    code integer NOT NULL,
    description character varying(300) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true,
    titolo text,
    firma_data boolean DEFAULT false,
    nome_file text
);


ALTER TABLE public.lookup_tipo_scheda_operatore OWNER TO postgres;

--
-- TOC entry 582 (class 1259 OID 18383)
-- Name: lookup_tipo_scheda_operatore_code_seq1; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_tipo_scheda_operatore_code_seq1
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_tipo_scheda_operatore_code_seq1 OWNER TO postgres;

--
-- TOC entry 7590 (class 0 OID 0)
-- Dependencies: 582
-- Name: lookup_tipo_scheda_operatore_code_seq1; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_tipo_scheda_operatore_code_seq1 OWNED BY public.lookup_tipo_scheda_operatore.code;


--
-- TOC entry 583 (class 1259 OID 18384)
-- Name: lookup_tipologia_cu_e_sottoattivita; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_tipologia_cu_e_sottoattivita (
    code integer NOT NULL,
    description character varying(100),
    default_item boolean DEFAULT false,
    level integer DEFAULT 10,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_tipologia_cu_e_sottoattivita OWNER TO postgres;

--
-- TOC entry 584 (class 1259 OID 18390)
-- Name: lookup_tipologia_cu_e_sottoattivita_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_tipologia_cu_e_sottoattivita_code_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_tipologia_cu_e_sottoattivita_code_seq OWNER TO postgres;

--
-- TOC entry 7591 (class 0 OID 0)
-- Dependencies: 584
-- Name: lookup_tipologia_cu_e_sottoattivita_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_tipologia_cu_e_sottoattivita_code_seq OWNED BY public.lookup_tipologia_cu_e_sottoattivita.code;


--
-- TOC entry 585 (class 1259 OID 18391)
-- Name: lookup_tipologia_nodo_oia; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_tipologia_nodo_oia (
    code integer NOT NULL,
    description character varying(300) NOT NULL,
    short_description character varying(300),
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true,
    ruoli text
);


ALTER TABLE public.lookup_tipologia_nodo_oia OWNER TO postgres;

--
-- TOC entry 586 (class 1259 OID 18399)
-- Name: lookup_tipologia_nodo_oia_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_tipologia_nodo_oia_code_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_tipologia_nodo_oia_code_seq OWNER TO postgres;

--
-- TOC entry 7592 (class 0 OID 0)
-- Dependencies: 586
-- Name: lookup_tipologia_nodo_oia_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_tipologia_nodo_oia_code_seq OWNED BY public.lookup_tipologia_nodo_oia.code;


--
-- TOC entry 587 (class 1259 OID 18400)
-- Name: lookup_tipologia_operatore; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_tipologia_operatore (
    code integer NOT NULL,
    description character varying(100),
    default_item boolean DEFAULT false,
    level integer DEFAULT 10,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_tipologia_operatore OWNER TO postgres;

--
-- TOC entry 588 (class 1259 OID 18406)
-- Name: lookup_tipologia_operatore_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_tipologia_operatore_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_tipologia_operatore_code_seq OWNER TO postgres;

--
-- TOC entry 7593 (class 0 OID 0)
-- Dependencies: 588
-- Name: lookup_tipologia_operatore_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_tipologia_operatore_code_seq OWNED BY public.lookup_tipologia_operatore.code;


--
-- TOC entry 589 (class 1259 OID 18407)
-- Name: lookup_tipologia_scia; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_tipologia_scia (
    code integer NOT NULL,
    description text,
    level integer,
    short_description text,
    enabled boolean DEFAULT true
);


ALTER TABLE public.lookup_tipologia_scia OWNER TO postgres;

--
-- TOC entry 590 (class 1259 OID 18413)
-- Name: lookup_tipologia_scia_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_tipologia_scia_code_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_tipologia_scia_code_seq OWNER TO postgres;

--
-- TOC entry 7594 (class 0 OID 0)
-- Dependencies: 590
-- Name: lookup_tipologia_scia_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_tipologia_scia_code_seq OWNED BY public.lookup_tipologia_scia.code;


--
-- TOC entry 591 (class 1259 OID 18414)
-- Name: lookup_tipologia_struttura; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lookup_tipologia_struttura (
    code integer NOT NULL,
    description character varying(300),
    default_item boolean DEFAULT false,
    level integer,
    enabled boolean DEFAULT true,
    enabled_bovini_bufalini boolean,
    enabled_equini boolean,
    enabled_suini boolean,
    enabled_ovini_caprini boolean,
    enabled_avicoli boolean,
    enabled_api boolean,
    enabled_conigli boolean
);


ALTER TABLE public.lookup_tipologia_struttura OWNER TO postgres;

--
-- TOC entry 592 (class 1259 OID 18419)
-- Name: lookup_tipologia_struttura_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_tipologia_struttura_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_tipologia_struttura_code_seq OWNER TO postgres;

--
-- TOC entry 7595 (class 0 OID 0)
-- Dependencies: 592
-- Name: lookup_tipologia_struttura_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_tipologia_struttura_code_seq OWNED BY public.lookup_tipologia_struttura.code;


--
-- TOC entry 593 (class 1259 OID 18420)
-- Name: lookup_toponimi_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.lookup_toponimi_code_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.lookup_toponimi_code_seq OWNER TO postgres;

--
-- TOC entry 7596 (class 0 OID 0)
-- Dependencies: 593
-- Name: lookup_toponimi_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.lookup_toponimi_code_seq OWNED BY public.lookup_toponimi.code;


--
-- TOC entry 594 (class 1259 OID 18421)
-- Name: master_list_aggregazione; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.master_list_aggregazione (
    id integer NOT NULL,
    id_macroarea integer,
    codice_attivita text,
    aggregazione text,
    id_flusso_originale integer
);


ALTER TABLE public.master_list_aggregazione OWNER TO postgres;

--
-- TOC entry 595 (class 1259 OID 18426)
-- Name: master_list_aggregazione_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.master_list_aggregazione_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.master_list_aggregazione_id_seq OWNER TO postgres;

--
-- TOC entry 7597 (class 0 OID 0)
-- Dependencies: 595
-- Name: master_list_aggregazione_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.master_list_aggregazione_id_seq OWNED BY public.master_list_aggregazione.id;


--
-- TOC entry 596 (class 1259 OID 18427)
-- Name: master_list_flag_linee_attivita; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.master_list_flag_linee_attivita (
    id integer NOT NULL,
    codice_univoco text,
    mobile boolean NOT NULL,
    fisso boolean NOT NULL,
    apicoltura boolean NOT NULL,
    registrabili boolean NOT NULL,
    riconoscibili boolean NOT NULL,
    sintesis boolean NOT NULL,
    bdu boolean NOT NULL,
    vam boolean NOT NULL,
    no_scia boolean NOT NULL,
    categorizzabili boolean DEFAULT false
);


ALTER TABLE public.master_list_flag_linee_attivita OWNER TO postgres;

--
-- TOC entry 597 (class 1259 OID 18433)
-- Name: master_list_flag_linee_attivita_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.master_list_flag_linee_attivita_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.master_list_flag_linee_attivita_id_seq OWNER TO postgres;

--
-- TOC entry 7598 (class 0 OID 0)
-- Dependencies: 597
-- Name: master_list_flag_linee_attivita_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.master_list_flag_linee_attivita_id_seq OWNED BY public.master_list_flag_linee_attivita.id;


--
-- TOC entry 598 (class 1259 OID 18434)
-- Name: master_list_linea_attivita; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.master_list_linea_attivita (
    id integer NOT NULL,
    id_aggregazione integer,
    codice_prodotto_specie text,
    linea_attivita text,
    tipo text,
    scheda_supplementare text,
    note text,
    mapping_ateco text,
    codice_univoco text,
    codice_nazionale_richiesto text,
    chi_inserisce_pratica text,
    chi_valida text,
    ateco1 text,
    ateco2 text,
    ateco3 text,
    ateco4 text,
    ateco5 text,
    ateco6 text,
    ateco7 text,
    ateco8 text,
    ateco9 text,
    ateco10 text,
    ateco11 text,
    ateco12 text,
    ateco13 text,
    ateco14 text,
    ateco15 text,
    ateco16 text,
    ateco17 text,
    ateco18 text,
    note_hd text,
    enabled boolean DEFAULT true,
    id_lookup_tipo_attivita integer,
    flag_b_e_b boolean,
    flag_home_food boolean
);


ALTER TABLE public.master_list_linea_attivita OWNER TO postgres;

--
-- TOC entry 599 (class 1259 OID 18440)
-- Name: master_list_linea_attivita_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.master_list_linea_attivita_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.master_list_linea_attivita_id_seq OWNER TO postgres;

--
-- TOC entry 7599 (class 0 OID 0)
-- Dependencies: 599
-- Name: master_list_linea_attivita_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.master_list_linea_attivita_id_seq OWNED BY public.master_list_linea_attivita.id;


--
-- TOC entry 600 (class 1259 OID 18441)
-- Name: master_list_macroarea; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.master_list_macroarea (
    id integer NOT NULL,
    codice_sezione text,
    codice_norma text,
    norma text,
    macroarea text,
    id_norma integer
);


ALTER TABLE public.master_list_macroarea OWNER TO postgres;

--
-- TOC entry 601 (class 1259 OID 18446)
-- Name: master_list_macroarea_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.master_list_macroarea_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.master_list_macroarea_id_seq OWNER TO postgres;

--
-- TOC entry 7600 (class 0 OID 0)
-- Dependencies: 601
-- Name: master_list_macroarea_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.master_list_macroarea_id_seq OWNED BY public.master_list_macroarea.id;


--
-- TOC entry 602 (class 1259 OID 18447)
-- Name: master_list_sk_elenco; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.master_list_sk_elenco (
    id integer NOT NULL,
    id_scheda integer,
    tit_scheda text,
    nome text,
    testo_aggiuntivo boolean DEFAULT false,
    insert_date timestamp without time zone DEFAULT now(),
    disabled_date timestamp without time zone
);


ALTER TABLE public.master_list_sk_elenco OWNER TO postgres;

--
-- TOC entry 603 (class 1259 OID 18454)
-- Name: master_list_sk_elenco_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.master_list_sk_elenco_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.master_list_sk_elenco_id_seq OWNER TO postgres;

--
-- TOC entry 7601 (class 0 OID 0)
-- Dependencies: 603
-- Name: master_list_sk_elenco_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.master_list_sk_elenco_id_seq OWNED BY public.master_list_sk_elenco.id;


--
-- TOC entry 604 (class 1259 OID 18455)
-- Name: opu_lookup_norme_master_list; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.opu_lookup_norme_master_list (
    code integer NOT NULL,
    description text NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true,
    tipo_iter integer,
    entered timestamp without time zone,
    modified timestamp without time zone,
    flag_vecchia_gestione boolean,
    id_tipologia_organization integer,
    codice_norma text
);


ALTER TABLE public.opu_lookup_norme_master_list OWNER TO postgres;

--
-- TOC entry 605 (class 1259 OID 18463)
-- Name: master_list_view; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.master_list_view AS
 SELECT master_list_macroarea.id AS id_nuova_linea_attivita,
    true AS enabled,
    master_list_macroarea.id AS id_macroarea,
    NULL::integer AS id_aggregazione,
    NULL::integer AS id_attivita,
    master_list_macroarea.codice_sezione AS codice_macroarea,
    ''::text AS codice_aggregazione,
    ''::text AS codice_attivita,
    master_list_macroarea.macroarea,
    ''::text AS aggregazione,
    ''::text AS attivita,
    master_list_macroarea.id_norma,
    master_list_macroarea.norma,
    norme.codice_norma,
    master_list_macroarea.macroarea AS descrizione,
    1 AS livello,
    '-1'::integer AS id_padre,
    '-1'::character varying(1000) AS path_id,
    (master_list_macroarea.macroarea)::character varying(1000) AS path_desc,
    master_list_macroarea.codice_sezione AS codice,
    (master_list_macroarea.codice_sezione)::character varying(1000) AS path_codice
   FROM (public.master_list_macroarea
     LEFT JOIN public.opu_lookup_norme_master_list norme ON ((norme.code = master_list_macroarea.id_norma)))
UNION ALL
 SELECT t.id AS id_nuova_linea_attivita,
    true AS enabled,
    t.id_macroarea,
    t.id AS id_aggregazione,
    NULL::integer AS id_attivita,
    rt.codice_sezione AS codice_macroarea,
    t.codice_attivita AS codice_aggregazione,
    ''::text AS codice_attivita,
    rt.macroarea,
    t.aggregazione,
    ''::text AS attivita,
    rt.id_norma,
    rt.norma,
    norme2.codice_norma,
    t.aggregazione AS descrizione,
    2 AS livello,
    t.id_macroarea AS id_padre,
    ((((rt.id)::text || ';'::text) || t.id))::character varying(1000) AS path_id,
    (((rt.macroarea || '->'::text) || t.aggregazione))::character varying(1000) AS path_desc,
    t.codice_attivita AS codice,
    (((rt.codice_sezione || '->'::text) || t.codice_attivita))::character varying(1000) AS path_codice
   FROM ((public.master_list_aggregazione t
     JOIN public.master_list_macroarea rt ON ((rt.id = t.id_macroarea)))
     LEFT JOIN public.opu_lookup_norme_master_list norme2 ON ((norme2.code = rt.id_norma)))
UNION ALL
 SELECT a.id AS id_nuova_linea_attivita,
    true AS enabled,
    rt3.id AS id_macroarea,
    rt2.id AS id_aggregazione,
    a.id AS id_attivita,
    rt3.codice_sezione AS codice_macroarea,
    rt2.codice_attivita AS codice_aggregazione,
    a.codice_prodotto_specie AS codice_attivita,
    rt3.macroarea,
    rt2.aggregazione,
    a.linea_attivita AS attivita,
    rt3.id_norma,
    norme3.codice_norma AS norma,
    rt3.norma AS codice_norma,
    a.linea_attivita AS descrizione,
    3 AS livello,
    a.id_aggregazione AS id_padre,
    (((((rt3.id)::text || ';'::text) || ((rt2.id)::text || ';'::text)) || a.id))::character varying(1000) AS path_id,
    ((((rt3.macroarea || '->'::text) || (rt2.aggregazione || '->'::text)) || a.linea_attivita))::character varying(1000) AS path_desc,
    concat_ws('-'::text, rt3.codice_sezione, rt2.codice_attivita, a.codice_prodotto_specie) AS codice,
    ((((rt3.codice_sezione || '->'::text) || (rt2.codice_attivita || '->'::text)) || a.codice_prodotto_specie))::character varying(1000) AS path_codice
   FROM (((public.master_list_linea_attivita a
     JOIN public.master_list_aggregazione rt2 ON ((rt2.id = a.id_aggregazione)))
     JOIN public.master_list_macroarea rt3 ON ((rt3.id = rt2.id_macroarea)))
     LEFT JOIN public.opu_lookup_norme_master_list norme3 ON ((norme3.code = rt3.id_norma)));


ALTER TABLE public.master_list_view OWNER TO postgres;

--
-- TOC entry 606 (class 1259 OID 18468)
-- Name: matrici_campioni; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.matrici_campioni (
    id integer NOT NULL,
    id_campione integer,
    id_matrice integer,
    cammino text,
    note text
);


ALTER TABLE public.matrici_campioni OWNER TO postgres;

--
-- TOC entry 607 (class 1259 OID 18473)
-- Name: matrici_campioni_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.matrici_campioni_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.matrici_campioni_id_seq OWNER TO postgres;

--
-- TOC entry 7602 (class 0 OID 0)
-- Dependencies: 607
-- Name: matrici_campioni_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.matrici_campioni_id_seq OWNED BY public.matrici_campioni.id;


--
-- TOC entry 608 (class 1259 OID 18474)
-- Name: matrici_matrice_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.matrici_matrice_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.matrici_matrice_id_seq OWNER TO postgres;

--
-- TOC entry 7603 (class 0 OID 0)
-- Dependencies: 608
-- Name: matrici_matrice_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.matrici_matrice_id_seq OWNED BY public.matrici.matrice_id;


--
-- TOC entry 609 (class 1259 OID 18475)
-- Name: matrici_new_matrice_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.matrici_new_matrice_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.matrici_new_matrice_id_seq OWNER TO postgres;

--
-- TOC entry 7604 (class 0 OID 0)
-- Dependencies: 609
-- Name: matrici_new_matrice_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.matrici_new_matrice_id_seq OWNED BY public.matrici.matrice_id;


--
-- TOC entry 610 (class 1259 OID 18476)
-- Name: messaggi_interni; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.messaggi_interni (
    id integer NOT NULL,
    subject character varying(255),
    body text NOT NULL,
    reply_id integer NOT NULL,
    enteredby integer NOT NULL,
    sent timestamp(3) without time zone DEFAULT now() NOT NULL,
    entered timestamp(3) without time zone DEFAULT now() NOT NULL,
    modified timestamp(3) without time zone DEFAULT now() NOT NULL,
    type integer DEFAULT '-1'::integer NOT NULL,
    modifiedby integer NOT NULL,
    delete_flag boolean DEFAULT false,
    tipo integer
);


ALTER TABLE public.messaggi_interni OWNER TO postgres;

--
-- TOC entry 611 (class 1259 OID 18486)
-- Name: messaggi_interni_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.messaggi_interni_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.messaggi_interni_id_seq OWNER TO postgres;

--
-- TOC entry 7605 (class 0 OID 0)
-- Dependencies: 611
-- Name: messaggi_interni_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.messaggi_interni_id_seq OWNED BY public.messaggi_interni.id;


--
-- TOC entry 612 (class 1259 OID 18487)
-- Name: messaggi_interni_link; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.messaggi_interni_link (
    id integer NOT NULL,
    sent_to integer NOT NULL,
    status integer DEFAULT 0 NOT NULL,
    viewed timestamp(3) without time zone,
    enabled boolean DEFAULT true NOT NULL,
    sent_from integer NOT NULL
);


ALTER TABLE public.messaggi_interni_link OWNER TO postgres;

--
-- TOC entry 613 (class 1259 OID 18492)
-- Name: messaggio_mod4; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.messaggio_mod4 (
    id integer NOT NULL,
    messaggio text,
    id_utente integer,
    entered timestamp without time zone DEFAULT now()
);


ALTER TABLE public.messaggio_mod4 OWNER TO postgres;

--
-- TOC entry 614 (class 1259 OID 18498)
-- Name: messaggio_mod4_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.messaggio_mod4_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.messaggio_mod4_id_seq OWNER TO postgres;

--
-- TOC entry 7606 (class 0 OID 0)
-- Dependencies: 614
-- Name: messaggio_mod4_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.messaggio_mod4_id_seq OWNED BY public.messaggio_mod4.id;


--
-- TOC entry 615 (class 1259 OID 18499)
-- Name: ml8_master_list; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ml8_master_list (
    id integer NOT NULL,
    descrizione text,
    livello integer,
    id_padre integer,
    codice text,
    versione text,
    id_norma integer,
    enabled boolean DEFAULT true,
    id_lookup_tipo_attivita integer,
    note_hd text,
    flag_pnaa boolean,
    id_flusso_origine integer,
    id_lookup_tipo_linee_mobili integer,
    decodifica_tipo_produzione_bdn text,
    decodifica_codice_orientamento_bdn text,
    decodifica_specie_bdn text,
    flag_b_e_b boolean,
    flag_bdu boolean
);


ALTER TABLE public.ml8_master_list OWNER TO postgres;

--
-- TOC entry 616 (class 1259 OID 18505)
-- Name: ml8_linee_attivita_nuove; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.ml8_linee_attivita_nuove AS
 WITH RECURSIVE recursetree(id, flag_pnaa, nonno, descrizione, livello, id_padre, path_id, path_descrizione, codice, path_codice, id_norma, id_lookup_configurazione_validazione, id_lookup_tipo_attivita, id_lookup_tipo_linee_mobili, decodifica_tipo_produzione_bdn, decodifica_codice_orientamento_bdn, decodifica_specie_bdn) AS (
         SELECT ml8_master_list.id,
            ml8_master_list.flag_pnaa,
            ml8_master_list.id_padre AS nonno,
            ml8_master_list.descrizione,
            ml8_master_list.livello,
            ml8_master_list.id_padre,
            (ml8_master_list.id_padre)::character varying(1000) AS path_id,
            (ml8_master_list.descrizione)::character varying(1000) AS path_desc,
            ml8_master_list.codice,
            (ml8_master_list.codice)::character varying(1000) AS path_codice,
            ml8_master_list.id_norma,
            ml8_master_list.id_flusso_origine,
            ml8_master_list.id_lookup_tipo_attivita,
            ml8_master_list.id_lookup_tipo_linee_mobili,
            ml8_master_list.decodifica_tipo_produzione_bdn,
            ml8_master_list.decodifica_codice_orientamento_bdn,
            ml8_master_list.decodifica_specie_bdn
           FROM public.ml8_master_list
          WHERE (ml8_master_list.id_padre = '-1'::integer)
        UNION ALL
         SELECT t.id,
            t.flag_pnaa,
            t.id_padre AS nonno,
            t.descrizione,
            t.livello,
            t.id_padre,
            ((((rt.path_id)::text || ';'::text) || t.id_padre))::character varying(1000) AS "varchar",
            ((((rt.path_descrizione)::text || '->'::text) || t.descrizione))::character varying(1000) AS path_desc,
            t.codice,
            ((((rt.path_codice)::text || '->'::text) || t.codice))::character varying(1000) AS path_codice,
            t.id_norma,
            t.id_flusso_origine,
            t.id_lookup_tipo_attivita,
            t.id_lookup_tipo_linee_mobili,
            t.decodifica_tipo_produzione_bdn,
            t.decodifica_codice_orientamento_bdn,
            t.decodifica_specie_bdn
           FROM (public.ml8_master_list t
             JOIN recursetree rt ON ((rt.id = t.id_padre)))
        )
 SELECT DISTINCT recursetree.id AS id_nuova_linea_attivita,
    true AS enabled,
        CASE
            WHEN ((split_part((((recursetree.path_id)::text || ';'::text) || recursetree.id), ';'::text, 2) IS NOT NULL) AND (split_part((((recursetree.path_id)::text || ';'::text) || recursetree.id), ';'::text, 2) <> ''::text)) THEN (split_part((((recursetree.path_id)::text || ';'::text) || recursetree.id), ';'::text, 2))::integer
            ELSE '-1'::integer
        END AS id_macroarea,
        CASE
            WHEN ((split_part((((recursetree.path_id)::text || ';'::text) || recursetree.id), ';'::text, 3) IS NOT NULL) AND (split_part((((recursetree.path_id)::text || ';'::text) || recursetree.id), ';'::text, 3) <> ''::text)) THEN (split_part((((recursetree.path_id)::text || ';'::text) || recursetree.id), ';'::text, 3))::integer
            ELSE '-1'::integer
        END AS id_aggregazione,
        CASE
            WHEN ((split_part((((recursetree.path_id)::text || ';'::text) || recursetree.id), ';'::text, 4) IS NOT NULL) AND (split_part((((recursetree.path_id)::text || ';'::text) || recursetree.id), ';'::text, 4) <> ''::text)) THEN (split_part((((recursetree.path_id)::text || ';'::text) || recursetree.id), ';'::text, 4))::integer
            ELSE '-1'::integer
        END AS id_attivita,
        CASE
            WHEN ((split_part((recursetree.path_codice)::text, '->'::text, 1) IS NOT NULL) AND (split_part((recursetree.path_codice)::text, '->'::text, 1) <> ''::text)) THEN split_part((recursetree.path_codice)::text, '->'::text, 1)
            ELSE '-1'::text
        END AS codice_macroarea,
        CASE
            WHEN ((split_part((recursetree.path_codice)::text, '->'::text, 2) IS NOT NULL) AND (split_part((recursetree.path_codice)::text, '->'::text, 2) <> ''::text)) THEN split_part((recursetree.path_codice)::text, '->'::text, 2)
            ELSE 'N.D'::text
        END AS codice_aggregazione,
        CASE
            WHEN ((split_part((recursetree.path_codice)::text, '->'::text, 3) IS NOT NULL) AND (split_part((recursetree.path_codice)::text, '->'::text, 3) <> ''::text)) THEN split_part((recursetree.path_codice)::text, '->'::text, 3)
            ELSE 'N.D'::text
        END AS codice_attivita,
        CASE
            WHEN ((split_part((recursetree.path_descrizione)::text, '->'::text, 1) IS NOT NULL) AND (split_part((recursetree.path_descrizione)::text, '->'::text, 1) <> ''::text)) THEN split_part((recursetree.path_descrizione)::text, '->'::text, 1)
            ELSE 'N.D'::text
        END AS macroarea,
        CASE
            WHEN ((split_part((recursetree.path_descrizione)::text, '->'::text, 2) IS NOT NULL) AND (split_part((recursetree.path_descrizione)::text, '->'::text, 2) <> ''::text)) THEN split_part((recursetree.path_descrizione)::text, '->'::text, 2)
            ELSE 'N.D'::text
        END AS aggregazione,
        CASE
            WHEN ((split_part((recursetree.path_descrizione)::text, '->'::text, 3) IS NOT NULL) AND (split_part((recursetree.path_descrizione)::text, '->'::text, 3) <> ''::text)) THEN split_part((recursetree.path_descrizione)::text, '->'::text, 3)
            ELSE 'N.D'::text
        END AS attivita,
    recursetree.id_norma,
    ''::text AS norma,
    recursetree.descrizione,
    recursetree.livello,
    recursetree.id_padre,
    recursetree.path_id,
    recursetree.path_descrizione,
    (((recursetree.path_id)::text || ';'::text) || recursetree.id) AS "?column?",
    recursetree.codice,
    recursetree.path_codice,
    recursetree.flag_pnaa,
    recursetree.id_lookup_configurazione_validazione,
    recursetree.id_lookup_tipo_attivita,
    recursetree.id_lookup_tipo_linee_mobili,
    recursetree.decodifica_tipo_produzione_bdn,
    recursetree.decodifica_codice_orientamento_bdn,
    recursetree.decodifica_specie_bdn
   FROM recursetree
  ORDER BY (((recursetree.path_id)::text || ';'::text) || recursetree.id);


ALTER TABLE public.ml8_linee_attivita_nuove OWNER TO postgres;

--
-- TOC entry 617 (class 1259 OID 18510)
-- Name: ml8_linee_attivita_nuove_materializzata; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ml8_linee_attivita_nuove_materializzata (
    id_nuova_linea_attivita integer,
    enabled boolean,
    id_macroarea integer,
    id_aggregazione integer,
    id_attivita integer,
    codice_macroarea text,
    codice_aggregazione text,
    codice_attivita text,
    macroarea text,
    aggregazione text,
    attivita text,
    id_norma integer,
    norma text,
    descrizione text,
    livello integer,
    id_padre integer,
    path_id character varying(1000),
    path_descrizione character varying(1000),
    "?column?" text,
    codice text,
    path_codice character varying(1000),
    flag_pnaa boolean,
    id_lookup_configurazione_validazione integer,
    id_lookup_tipo_attivita integer,
    id_lookup_tipo_linee_mobili integer,
    decodifica_tipo_produzione_bdn text,
    decodifica_codice_orientamento_bdn text,
    decodifica_specie_bdn text,
    consenti_upload_file boolean DEFAULT false,
    consenti_valori_multipli boolean DEFAULT false,
    rev integer,
    codice_norma text
);


ALTER TABLE public.ml8_linee_attivita_nuove_materializzata OWNER TO postgres;

--
-- TOC entry 618 (class 1259 OID 18517)
-- Name: ml8_master_list_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.ml8_master_list_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ml8_master_list_id_seq OWNER TO postgres;

--
-- TOC entry 7607 (class 0 OID 0)
-- Dependencies: 618
-- Name: ml8_master_list_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.ml8_master_list_id_seq OWNED BY public.ml8_master_list.id;


--
-- TOC entry 619 (class 1259 OID 18518)
-- Name: ml_partizioni; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ml_partizioni (
    code integer NOT NULL,
    description text,
    nome_campo text,
    nome_tabella text,
    valore_start integer NOT NULL,
    valore_end integer NOT NULL
);


ALTER TABLE public.ml_partizioni OWNER TO postgres;

--
-- TOC entry 620 (class 1259 OID 18523)
-- Name: ml_partizioni_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.ml_partizioni_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ml_partizioni_code_seq OWNER TO postgres;

--
-- TOC entry 7608 (class 0 OID 0)
-- Dependencies: 620
-- Name: ml_partizioni_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.ml_partizioni_code_seq OWNED BY public.ml_partizioni.code;


--
-- TOC entry 621 (class 1259 OID 18524)
-- Name: modello_pnaa_values; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.modello_pnaa_values (
    id integer NOT NULL,
    enteredby integer,
    entered timestamp without time zone DEFAULT now(),
    trashed_date timestamp without time zone,
    id_campione integer,
    numero_scheda text,
    campione_ore text,
    campione_presente text,
    telefono text,
    targa_mezzo text,
    id_luogo_prelievo integer,
    id_principi_additivi integer,
    id_principi_additivi_co integer,
    quantita_pa text,
    id_contaminanti integer,
    id_metodo_campionamento integer,
    id_dpa integer,
    campione_num_prelevati text,
    codice_luogo_prelievo text,
    micotossine_specifica text,
    altro_specifica text,
    programma_controllo_fa_specifica text,
    programma_controllo_an_specifica text,
    programma_controllo_ci_specifica text,
    programma_controllo_at_specifica text,
    programma_controllo_ao_specifica text,
    programma_controllo_az_specifica text,
    programma_controllo_co_fa_specifica text,
    programma_controllo_co_ci_specifica text,
    programma_controllo_in_ci_specifica text,
    programma_controllo_in_ra_specifica text,
    programma_controllo_in_pe_specifica text,
    id_matrice_campione integer,
    mangime_semplice_specifica text,
    id_mangime_composto integer,
    id_premiscela_additivi integer,
    trattamento_mangime text,
    id_confezionamento integer,
    ragione_sociale_ditta_produttrice text,
    indirizzo_ditta_produttrice text,
    id_metodo_produzione integer,
    nome_commerciale_mangime text,
    responsabile_etichettatura text,
    indirizzo_responsabile_etichettatura text,
    paese_produzione text,
    data_produzione text,
    data_scadenza text,
    num_lotto text,
    dimensione_lotto text,
    ingredienti text,
    commenti_mangime_prelevato text,
    laboratorio_destinazione text,
    id_allega_cartellino integer,
    descrizione_attrezzature text,
    num_punti text,
    num_ce text,
    volume text,
    operazioni text,
    volume_2 text,
    operazioni_2 text,
    numero_cf text,
    quantita_gml text,
    dichiarazione text,
    conservazione_campione text,
    num_copie text,
    num_campioni_finali text,
    custode text,
    id_campione_finale integer,
    id_rinuncia_campione integer,
    lista_specie_vegetale_dichiarata text,
    lista_specie_alimento_destinato text,
    lista_stato_prodotto_prelievo text,
    volume_3 text,
    num_campioni_finali_invio text,
    num_copie_invio text,
    destinazione_invio text,
    data_invio text,
    id_cg_ridotto integer,
    id_cg_cr integer,
    id_sequestro_partita integer,
    id_categoria_sottoprodotti integer,
    note_hd text,
    codice_luogo_prelievo_old text
);


ALTER TABLE public.modello_pnaa_values OWNER TO postgres;

--
-- TOC entry 622 (class 1259 OID 18530)
-- Name: non_conformita; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.non_conformita (
    id integer NOT NULL,
    id_giornata_ispettiva integer,
    id_tipo_verifica integer,
    id_linea integer,
    entered timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    enteredby integer,
    modified timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    modifiedby integer,
    trashed_date timestamp without time zone,
    note text
);


ALTER TABLE public.non_conformita OWNER TO postgres;

--
-- TOC entry 623 (class 1259 OID 18537)
-- Name: non_conformita_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.non_conformita_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.non_conformita_id_seq OWNER TO postgres;

--
-- TOC entry 7609 (class 0 OID 0)
-- Dependencies: 623
-- Name: non_conformita_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.non_conformita_id_seq OWNED BY public.non_conformita.id;


--
-- TOC entry 624 (class 1259 OID 18538)
-- Name: operatori_allevamenti; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.operatori_allevamenti (
    id_asl integer,
    cf text NOT NULL,
    nominativo text,
    indirizzo text,
    cap text,
    comune text,
    prov text,
    id_asl_old integer
);


ALTER TABLE public.operatori_allevamenti OWNER TO postgres;

--
-- TOC entry 625 (class 1259 OID 18543)
-- Name: operatori_associati_mercato_ittico; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.operatori_associati_mercato_ittico (
    id integer NOT NULL,
    id_mercato_ittico integer NOT NULL,
    id_operatore integer NOT NULL,
    tipo_operatore integer DEFAULT '-1'::integer,
    entered timestamp without time zone DEFAULT now(),
    entered_by integer DEFAULT '-1'::integer,
    contenitore_mercato_ittico text,
    importato_in_anagrafica boolean DEFAULT false
);


ALTER TABLE public.operatori_associati_mercato_ittico OWNER TO postgres;

--
-- TOC entry 626 (class 1259 OID 18552)
-- Name: operatori_associati_mercato_ittico_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.operatori_associati_mercato_ittico_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.operatori_associati_mercato_ittico_id_seq OWNER TO postgres;

--
-- TOC entry 7610 (class 0 OID 0)
-- Dependencies: 626
-- Name: operatori_associati_mercato_ittico_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.operatori_associati_mercato_ittico_id_seq OWNED BY public.operatori_associati_mercato_ittico.id;


--
-- TOC entry 627 (class 1259 OID 18553)
-- Name: opu_indirizzo_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.opu_indirizzo_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.opu_indirizzo_id_seq OWNER TO postgres;

--
-- TOC entry 7611 (class 0 OID 0)
-- Dependencies: 627
-- Name: opu_indirizzo_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.opu_indirizzo_id_seq OWNED BY public.opu_indirizzo.id;


--
-- TOC entry 628 (class 1259 OID 18554)
-- Name: opu_insert_log; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.opu_insert_log (
    id integer NOT NULL,
    data_inserimento timestamp without time zone,
    user_id integer,
    flag_duplicato boolean,
    id_opu_inserito integer,
    id_opu_duplicato integer,
    flag_vecchia_anagrafica boolean,
    org_id integer,
    partita_iva text
);


ALTER TABLE public.opu_insert_log OWNER TO postgres;

--
-- TOC entry 629 (class 1259 OID 18559)
-- Name: opu_insert_log_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.opu_insert_log_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.opu_insert_log_id_seq OWNER TO postgres;

--
-- TOC entry 7612 (class 0 OID 0)
-- Dependencies: 629
-- Name: opu_insert_log_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.opu_insert_log_id_seq OWNED BY public.opu_insert_log.id;


--
-- TOC entry 630 (class 1259 OID 18560)
-- Name: opu_relazione_stabilimento_linee_produttive; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.opu_relazione_stabilimento_linee_produttive (
    id integer NOT NULL,
    id_linea_produttiva integer,
    id_stabilimento integer,
    stato integer DEFAULT 1,
    data_inizio timestamp without time zone,
    data_fine timestamp without time zone,
    autorizzazione text,
    note character varying,
    telefono1 text,
    telefono2 text,
    mail1 text,
    mail2 text,
    fax text,
    tipo_attivita_produttiva integer,
    primario boolean,
    enabled boolean,
    modified timestamp without time zone,
    modifiedby integer,
    descrizione_linea_attivita text,
    numero_registrazione text,
    id_linea_nuova_aziende_agricole integer,
    codice_ufficiale_esistente text,
    data_generazione_numero timestamp without time zone,
    id_rel_stab_lp_old integer,
    categoria_rischio integer,
    data_prossimo_controllo time with time zone,
    id_vecchia_linea integer,
    num_protocollo text,
    id_tipo_vecchio_operatore integer,
    codice_nazionale text,
    data_generazione_codice_nazionale timestamp without time zone,
    id_nuova_linea_azienda_agricole integer,
    entered timestamp without time zone,
    enteredby integer,
    data_sospensione_volontaria timestamp without time zone,
    pregresso_o_import boolean,
    id_linea_fittizia_pre_aggiornamento integer,
    flag_spostamento boolean DEFAULT false,
    id_scia_sospensione integer,
    scia_sospensione boolean,
    id_suap_rel_stab_lp integer,
    note_internal_use_hd_only text,
    note_hd text,
    codice_univoco_ml text,
    id_linea_produttiva_old integer,
    id_istanza_pre_trasferimento integer,
    numero_registrazione_old text,
    tipo_carattere integer,
    aggiunta_come_pregressa boolean,
    aggiunta_come_ampliamento boolean,
    escludi_ricerca boolean,
    id_sinaaf text
);


ALTER TABLE public.opu_relazione_stabilimento_linee_produttive OWNER TO postgres;

--
-- TOC entry 631 (class 1259 OID 18567)
-- Name: opu_linee_attivita_stabilimenti_view; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.opu_linee_attivita_stabilimenti_view AS
 SELECT DISTINCT v2.id_attivita,
    v1.id_stabilimento AS org_id,
    v1.id_linea_produttiva AS id_rel_ateco_attivita,
    v1.primario,
    v2.aggregazione AS categoria,
    v2.attivita AS linea_attivita,
    v2.codice_attivita AS codice_istat,
    v2.codice,
    v1.id,
    v1.enabled,
    v2.macroarea
   FROM (public.opu_relazione_stabilimento_linee_produttive v1
     LEFT JOIN public.ml8_linee_attivita_nuove_materializzata v2 ON ((v1.id_linea_produttiva = v2.id_nuova_linea_attivita)))
  WHERE v1.enabled;


ALTER TABLE public.opu_linee_attivita_stabilimenti_view OWNER TO postgres;

--
-- TOC entry 632 (class 1259 OID 18572)
-- Name: opu_lookup_norme_master_list_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.opu_lookup_norme_master_list_code_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.opu_lookup_norme_master_list_code_seq OWNER TO postgres;

--
-- TOC entry 7613 (class 0 OID 0)
-- Dependencies: 632
-- Name: opu_lookup_norme_master_list_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.opu_lookup_norme_master_list_code_seq OWNED BY public.opu_lookup_norme_master_list.code;


--
-- TOC entry 633 (class 1259 OID 18573)
-- Name: opu_lookup_norme_master_list_rel_tipologia_organzation; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.opu_lookup_norme_master_list_rel_tipologia_organzation (
    id integer NOT NULL,
    id_opu_lookup_norme_master_list integer,
    tipologia_organization integer,
    codice_univoco_ml text,
    id_opu_lookup_norme_master_list_old integer,
    macroarea_temp text,
    aggregazione_temp text,
    linea_temp text,
    tipo_molluschi_bivalvi integer
);


ALTER TABLE public.opu_lookup_norme_master_list_rel_tipologia_organzation OWNER TO postgres;

--
-- TOC entry 634 (class 1259 OID 18578)
-- Name: opu_lookup_norme_master_list_rel_tipologia_organzation_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.opu_lookup_norme_master_list_rel_tipologia_organzation_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.opu_lookup_norme_master_list_rel_tipologia_organzation_id_seq OWNER TO postgres;

--
-- TOC entry 7614 (class 0 OID 0)
-- Dependencies: 634
-- Name: opu_lookup_norme_master_list_rel_tipologia_organzation_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.opu_lookup_norme_master_list_rel_tipologia_organzation_id_seq OWNED BY public.opu_lookup_norme_master_list_rel_tipologia_organzation.id;


--
-- TOC entry 635 (class 1259 OID 18579)
-- Name: opu_lookup_stato_ruolo_soggetto; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.opu_lookup_stato_ruolo_soggetto (
    code integer NOT NULL,
    description character varying(300) NOT NULL,
    default_item boolean DEFAULT false,
    level integer DEFAULT 0,
    enabled boolean DEFAULT true
);


ALTER TABLE public.opu_lookup_stato_ruolo_soggetto OWNER TO postgres;

--
-- TOC entry 636 (class 1259 OID 18585)
-- Name: opu_lookup_stato_ruolo_soggetto_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.opu_lookup_stato_ruolo_soggetto_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.opu_lookup_stato_ruolo_soggetto_code_seq OWNER TO postgres;

--
-- TOC entry 7615 (class 0 OID 0)
-- Dependencies: 636
-- Name: opu_lookup_stato_ruolo_soggetto_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.opu_lookup_stato_ruolo_soggetto_code_seq OWNED BY public.opu_lookup_stato_ruolo_soggetto.code;


--
-- TOC entry 637 (class 1259 OID 18586)
-- Name: opu_lookup_tipologia_attivita_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.opu_lookup_tipologia_attivita_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.opu_lookup_tipologia_attivita_code_seq OWNER TO postgres;

--
-- TOC entry 7616 (class 0 OID 0)
-- Dependencies: 637
-- Name: opu_lookup_tipologia_attivita_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.opu_lookup_tipologia_attivita_code_seq OWNED BY public.opu_lookup_tipologia_attivita.code;


--
-- TOC entry 638 (class 1259 OID 18587)
-- Name: opu_lookup_tipologia_carattere_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.opu_lookup_tipologia_carattere_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.opu_lookup_tipologia_carattere_code_seq OWNER TO postgres;

--
-- TOC entry 7617 (class 0 OID 0)
-- Dependencies: 638
-- Name: opu_lookup_tipologia_carattere_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.opu_lookup_tipologia_carattere_code_seq OWNED BY public.opu_lookup_tipologia_carattere.code;


--
-- TOC entry 639 (class 1259 OID 18588)
-- Name: opu_operatore_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.opu_operatore_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.opu_operatore_id_seq OWNER TO postgres;

--
-- TOC entry 7618 (class 0 OID 0)
-- Dependencies: 639
-- Name: opu_operatore_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.opu_operatore_id_seq OWNED BY public.opu_operatore.id;


--
-- TOC entry 640 (class 1259 OID 18589)
-- Name: opu_operatori_denormalizzati_view; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.opu_operatori_denormalizzati_view AS
 SELECT DISTINCT
        CASE
            WHEN (stab.flag_dia IS NOT NULL) THEN stab.flag_dia
            ELSE false
        END AS flag_dia,
    o.id AS id_opu_operatore,
    o.ragione_sociale,
    o.partita_iva,
    o.codice_fiscale_impresa,
    (((((
        CASE
            WHEN (topsedeop.description IS NOT NULL) THEN topsedeop.description
            ELSE ''::character varying
        END)::text || ' '::text) || (sedeop.via)::text) || ' '::text) ||
        CASE
            WHEN (sedeop.civico IS NOT NULL) THEN sedeop.civico
            ELSE ''::text
        END) AS indirizzo_sede_legale,
    comunisl.nome AS comune_sede_legale,
    comunisl.istat AS istat_legale,
    sedeop.cap AS cap_sede_legale,
    provsedeop.description AS prov_sede_legale,
    o.note,
    o.entered,
    o.modified,
    o.enteredby,
    o.modifiedby,
    o.domicilio_digitale,
    o.flag_ric_ce,
    o.num_ric_ce,
    i.comune,
    stab.id_asl,
    stab.id AS id_stabilimento,
    stab.esito_import,
    stab.data_import,
    stab.cun,
    stab.id_sinvsa,
    stab.descrizione_errore,
    comuni1.nome AS comune_stab,
    comuni1.istat AS istat_operativo,
    ((((
        CASE
            WHEN (topsedestab.description IS NOT NULL) THEN topsedestab.description
            ELSE ''::character varying
        END)::text || ' '::text) || (sedestab.via)::text) || ' '::text) AS indirizzo_stab,
    sedestab.cap AS cap_stab,
    provsedestab.description AS prov_stab,
    stab.data_fine_dia,
    stab.categoria_rischio,
    soggsl.codice_fiscale AS cf_rapp_sede_legale,
    soggsl.nome AS nome_rapp_sede_legale,
    soggsl.cognome AS cognome_rapp_sede_legale,
    stab.numero_registrazione AS codice_registrazione,
    latt.id_norma,
    latt.codice_attivita AS cf_correntista,
    latt.codice_attivita,
    lps.primario,
    ((((latt.macroarea || '->'::text) || latt.aggregazione) || '->'::text) || latt.attivita) AS attivita,
    lps.data_inizio,
    lps.data_fine,
    stab.numero_registrazione,
    concat_ws(' '::text, topsoggind.description, soggind.via, soggind.civico,
        CASE
            WHEN (comunisoggind.id > 0) THEN (comunisoggind.nome)::text
            ELSE soggind.comune_testo
        END, concat('(', provsoggind.cod_provincia, ')'), soggind.cap) AS indirizzo_rapp_sede_legale,
    stati.description AS stato,
    latt.attivita AS solo_attivita,
    stab.data_inizio_attivita,
    stab.data_fine_attivita,
    stab.data_prossimo_controllo,
    stab.stato AS id_stato,
    latt.path_descrizione AS path_attivita_completo,
    stab.id_indirizzo,
    stab.linee_pregresse,
    true AS flag_nuova_gestione,
    loti.description AS tipo_impresa,
    lotis.description AS tipo_societa,
    stab.codice_ufficiale_esistente,
    stab.id_asl AS id_asl_stab,
    lps.id AS id_linea_attivita,
    lps.modified AS data_mod_attivita,
    stab.entered AS stab_entered,
    lps.numero_registrazione AS linea_numero_registrazione,
    lps.stato AS linea_stato,
    statilinea.description AS linea_stato_text,
    lps.codice_ufficiale_esistente AS linea_codice_ufficiale_esistente,
    stab.codice_ufficiale_esistente AS stab_codice_ufficiale_esistente,
    sedeop.id AS id_indirizzo_operatore,
    stab.import_opu,
    lps.id_linea_produttiva AS id_linea_attivita_stab,
    o.note AS note_operatore,
    stab.note AS note_stabilimento,
    lps.codice_nazionale AS linea_codice_nazionale,
    latt.flag_pnaa,
    (((con.namefirst)::text || ' '::text) || (con.namelast)::text) AS stab_inserito_da,
        CASE
            WHEN ml.fisso THEN 1
            WHEN (stab.tipo_attivita = 1) THEN 1
            WHEN (ml.mobile OR (latt.codice_macroarea = 'MS.090'::text)) THEN 2
            WHEN (stab.tipo_attivita = 2) THEN 2
            ELSE '-1'::integer
        END AS stab_id_attivita,
        CASE
            WHEN ml.fisso THEN 'Con Sede Fissa'::text
            WHEN (stab.tipo_attivita = 1) THEN 'Con Sede Fissa'::text
            WHEN (ml.mobile OR (latt.codice_macroarea = 'MS.090'::text)) THEN 'Senza Sede Fissa'::text
            WHEN (stab.tipo_attivita = 2) THEN 'Senza Sede Fissa'::text
            ELSE 'N.D.'::text
        END AS stab_descrizione_attivita,
    stab.tipo_carattere AS stab_id_carattere,
    lsc.description AS stab_descrizione_carattere,
    o.tipo_impresa AS impresa_id_tipo_impresa,
    asl.description AS stab_asl,
    o.flag_clean,
    stab.data_generazione_numero,
    sedestab.latitudine AS lat_stab,
    sedestab.longitudine AS long_stab,
    lps.entered AS linea_entered,
    lps.modified AS linea_modified,
    latt.macroarea,
    latt.aggregazione,
    latt.attivita AS attivita_xml,
    comuni1.codiceistatasl_old,
    provsedestab.cod_provincia AS sigla_prov_operativa,
    provsedeop.cod_provincia AS sigla_prov_legale,
    provsoggind.cod_provincia AS sigla_prov_soggfisico,
    comunisoggind.nome AS comune_residenza,
    soggsl.data_nascita AS data_nascita_rapp_sede_legale,
    lotis.code AS impresa_id_tipo_societa,
    soggsl.comune_nascita AS comune_nascita_rapp_sede_legale,
    soggsl.sesso,
    soggind.civico,
    topsoggind.description AS toponimo_residenza,
    soggind.toponimo AS id_toponimo_residenza,
    sedeop.civico AS civico_sede_legale,
    sedeop.toponimo AS tiponimo_sede_legale,
    topsedeop.description AS toponimo_sede_legale,
    sedestab.civico AS civico_sede_stab,
    sedestab.toponimo AS tiponimo_sede_stab,
    topsedestab.description AS toponimo_sede_stab,
    soggind.via AS via_rapp_sede_legale,
    sedeop.via AS via_sede_legale,
        CASE
            WHEN ((o.tipo_impresa = 1) AND (stab.tipo_attivita = 1)) THEN comuni1.id
            WHEN ((o.tipo_impresa = 1) AND (stab.tipo_attivita = 2)) THEN comunisoggind.id
            WHEN ((o.tipo_impresa <> 1) AND (stab.tipo_attivita = 1)) THEN comuni1.id
            WHEN ((o.tipo_impresa <> 1) AND (stab.tipo_attivita = 2)) THEN comunisl.id
            ELSE NULL::integer
        END AS id_comune_richiesta,
        CASE
            WHEN ((o.tipo_impresa = 1) AND (stab.tipo_attivita = 1)) THEN comuni1.nome
            WHEN ((o.tipo_impresa = 1) AND (stab.tipo_attivita = 2)) THEN comunisoggind.nome
            WHEN ((o.tipo_impresa <> 1) AND (stab.tipo_attivita = 1)) THEN comuni1.nome
            WHEN ((o.tipo_impresa <> 1) AND (stab.tipo_attivita = 2)) THEN comunisl.nome
            ELSE NULL::character varying
        END AS comune_richiesta,
        CASE
            WHEN ((o.tipo_impresa = 1) AND (stab.tipo_attivita = 1)) THEN (btrim((sedestab.via)::text))::character varying
            WHEN ((o.tipo_impresa = 1) AND (stab.tipo_attivita = 2)) THEN (btrim((soggind.via)::text))::character varying
            WHEN ((o.tipo_impresa <> 1) AND (stab.tipo_attivita = 1)) THEN (btrim((sedestab.via)::text))::character varying
            WHEN ((o.tipo_impresa <> 1) AND (stab.tipo_attivita = 2)) THEN (btrim((sedeop.via)::text))::character varying
            ELSE NULL::character varying
        END AS via_stabilimento_calcolata,
        CASE
            WHEN ((o.tipo_impresa = 1) AND (stab.tipo_attivita = 1)) THEN (btrim(sedestab.civico))::character varying
            WHEN ((o.tipo_impresa = 1) AND (stab.tipo_attivita = 2)) THEN (btrim(soggind.civico))::character varying
            WHEN ((o.tipo_impresa <> 1) AND (stab.tipo_attivita = 1)) THEN (btrim(sedestab.civico))::character varying
            WHEN ((o.tipo_impresa <> 1) AND (stab.tipo_attivita = 2)) THEN (btrim(sedeop.civico))::character varying
            ELSE NULL::character varying
        END AS civico_stabilimento_calcolato,
    soggind.cap AS cap_residenza,
    soggind.nazione AS nazione_residenza,
    sedeop.nazione AS nazione_sede_legale,
    sedestab.nazione AS nazione_stab,
    latt.id_lookup_tipo_linee_mobili,
    '-1'::integer AS id_tipo_linea_produttiva,
    rels.id_soggetto_fisico,
    lps.pregresso_o_import,
    stab.riferimento_org_id,
    latt.codice_macroarea,
    latt.codice_aggregazione,
    latt.codice_attivita AS codice_attivita_only
   FROM (((((((((((((((((((((((((((public.opu_operatore o
     LEFT JOIN public.opu_rel_operatore_soggetto_fisico rels ON (((rels.id_operatore = o.id) AND rels.enabled)))
     LEFT JOIN public.opu_soggetto_fisico soggsl ON ((soggsl.id = rels.id_soggetto_fisico)))
     LEFT JOIN public.opu_indirizzo soggind ON ((soggind.id = soggsl.indirizzo_id)))
     LEFT JOIN public.comuni1 comunisoggind ON ((comunisoggind.id = soggind.comune)))
     LEFT JOIN public.opu_indirizzo sedeop ON ((sedeop.id = o.id_indirizzo)))
     LEFT JOIN public.comuni1 comunisl ON ((sedeop.comune = comunisl.id)))
     JOIN public.opu_stabilimento stab ON ((stab.id_operatore = o.id)))
     JOIN public.opu_relazione_stabilimento_linee_produttive lps ON (((lps.id_stabilimento = stab.id) AND lps.enabled)))
     LEFT JOIN public.lookup_stato_lab stati ON ((stati.code = stab.stato)))
     JOIN public.ml8_linee_attivita_nuove_materializzata latt ON ((latt.id_nuova_linea_attivita = lps.id_linea_produttiva)))
     LEFT JOIN public.master_list_flag_linee_attivita ml ON ((ml.codice_univoco = latt.codice)))
     JOIN public.opu_indirizzo sedestab ON ((sedestab.id = stab.id_indirizzo)))
     LEFT JOIN public.comuni1 ON ((sedestab.comune = comuni1.id)))
     LEFT JOIN public.opu_indirizzo i ON ((i.id = stab.id_indirizzo)))
     LEFT JOIN public.lookup_province provsedestab ON (((provsedestab.code)::text = (sedestab.provincia)::text)))
     LEFT JOIN public.lookup_province provsedeop ON (((provsedeop.code)::text = (sedeop.provincia)::text)))
     LEFT JOIN public.lookup_province provsoggind ON (((provsoggind.code)::text = (soggind.provincia)::text)))
     LEFT JOIN public.lookup_toponimi topsedeop ON ((sedeop.toponimo = topsedeop.code)))
     LEFT JOIN public.lookup_toponimi topsedestab ON ((sedestab.toponimo = topsedestab.code)))
     LEFT JOIN public.lookup_toponimi topsoggind ON ((soggind.toponimo = topsoggind.code)))
     LEFT JOIN public.lookup_opu_tipo_impresa loti ON ((loti.code = o.tipo_impresa)))
     LEFT JOIN public.lookup_opu_tipo_impresa_societa lotis ON ((lotis.code = o.tipo_societa)))
     LEFT JOIN public.lookup_stato_lab statilinea ON ((statilinea.code = lps.stato)))
     LEFT JOIN public.access acc ON ((acc.user_id = stab.entered_by)))
     LEFT JOIN public.contact con ON ((con.contact_id = acc.contact_id)))
     LEFT JOIN public.opu_lookup_tipologia_carattere lsc ON ((lsc.code = stab.tipo_carattere)))
     LEFT JOIN public.lookup_site_id asl ON ((asl.code = stab.id_asl)))
  WHERE ((o.trashed_date IS NULL) AND (stab.trashed_date IS NULL) AND (stab.trashed_date IS NULL));


ALTER TABLE public.opu_operatori_denormalizzati_view OWNER TO postgres;

--
-- TOC entry 641 (class 1259 OID 18594)
-- Name: opu_rel_operatore_soggetto_fisico_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.opu_rel_operatore_soggetto_fisico_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.opu_rel_operatore_soggetto_fisico_id_seq OWNER TO postgres;

--
-- TOC entry 7619 (class 0 OID 0)
-- Dependencies: 641
-- Name: opu_rel_operatore_soggetto_fisico_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.opu_rel_operatore_soggetto_fisico_id_seq OWNED BY public.opu_rel_operatore_soggetto_fisico.id;


--
-- TOC entry 642 (class 1259 OID 18595)
-- Name: opu_relazione_stabilimento_linee_produttive_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.opu_relazione_stabilimento_linee_produttive_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.opu_relazione_stabilimento_linee_produttive_id_seq OWNER TO postgres;

--
-- TOC entry 7620 (class 0 OID 0)
-- Dependencies: 642
-- Name: opu_relazione_stabilimento_linee_produttive_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.opu_relazione_stabilimento_linee_produttive_id_seq OWNED BY public.opu_relazione_stabilimento_linee_produttive.id;


--
-- TOC entry 643 (class 1259 OID 18596)
-- Name: opu_soggetto_fisico_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.opu_soggetto_fisico_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.opu_soggetto_fisico_id_seq OWNER TO postgres;

--
-- TOC entry 7621 (class 0 OID 0)
-- Dependencies: 643
-- Name: opu_soggetto_fisico_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.opu_soggetto_fisico_id_seq OWNED BY public.opu_soggetto_fisico.id;


--
-- TOC entry 644 (class 1259 OID 18597)
-- Name: opu_soggetto_fisico_storico; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.opu_soggetto_fisico_storico (
    id integer NOT NULL,
    titolo character(20),
    cognome text,
    nome text,
    comune_nascita text,
    provincia_nascita character(50),
    codice_fiscale character varying,
    indirizzo_residenza character varying(100),
    cap_residenza character varying(5),
    comune_residenza character varying(50),
    provincia_residenza character(50),
    enteredby integer,
    modifiedby integer,
    entered timestamp without time zone,
    modified timestamp without time zone,
    ipenteredby character(100),
    ipmodifiedby character(100),
    sesso character(1),
    telefono character(50),
    fax character(50),
    email character varying(100),
    telefono1 character(50),
    data_nascita timestamp without time zone,
    documento_identita text,
    indirizzo_id integer,
    id_opu_soggetto_fisico integer,
    provenienza_estera boolean
);


ALTER TABLE public.opu_soggetto_fisico_storico OWNER TO postgres;

--
-- TOC entry 645 (class 1259 OID 18602)
-- Name: opu_soggetto_fisico_storico_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.opu_soggetto_fisico_storico_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.opu_soggetto_fisico_storico_id_seq OWNER TO postgres;

--
-- TOC entry 7622 (class 0 OID 0)
-- Dependencies: 645
-- Name: opu_soggetto_fisico_storico_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.opu_soggetto_fisico_storico_id_seq OWNED BY public.opu_soggetto_fisico_storico.id;


--
-- TOC entry 646 (class 1259 OID 18603)
-- Name: opu_stabilimento_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.opu_stabilimento_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.opu_stabilimento_id_seq OWNER TO postgres;

--
-- TOC entry 7623 (class 0 OID 0)
-- Dependencies: 646
-- Name: opu_stabilimento_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.opu_stabilimento_id_seq OWNED BY public.opu_stabilimento.id;


--
-- TOC entry 647 (class 1259 OID 18604)
-- Name: ricerche_anagrafiche_old_materializzata; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ricerche_anagrafiche_old_materializzata (
    riferimento_id integer,
    riferimento_id_nome text,
    riferimento_id_nome_col text,
    riferimento_id_nome_tab text,
    id_indirizzo_impresa integer,
    id_sede_operativa integer,
    sede_mobile_o_altro integer,
    riferimento_nome_tab_indirizzi text,
    id_impresa integer,
    riferimento_nome_tab_impresa text,
    id_soggetto_fisico integer,
    riferimento_nome_tab_soggetto_fisico text,
    id_attivita integer,
    pregresso_o_import boolean,
    riferimento_org_id integer,
    data_inserimento timestamp without time zone,
    ragione_sociale character varying(300),
    asl_rif integer,
    asl character varying(300),
    codice_fiscale character varying,
    codice_fiscale_rappresentante character varying,
    partita_iva character varying(255),
    categoria_rischio integer,
    prossimo_controllo timestamp without time zone,
    num_riconoscimento text,
    n_reg text,
    n_linea text,
    nominativo_rappresentante text,
    tipo_attivita_descrizione text,
    tipo_attivita integer,
    data_inizio_attivita timestamp without time zone,
    data_fine_attivita timestamp without time zone,
    stato character varying(50),
    id_stato integer,
    comune character varying(100),
    provincia_stab text,
    indirizzo text,
    cap_stab character(20),
    latitudine_stab double precision,
    longitudine_stab double precision,
    comune_leg character varying(100),
    provincia_leg text,
    indirizzo_leg text,
    cap_leg character(20),
    latitudine_leg double precision,
    longitudine_leg double precision,
    macroarea text,
    aggregazione text,
    attivita text,
    path_attivita_completo character varying(1000),
    gestione_masterlist text,
    norma text,
    id_norma integer,
    tipologia_operatore integer,
    tipo_ricerca_anagrafica integer,
    color text,
    n_reg_old text,
    id_tipo_linea_reg_ric integer,
    id_linea integer,
    codice_macroarea text,
    codice_aggregazione text,
    codice_attivita text,
    miscela boolean
);


ALTER TABLE public.ricerche_anagrafiche_old_materializzata OWNER TO postgres;

--
-- TOC entry 648 (class 1259 OID 18609)
-- Name: org_linee_attivita_view; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.org_linee_attivita_view AS
 SELECT DISTINCT i.id,
    i.org_id,
    i.id_rel_ateco_attivita,
    i.id_attivita_masterlist,
    i.mappato,
    i.primario,
    i.entered,
    i.entered_by,
    i.modified,
    i.modified_by,
    i.trashed_date,
    opu.macroarea,
    opu.aggregazione,
    concat_ws('-'::text, cod.description, opu.attivita) AS attivita,
    opu.codice,
    la.categoria,
    la.linea_attivita,
    cod.description AS codice_istat,
    cod.short_description AS descrizione_codice_istat,
    1 AS tipo
   FROM (public.la_imprese_linee_attivita i
     LEFT JOIN public.ml8_linee_attivita_nuove_materializzata opu ON ((opu.id_attivita = i.id_attivita_masterlist))),
    public.la_rel_ateco_attivita rel,
    public.la_linee_attivita la,
    public.lookup_codistat cod
  WHERE ((i.trashed_date IS NULL) AND (i.id_rel_ateco_attivita = rel.id) AND (rel.id_linee_attivita = la.id) AND (rel.id_lookup_codistat = cod.code) AND (i.trashed_date IS NULL))
UNION
 SELECT DISTINCT r.id_linea AS id,
    r.riferimento_id AS org_id,
    '-1'::integer AS id_rel_ateco_attivita,
    r.id_attivita AS id_attivita_masterlist,
        CASE
            WHEN ((r.tipologia_operatore <> 1) AND (r.tipologia_operatore <> 2) AND ((r.attivita IS NULL) OR (length(btrim(r.attivita)) <= 3) OR (r.aggregazione IS NULL) OR (length(btrim(r.aggregazione)) <= 3) OR (r.macroarea IS NULL) OR (length(btrim(r.macroarea)) <= 3))) THEN false
            ELSE true
        END AS mappato,
    false AS primario,
    NULL::timestamp with time zone AS entered,
    '-1'::integer AS entered_by,
    NULL::timestamp with time zone AS modified,
    '-1'::integer AS modified_by,
    NULL::timestamp with time zone AS trashed_date,
    r.macroarea,
    r.aggregazione,
    r.attivita,
    concat_ws('-'::text, r.codice_macroarea, r.codice_aggregazione, r.codice_attivita) AS codice,
    NULL::text AS categoria,
    NULL::text AS linea_attivita,
    NULL::text AS codice_istat,
    NULL::text AS descrizione_codice_istat,
    r.tipologia_operatore AS tipo
   FROM public.ricerche_anagrafiche_old_materializzata r
  WHERE ((r.tipologia_operatore <> 1) AND (r.riferimento_id_nome_tab = 'organization'::text));


ALTER TABLE public.org_linee_attivita_view OWNER TO postgres;

--
-- TOC entry 649 (class 1259 OID 18614)
-- Name: organization; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.organization (
    org_id integer NOT NULL,
    name character varying(300) NOT NULL,
    account_number character varying(50),
    account_group integer,
    url text,
    revenue double precision,
    employees integer,
    notes text,
    ticker_symbol character varying(10),
    taxid character(80),
    lead character varying(40),
    sales_rep integer DEFAULT 0 NOT NULL,
    miner_only boolean DEFAULT false NOT NULL,
    defaultlocale integer,
    fiscalmonth integer,
    entered timestamp(3) without time zone DEFAULT now() NOT NULL,
    enteredby integer NOT NULL,
    modified timestamp(3) without time zone DEFAULT now(),
    modifiedby integer NOT NULL,
    enabled boolean DEFAULT true,
    industry_temp_code smallint,
    owner integer,
    duplicate_id integer DEFAULT '-1'::integer,
    custom1 integer DEFAULT '-1'::integer,
    custom2 integer DEFAULT '-1'::integer,
    contract_end timestamp(3) without time zone,
    alertdate timestamp(3) without time zone,
    alert character varying(300),
    custom_data text,
    namesalutation character varying(80),
    namelast character varying(80),
    namefirst character varying(80),
    namemiddle character varying(80),
    namesuffix character varying(80),
    import_id integer,
    status_id integer,
    alertdate_timezone character varying(255),
    contract_end_timezone character varying(255),
    trashed_date timestamp(3) without time zone,
    source integer,
    rating integer,
    potential double precision,
    segment_id integer,
    sub_segment_id integer,
    direct_bill boolean DEFAULT false,
    account_size integer,
    site_id integer,
    duns_type character varying(300),
    duns_number character varying(300),
    business_name_two character varying(300),
    sic_code integer,
    year_started integer,
    sic_description character varying(300),
    stage_id integer,
    partita_iva character(22),
    codice_fiscale character(16),
    abi character varying(300),
    cab character varying(300),
    cin text,
    banca character varying(300),
    conto_corrente character varying(300),
    nome_correntista character varying(80),
    cf_correntista character varying(300),
    date1 timestamp without time zone,
    date2 timestamp without time zone,
    tipologia integer DEFAULT 1,
    specie_allev character varying(15),
    orientamento_prod text,
    tipologia_strutt text,
    numero_capi character varying(10),
    old_id integer,
    date3 date,
    date4 date,
    codice1 character varying(300),
    codice2 character varying(300),
    codice3 character varying(300),
    codice4 character varying(300),
    codice5 character varying(300),
    codice6 character varying(300),
    codice7 character varying(300),
    codice8 character varying(300),
    codice9 character varying(300),
    codice10 character varying(300),
    codice_cont character varying(300),
    tipo_dest character varying(300),
    tipo_stab character varying(300),
    categoria character varying(300),
    impianto integer,
    stato_lab integer,
    numaut character varying(300),
    codice_impianto character varying(300),
    tipo_struttura integer,
    tipo_locale integer,
    data_in_carattere timestamp without time zone,
    data_fine_carattere timestamp without time zone,
    cessazione boolean,
    titolo_rappresentante integer,
    codice_fiscale_rappresentante character varying(16),
    nome_rappresentante character varying(50),
    cognome_rappresentante character varying(50),
    email_rappresentante character varying(100),
    telefono_rappresentante character varying(30),
    prog_stab character varying(300),
    tmp_import_id integer,
    tmp_import_impianto character varying(50),
    tmp_import_site_id character varying(50),
    tmp_import_stato_lab character varying(50),
    fax character varying(20),
    codice_impresa_interno character varying(100),
    data_nascita_rappresentante timestamp(3) without time zone,
    luogo_nascita_rappresentante character varying(40),
    riti_religiosi character varying(5),
    imballata integer,
    tipo_aut character varying(1000),
    cessato integer,
    codice_impresa_generato_da integer,
    cambiato_in_osa_da integer,
    inserisci_continua boolean,
    tipo_locale3 integer,
    tipo_locale2 integer,
    follow_up text,
    specie_allevamento integer,
    acqua_classificata integer,
    voltura boolean DEFAULT false,
    tipo_soa text,
    datapresentazione timestamp without time zone,
    categoria_rischio integer,
    stato_impresa text,
    data_attribuzione_codice timestamp without time zone,
    data_passaggio_impresa timestamp without time zone,
    nato_come_dia boolean,
    progressivo_stabilimento integer,
    fuori_regione boolean,
    categoria_precedente integer,
    progressivo_stabilimenti integer,
    prossimo_controllo timestamp without time zone,
    codice_allevamento integer,
    data_res timestamp without time zone,
    flag_riproduzione text,
    capi_riproduttori integer,
    num_capre integer,
    num_pecore integer,
    tipologia_acque integer,
    classificazione integer,
    id_farmacia integer,
    num_ric_dettaglio text,
    num_ric_ingrosso text,
    data_cambio_stato timestamp without time zone,
    data_ric_ingrosso timestamp without time zone,
    data_verifica_annua timestamp without time zone,
    data_ric_dettaglio timestamp without time zone,
    stato text,
    pregresso boolean,
    note1 text,
    titolare text,
    ip_entered text,
    ip_modified text,
    cod_azienda text,
    id_allevamento text,
    cf_proprietario text,
    cf_detentore text,
    data_inizio timestamp without time zone,
    data_fine timestamp without time zone,
    data_inizio_resp timestamp without time zone,
    tipo_allevamento text,
    tipo_delegato text,
    num_capi_sei_mesi integer,
    num_capi integer,
    city_legale_rapp text,
    address_legale_rapp text,
    prov_legale_rapp text,
    stato_zona integer,
    num_capi_mag_anno integer,
    capacita_allevamento integer,
    flag_suini boolean,
    flag_cinghiali boolean,
    flag_ciclo_riproduzione boolean,
    flag_vendita_riproduttori boolean,
    flag_svezzamento boolean,
    flag_magronaggio boolean,
    flag_finissaggio boolean,
    data_classificazione timestamp without time zone,
    data_classificazione_temp timestamp without time zone,
    classificazione_temp integer,
    ateco_old text,
    data_censimento timestamp without time zone,
    capi_suini_totale integer,
    num_lattonzoli integer,
    num_magroncelli integer,
    num_magrnoni integer,
    num_grassi integer,
    num_scrofe integer,
    num_scrofette integer,
    num_verri integer,
    num_cinghiali integer,
    associazione_professionale text,
    vterinario_aziendale text,
    flag_filiera_agricola boolean,
    gruppi text,
    capi text,
    ciclo_anno text,
    uova_anno text,
    superfice text,
    flag_selezione boolean,
    flag_moltiplicazione boolean,
    flag_prod_uova boolean,
    flag_prod_carne boolean,
    flag_deposizione boolean,
    flag_fase_pollo boolean,
    flag_dest_fine_ciclo boolean,
    flag_dest_macello boolean,
    flag_ovini boolean,
    flag_caprini boolean,
    num_ingrasso integer,
    num_pol_uova_cons integer,
    num_pol_uova_cova integer,
    num_gal_uova_cons integer,
    num_gal_uova_cova integer,
    num_capponi integer,
    num_galletti integer,
    num_riproduzione integer,
    num_ripopolamento integer,
    num_carne integer,
    num_giaggiatori integer,
    num_ornamentali integer,
    num_allievi integer,
    num_gall_ovaiole integer,
    num_ovini integer,
    num_caprini integer,
    num_femmine integer,
    num_maschi integer,
    num_capi_marcati_sing integer,
    num_capi_marcati_coll integer,
    num_capi_sup_sei_mesi integer,
    num_capi_min_sei_mesi integer,
    num_becchi_arieti integer,
    num_becchio_arieti_libro integer,
    num_femmine_adulte integer,
    num_femmine_adulte_libro integer,
    num_rimonte integer,
    num_altro integer,
    num_capi_ovini_totale integer,
    sesso boolean,
    data_nascita timestamp without time zone,
    luogo_nascita character varying,
    documento_identita character varying,
    autorizzazione character varying,
    abusivo boolean DEFAULT false,
    data_chiusura_canile timestamp with time zone,
    centro_sterilizzazione boolean DEFAULT false,
    org_id_c integer,
    asl_old integer,
    tipo_intervento_hd text,
    data_intervento_hd timestamp without time zone,
    operatore_hd text,
    motivo_intervento_hd text,
    codice_ateco text,
    documento text,
    org_id_canina integer,
    tipo_proprietario text,
    stato_utilizzo integer,
    stato_allevamento integer,
    stato_fornitore integer,
    stato_deroga8 integer,
    stato_deroga9 integer,
    data_stato_utilizzo timestamp without time zone,
    data_stato_allevamento timestamp without time zone,
    data_stato_fornitore timestamp without time zone,
    data_stato_deroga8 timestamp without time zone,
    data_stato_deroga9 timestamp without time zone,
    responsabile_animale text,
    medico_veterinario text,
    aut_utilizzo text,
    aut_allevamento text,
    aut_fornitore text,
    aut_deroga8 text,
    aut_deroga9 text,
    tipo_stabulatorio integer,
    specie_animali integer,
    media_animali_ospitabili integer,
    capacita_max integer,
    stato_istruttoria integer,
    note_sviluppo text,
    data_assegnazione_approval_number timestamp without time zone,
    codice_interno text,
    data_chiusura_commerciale timestamp with time zone,
    data_fine_classificazione timestamp without time zone,
    data_esportazione timestamp without time zone,
    data_elaborazione_sigla timestamp without time zone,
    cod_g2s integer,
    data_ricezione_autorizzazione timestamp without time zone,
    domicilio_digitale text,
    flag_vendita boolean,
    codice_tipo_allevamento text,
    cun text,
    flagcee boolean,
    id_bdn integer,
    comune_old text,
    id_nazione_provenienza integer DEFAULT 106,
    no_piva boolean,
    provvedimenti_restrittivi integer,
    id_provvedimento_decreto_classificazione integer,
    molluschi_motivazione_rifiuto integer,
    molluschi_data_rifiuto timestamp without time zone,
    flag_mobile boolean,
    import_opu boolean DEFAULT false,
    id_master_list_suap integer,
    org_id_old integer,
    note_hd text,
    alt_id integer,
    taglia_non_commerciale boolean,
    taglia_non_commerciale_data_modifica timestamp without time zone,
    stato_classificazione integer,
    data_revoca timestamp without time zone,
    data_sospensione timestamp without time zone,
    tipo_veicolo_mobili integer,
    data_autorizzazione timestamp without time zone,
    nome_referente text,
    cognome_referente text,
    cf_referente text,
    note_cessazione_attivita text,
    codice_ufficiale_esistente text,
    data_cessazione_attivita timestamp without time zone,
    riconosciuto boolean,
    numero_decreto_sospensione_revoca text,
    data_provvedimento_sospensione_revoca timestamp without time zone,
    clean text,
    topon text,
    toponimo integer,
    address_legale_rapp_old text,
    civico text,
    miscela boolean
);


ALTER TABLE public.organization OWNER TO postgres;

--
-- TOC entry 650 (class 1259 OID 18634)
-- Name: organization_address; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.organization_address (
    address_id integer NOT NULL,
    org_id integer,
    address_type integer,
    addrline1 character varying(80),
    addrline2 character varying(80),
    addrline3 character varying(80),
    city character varying(80),
    state character varying(80),
    country character varying(80),
    postalcode character varying(12),
    entered timestamp(3) without time zone DEFAULT now() NOT NULL,
    enteredby integer NOT NULL,
    modified timestamp(3) without time zone DEFAULT now() NOT NULL,
    modifiedby integer NOT NULL,
    primary_address boolean DEFAULT false NOT NULL,
    addrline4 character varying(80),
    county character varying(80),
    latitude double precision DEFAULT 0,
    longitude double precision DEFAULT 0,
    tmp_import_id integer,
    bb boolean,
    latitude_old double precision DEFAULT 0,
    longitude_old double precision DEFAULT 0,
    capcorretto text,
    appoggio text,
    comune_old text,
    new_city text,
    new_state text,
    new_addrline1 text,
    new_addrline2 text,
    old_city text,
    old_state text,
    old_addrline1 text,
    old_addrline2 text,
    latitudine_040515 double precision,
    longitudine_040515 double precision,
    notes text,
    latitudine_new double precision,
    longitudine_new double precision,
    flag_aggiunta_in_fase_di_pulitura boolean,
    trasheddate timestamp without time zone,
    codiceistatasl_old text,
    clean text,
    topon text,
    toponimo integer,
    addrline1_old text,
    civico text,
    note_recupero_cap text,
    da_rivedere boolean,
    coordinate_da_riverificare boolean,
    CONSTRAINT check_capna CHECK ((btrim((postalcode)::text) <> '80100'::text))
);


ALTER TABLE public.organization_address OWNER TO postgres;

--
-- TOC entry 651 (class 1259 OID 18647)
-- Name: organization_address_address_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.organization_address_address_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.organization_address_address_id_seq OWNER TO postgres;

--
-- TOC entry 7624 (class 0 OID 0)
-- Dependencies: 651
-- Name: organization_address_address_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.organization_address_address_id_seq OWNED BY public.organization_address.address_id;


--
-- TOC entry 652 (class 1259 OID 18648)
-- Name: organization_org_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.organization_org_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.organization_org_id_seq OWNER TO postgres;

--
-- TOC entry 7625 (class 0 OID 0)
-- Dependencies: 652
-- Name: organization_org_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.organization_org_id_seq OWNED BY public.organization.org_id;


--
-- TOC entry 653 (class 1259 OID 18649)
-- Name: parametri_categorizzazzione_osa; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.parametri_categorizzazzione_osa (
    id integer NOT NULL,
    tipo_operatore integer,
    range_da integer,
    range_a integer,
    categoria_rischio integer,
    intervallo_prossimo_cu_mesi integer,
    codice_norma text,
    tipologia integer,
    desc_tipologia character varying
);


ALTER TABLE public.parametri_categorizzazzione_osa OWNER TO postgres;

--
-- TOC entry 654 (class 1259 OID 18654)
-- Name: permission; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.permission (
    permission_id integer NOT NULL,
    category_id integer NOT NULL,
    permission character varying(80) NOT NULL,
    permission_view boolean DEFAULT false NOT NULL,
    permission_add boolean DEFAULT false NOT NULL,
    permission_edit boolean DEFAULT false NOT NULL,
    permission_delete boolean DEFAULT false NOT NULL,
    description character varying(255) DEFAULT ''::character varying NOT NULL,
    level integer DEFAULT 0 NOT NULL,
    enabled boolean DEFAULT true NOT NULL,
    active boolean DEFAULT true NOT NULL,
    viewpoints boolean DEFAULT false
);


ALTER TABLE public.permission OWNER TO postgres;

--
-- TOC entry 655 (class 1259 OID 18666)
-- Name: permission_category; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.permission_category (
    category_id integer NOT NULL,
    category character varying(80),
    description character varying(255),
    level integer DEFAULT 0 NOT NULL,
    enabled boolean DEFAULT true NOT NULL,
    active boolean DEFAULT true NOT NULL,
    folders boolean DEFAULT false NOT NULL,
    lookups boolean DEFAULT false NOT NULL,
    viewpoints boolean DEFAULT false,
    categories boolean DEFAULT false NOT NULL,
    scheduled_events boolean DEFAULT false NOT NULL,
    object_events boolean DEFAULT false NOT NULL,
    reports boolean DEFAULT false NOT NULL,
    webdav boolean DEFAULT false NOT NULL,
    logos boolean DEFAULT false NOT NULL,
    constant integer NOT NULL,
    action_plans boolean DEFAULT false NOT NULL,
    custom_list_views boolean DEFAULT false NOT NULL
);


ALTER TABLE public.permission_category OWNER TO postgres;

--
-- TOC entry 656 (class 1259 OID 18683)
-- Name: permission_category_category_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.permission_category_category_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.permission_category_category_id_seq OWNER TO postgres;

--
-- TOC entry 7626 (class 0 OID 0)
-- Dependencies: 656
-- Name: permission_category_category_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.permission_category_category_id_seq OWNED BY public.permission_category.category_id;


--
-- TOC entry 657 (class 1259 OID 18684)
-- Name: permission_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.permission_permission_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.permission_permission_id_seq OWNER TO postgres;

--
-- TOC entry 7627 (class 0 OID 0)
-- Dependencies: 657
-- Name: permission_permission_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.permission_permission_id_seq OWNED BY public.permission.permission_id;


--
-- TOC entry 658 (class 1259 OID 18685)
-- Name: post_it; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.post_it (
    id integer NOT NULL,
    entered timestamp without time zone,
    messaggio text,
    id_utente integer,
    trashed_date timestamp without time zone,
    tipo integer DEFAULT 1
);


ALTER TABLE public.post_it OWNER TO postgres;

--
-- TOC entry 659 (class 1259 OID 18691)
-- Name: post_it_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.post_it_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.post_it_id_seq OWNER TO postgres;

--
-- TOC entry 7628 (class 0 OID 0)
-- Dependencies: 659
-- Name: post_it_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.post_it_id_seq OWNED BY public.post_it.id;


--
-- TOC entry 660 (class 1259 OID 18692)
-- Name: programmi_campionamento_categorie_merceologiche; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.programmi_campionamento_categorie_merceologiche (
    macrocategoria text,
    programma_campionamento text,
    categoria_merceologica text,
    id integer NOT NULL
);


ALTER TABLE public.programmi_campionamento_categorie_merceologiche OWNER TO postgres;

--
-- TOC entry 661 (class 1259 OID 18697)
-- Name: programmi_campionamento_categorie_merceologiche_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.programmi_campionamento_categorie_merceologiche_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.programmi_campionamento_categorie_merceologiche_id_seq OWNER TO postgres;

--
-- TOC entry 7629 (class 0 OID 0)
-- Dependencies: 661
-- Name: programmi_campionamento_categorie_merceologiche_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.programmi_campionamento_categorie_merceologiche_id_seq OWNED BY public.programmi_campionamento_categorie_merceologiche.id;


--
-- TOC entry 662 (class 1259 OID 18698)
-- Name: quesiti_diagnostici_sigla; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.quesiti_diagnostici_sigla AS
 SELECT lookup_piano_monitoraggio_.code,
    lookup_piano_monitoraggio_.description,
    lookup_piano_monitoraggio_.enabled,
    lookup_piano_monitoraggio_.codice_esame,
    lookup_piano_monitoraggio_.level,
    lookup_piano_monitoraggio_.default_item,
    'lookup_piano_monitoraggio'::text AS short_description
   FROM public.lookup_piano_monitoraggio lookup_piano_monitoraggio_
  WHERE (((lookup_piano_monitoraggio_.codice_esame IS NOT NULL) OR (lookup_piano_monitoraggio_.codice_esame <> ''::text)) AND lookup_piano_monitoraggio_.enabled)
UNION
 SELECT lookup_tipo_ispezione_.code,
    lookup_tipo_ispezione_.description,
    lookup_tipo_ispezione_.enabled,
    lookup_tipo_ispezione_.codice_esame,
    lookup_tipo_ispezione_.level,
    lookup_tipo_ispezione_.default_item,
    'lookup_tipo_ispezione'::text AS short_description
   FROM public.lookup_tipo_ispezione lookup_tipo_ispezione_
  WHERE (((lookup_tipo_ispezione_.codice_esame IS NOT NULL) OR (lookup_tipo_ispezione_.codice_esame <> ''::text)) AND lookup_tipo_ispezione_.enabled);


ALTER TABLE public.quesiti_diagnostici_sigla OWNER TO postgres;

--
-- TOC entry 663 (class 1259 OID 18703)
-- Name: rel_checklist_sorv_ml; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.rel_checklist_sorv_ml (
    id integer NOT NULL,
    id_linea integer,
    id_checklist integer,
    enabled boolean DEFAULT true,
    note_hd text
);


ALTER TABLE public.rel_checklist_sorv_ml OWNER TO postgres;

--
-- TOC entry 664 (class 1259 OID 18709)
-- Name: rel_checklist_sorv_ml_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.rel_checklist_sorv_ml_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.rel_checklist_sorv_ml_id_seq OWNER TO postgres;

--
-- TOC entry 7630 (class 0 OID 0)
-- Dependencies: 664
-- Name: rel_checklist_sorv_ml_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.rel_checklist_sorv_ml_id_seq OWNED BY public.rel_checklist_sorv_ml.id;


--
-- TOC entry 665 (class 1259 OID 18710)
-- Name: rel_gruppo_ruoli; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.rel_gruppo_ruoli (
    code integer NOT NULL,
    id_ruolo integer,
    id_gruppo integer
);


ALTER TABLE public.rel_gruppo_ruoli OWNER TO postgres;

--
-- TOC entry 666 (class 1259 OID 18713)
-- Name: rel_gruppo_ruoli_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.rel_gruppo_ruoli_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.rel_gruppo_ruoli_code_seq OWNER TO postgres;

--
-- TOC entry 7631 (class 0 OID 0)
-- Dependencies: 666
-- Name: rel_gruppo_ruoli_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.rel_gruppo_ruoli_code_seq OWNED BY public.rel_gruppo_ruoli.code;


--
-- TOC entry 667 (class 1259 OID 18714)
-- Name: rel_motivi_eventi_cu; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.rel_motivi_eventi_cu (
    code integer NOT NULL,
    id_indicatore integer,
    id_evento_cu integer,
    trashed_date timestamp without time zone,
    entered timestamp without time zone,
    enteredby integer,
    modified timestamp without time zone,
    modifiedby integer,
    note_hd text,
    cod_raggrup_ind integer
);


ALTER TABLE public.rel_motivi_eventi_cu OWNER TO postgres;

--
-- TOC entry 668 (class 1259 OID 18719)
-- Name: ricerca_anagrafiche; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.ricerca_anagrafiche AS
 SELECT DISTINCT o.id_stabilimento AS riferimento_id,
    'stabId'::text AS riferimento_id_nome,
    'id_stabilimento'::text AS riferimento_id_nome_col,
    'opu_stabilimento'::text AS riferimento_id_nome_tab,
    o.id_indirizzo_operatore AS id_indirizzo_impresa,
    o.id_indirizzo AS id_sede_operativa,
    '-1'::integer AS sede_mobile_o_altro,
    'opu_indirizzo'::text AS riferimento_nome_tab_indirizzi,
    o.id_opu_operatore AS id_impresa,
    'opu_operatore'::text AS riferimento_nome_tab_impresa,
    o.id_soggetto_fisico,
    'opu_soggetto_fisico'::text AS riferimento_nome_tab_soggetto_fisico,
    o.id_linea_attivita_stab AS id_attivita,
    o.pregresso_o_import,
    o.riferimento_org_id,
    o.stab_entered AS data_inserimento,
    o.ragione_sociale,
    o.id_asl_stab AS asl_rif,
    o.stab_asl AS asl,
    o.codice_fiscale_impresa AS codice_fiscale,
    o.cf_rapp_sede_legale AS codice_fiscale_rappresentante,
    o.partita_iva,
    o.categoria_rischio,
    o.data_prossimo_controllo AS prossimo_controllo,
        CASE
            WHEN (o.linea_codice_ufficiale_esistente ~~* 'U150%'::text) THEN o.linea_codice_nazionale
            ELSE COALESCE(o.linea_codice_nazionale, o.linea_codice_ufficiale_esistente)
        END AS num_riconoscimento,
    o.numero_registrazione AS n_reg,
        CASE
            WHEN (norme.codice_norma = '852-04'::text) THEN COALESCE(NULLIF(o.linea_codice_nazionale, ''::text), NULLIF(o.linea_numero_registrazione, ''::text), NULLIF(o.linea_codice_ufficiale_esistente, ''::text))
            ELSE COALESCE(NULLIF(o.linea_codice_nazionale, ''::text), NULLIF(o.linea_codice_ufficiale_esistente, ''::text), NULLIF(o.linea_numero_registrazione, ''::text))
        END AS n_linea,
    concat_ws(' '::text, o.nome_rapp_sede_legale, o.cognome_rapp_sede_legale) AS nominativo_rappresentante,
    o.stab_descrizione_attivita AS tipo_attivita_descrizione,
    o.stab_id_attivita AS tipo_attivita,
    o.data_inizio_attivita,
    o.data_fine_attivita,
    o.linea_stato_text AS stato,
    o.linea_stato AS id_stato,
        CASE
            WHEN (o.stab_id_attivita = 1) THEN o.comune_stab
            WHEN ((o.stab_id_attivita = 2) AND (o.impresa_id_tipo_impresa = 1)) THEN o.comune_residenza
            WHEN ((o.stab_id_attivita = 2) AND (o.impresa_id_tipo_impresa <> 1)) THEN o.comune_sede_legale
            ELSE o.comune_stab
        END AS comune,
    o.prov_stab AS provincia_stab,
    concat(o.indirizzo_stab, ' ', o.civico_sede_stab) AS indirizzo,
    o.cap_stab,
    o.lat_stab AS latitudine_stab,
    o.long_stab AS longitudine_stab,
    o.comune_sede_legale AS comune_leg,
    o.prov_sede_legale AS provincia_leg,
    o.indirizzo_sede_legale AS indirizzo_leg,
    o.cap_sede_legale AS cap_leg,
    NULL::double precision AS latitudine_leg,
    NULL::double precision AS longitudine_leg,
    o.macroarea,
    o.aggregazione,
    o.attivita,
    o.path_attivita_completo,
        CASE
            WHEN ((o.flag_nuova_gestione IS NULL) OR (o.flag_nuova_gestione = false)) THEN 'LINEA NON AGGIORNATA SECONDO MASTER LIST.'::text
            ELSE NULL::text
        END AS gestione_masterlist,
    norme.description AS norma,
    o.id_norma,
    999 AS tipologia_operatore,
    1 AS tipo_ricerca_anagrafica,
    'gray'::text AS color,
    o.linea_codice_ufficiale_esistente AS n_reg_old,
    o.id_tipo_linea_produttiva AS id_tipo_linea_reg_ric,
    o.id_linea_attivita AS id_linea,
    o.codice_macroarea,
    o.codice_aggregazione,
    o.codice_attivita_only AS codice_attivita,
    NULL::boolean AS miscela
   FROM (public.opu_operatori_denormalizzati_view o
     LEFT JOIN public.opu_lookup_norme_master_list norme ON ((o.id_norma = norme.code)));


ALTER TABLE public.ricerca_anagrafiche OWNER TO postgres;

--
-- TOC entry 669 (class 1259 OID 18724)
-- Name: role_ext_role_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.role_ext_role_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.role_ext_role_id_seq OWNER TO postgres;

--
-- TOC entry 7632 (class 0 OID 0)
-- Dependencies: 669
-- Name: role_ext_role_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.role_ext_role_id_seq OWNED BY public.role_ext.role_id;


--
-- TOC entry 670 (class 1259 OID 18725)
-- Name: role_permission; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.role_permission (
    id integer NOT NULL,
    role_id integer NOT NULL,
    permission_id integer NOT NULL,
    role_view boolean DEFAULT false NOT NULL,
    role_add boolean DEFAULT false NOT NULL,
    role_edit boolean DEFAULT false NOT NULL,
    role_delete boolean DEFAULT false NOT NULL,
    note_hd text
);


ALTER TABLE public.role_permission OWNER TO postgres;

--
-- TOC entry 671 (class 1259 OID 18734)
-- Name: role_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.role_permission_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.role_permission_id_seq OWNER TO postgres;

--
-- TOC entry 7633 (class 0 OID 0)
-- Dependencies: 671
-- Name: role_permission_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.role_permission_id_seq OWNED BY public.role_permission.id;


--
-- TOC entry 672 (class 1259 OID 18735)
-- Name: role_role_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.role_role_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.role_role_id_seq OWNER TO postgres;

--
-- TOC entry 7634 (class 0 OID 0)
-- Dependencies: 672
-- Name: role_role_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.role_role_id_seq OWNED BY public.role.role_id;


--
-- TOC entry 673 (class 1259 OID 18736)
-- Name: salvataggio_azioni_adottate; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.salvataggio_azioni_adottate (
    id_controllo_ufficiale integer,
    id_azione_adottata integer
);


ALTER TABLE public.salvataggio_azioni_adottate OWNER TO postgres;

--
-- TOC entry 674 (class 1259 OID 18739)
-- Name: salvataggio_nc_note; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.salvataggio_nc_note (
    idticket integer,
    note text,
    tipologia integer,
    id_non_conformita integer,
    id integer NOT NULL,
    id_riferimento_ext integer,
    id_linea_nc integer,
    note_hd text,
    id_operatore_mercato integer,
    id_non_conformita_benessere_macellazione integer,
    id_non_conformita_benessere_trasporto integer
);


ALTER TABLE public.salvataggio_nc_note OWNER TO postgres;

--
-- TOC entry 675 (class 1259 OID 18744)
-- Name: salvataggio_nc_note_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.salvataggio_nc_note_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.salvataggio_nc_note_id_seq OWNER TO postgres;

--
-- TOC entry 7635 (class 0 OID 0)
-- Dependencies: 675
-- Name: salvataggio_nc_note_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.salvataggio_nc_note_id_seq OWNED BY public.salvataggio_nc_note.id;


--
-- TOC entry 676 (class 1259 OID 18745)
-- Name: salvataggio_specie_trasportata; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.salvataggio_specie_trasportata (
    id_controllo_ufficiale integer,
    id_specie_trasportata integer
);


ALTER TABLE public.salvataggio_specie_trasportata OWNER TO postgres;

--
-- TOC entry 677 (class 1259 OID 18748)
-- Name: sanzioni_allegati; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.sanzioni_allegati (
    id integer NOT NULL,
    id_sanzione integer,
    id_utente integer,
    tipo_allegato text,
    header_allegato text,
    entered timestamp without time zone DEFAULT now(),
    trashed_date timestamp without time zone,
    note_hd text
);


ALTER TABLE public.sanzioni_allegati OWNER TO postgres;

--
-- TOC entry 678 (class 1259 OID 18754)
-- Name: scheda_operatore_metadati; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.scheda_operatore_metadati (
    id integer NOT NULL,
    tipo_operatore integer NOT NULL,
    sql_val text,
    label text,
    enabled boolean DEFAULT true,
    attributo text,
    sql_campo text,
    sql_origine text,
    sql_condizione text,
    ordine text DEFAULT '0'::text,
    ordine_int integer DEFAULT 0,
    destinazione text DEFAULT ''::text
);


ALTER TABLE public.scheda_operatore_metadati OWNER TO postgres;

--
-- TOC entry 679 (class 1259 OID 18763)
-- Name: scheda_operatore_metadati_id_seq1; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.scheda_operatore_metadati_id_seq1
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.scheda_operatore_metadati_id_seq1 OWNER TO postgres;

--
-- TOC entry 7636 (class 0 OID 0)
-- Dependencies: 679
-- Name: scheda_operatore_metadati_id_seq1; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.scheda_operatore_metadati_id_seq1 OWNED BY public.scheda_operatore_metadati.id;


--
-- TOC entry 680 (class 1259 OID 18764)
-- Name: schema_anagrafica; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.schema_anagrafica (
    id integer NOT NULL,
    codice_univoco_ml text NOT NULL,
    id_gruppo_template integer NOT NULL,
    id_campo_configuratore integer NOT NULL,
    campo_esteso boolean DEFAULT false,
    enabled boolean DEFAULT true,
    data_scadenza timestamp without time zone
);


ALTER TABLE public.schema_anagrafica OWNER TO postgres;

--
-- TOC entry 681 (class 1259 OID 18771)
-- Name: schema_anagrafica_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.schema_anagrafica_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.schema_anagrafica_id_seq OWNER TO postgres;

--
-- TOC entry 7637 (class 0 OID 0)
-- Dependencies: 681
-- Name: schema_anagrafica_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.schema_anagrafica_id_seq OWNED BY public.schema_anagrafica.id;


--
-- TOC entry 682 (class 1259 OID 18772)
-- Name: sintesis_automezzi; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.sintesis_automezzi (
    id integer NOT NULL,
    id_sintesis_rel_stab_lp integer,
    entered_by integer,
    entered timestamp without time zone DEFAULT now(),
    modified_by integer,
    modified timestamp without time zone,
    automezzo_marca text,
    automezzo_tipo text,
    automezzo_targa text,
    ricovero_id_provincia integer,
    ricovero_id_comune integer,
    ricovero_id_toponimo integer,
    ricovero_via text,
    ricovero_civico text,
    detenzione_id_provincia integer,
    detenzione_id_comune integer,
    detenzione_id_toponimo integer,
    detenzione_via text,
    detenzione_civico text,
    numero_identificativo text,
    data_dismissione timestamp without time zone,
    trashed_date timestamp without time zone,
    automezzo_cisterna_trasporto text,
    automezzo_veicolo_freschi text,
    automezzo_veicolo_freschi_cat1 text,
    automezzo_veicolo_freschi_cat2 text,
    automezzo_veicolo_freschi_cat3 text,
    automezzo_veicolo_derivati text,
    automezzo_veicolo_derivati_cat1 text,
    automezzo_veicolo_derivati_cat2 text,
    automezzo_veicolo_derivati_cat3 text,
    automezzo_contenitore text,
    automezzo_contenitore_dimensioni text,
    trasporto_temperatura_controllata text,
    trasporto_isotermico text,
    trasporto_temperatura_ambiente text
);


ALTER TABLE public.sintesis_automezzi OWNER TO postgres;

--
-- TOC entry 683 (class 1259 OID 18778)
-- Name: sintesis_automezzi_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.sintesis_automezzi_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sintesis_automezzi_id_seq OWNER TO postgres;

--
-- TOC entry 7638 (class 0 OID 0)
-- Dependencies: 683
-- Name: sintesis_automezzi_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.sintesis_automezzi_id_seq OWNED BY public.sintesis_automezzi.id;


--
-- TOC entry 684 (class 1259 OID 18779)
-- Name: sintesis_indirizzo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.sintesis_indirizzo (
    id integer NOT NULL,
    via character varying(300),
    cap character(20),
    provincia character(500),
    latitudine double precision,
    longitudine double precision,
    comune integer DEFAULT '-1'::integer,
    riferimento_org_id integer,
    riferimento_address_id integer,
    address_type integer,
    comune_testo text,
    tiponimo integer,
    toponimo integer,
    civico text,
    clean text,
    topon text,
    via_old text,
    note_hd text,
    id_soggetto_fisico_update_indirizzo integer,
    nazione integer,
    note_recupero_cap text,
    da_rivedere boolean
);


ALTER TABLE public.sintesis_indirizzo OWNER TO postgres;

--
-- TOC entry 685 (class 1259 OID 18785)
-- Name: sintesis_indirizzo_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.sintesis_indirizzo_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sintesis_indirizzo_id_seq OWNER TO postgres;

--
-- TOC entry 7639 (class 0 OID 0)
-- Dependencies: 685
-- Name: sintesis_indirizzo_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.sintesis_indirizzo_id_seq OWNED BY public.sintesis_indirizzo.id;


--
-- TOC entry 686 (class 1259 OID 18786)
-- Name: sintesis_relazione_stabilimento_linee_produttive; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.sintesis_relazione_stabilimento_linee_produttive (
    id integer NOT NULL,
    id_linea_produttiva integer,
    id_stabilimento integer,
    stato integer DEFAULT 1,
    data_inizio timestamp without time zone,
    data_fine timestamp without time zone,
    autorizzazione text,
    note character varying,
    telefono1 text,
    telefono2 text,
    mail1 text,
    mail2 text,
    fax text,
    tipo_attivita_produttiva integer,
    primario boolean,
    enabled boolean DEFAULT true,
    modified timestamp without time zone,
    modifiedby integer,
    descrizione_linea_attivita text,
    numero_registrazione text,
    id_linea_nuova_aziende_agricole integer,
    codice_ufficiale_esistente text,
    data_generazione_numero timestamp without time zone,
    id_rel_stab_lp_old integer,
    categoria_rischio integer,
    data_prossimo_controllo time with time zone,
    id_vecchia_linea integer,
    num_protocollo text,
    id_tipo_vecchio_operatore integer,
    codice_nazionale text,
    data_generazione_codice_nazionale timestamp without time zone,
    id_nuova_linea_azienda_agricole integer,
    entered timestamp without time zone,
    enteredby integer,
    data_sospensione_volontaria timestamp without time zone,
    pregresso_o_import boolean,
    id_linea_fittizia_pre_aggiornamento integer,
    flag_spostamento boolean DEFAULT false,
    id_scia_sospensione integer,
    scia_sospensione boolean,
    id_suap_rel_stab_lp integer,
    note_internal_use_hd_only text,
    tipo_autorizzazione text,
    imballaggio text,
    paesi_abilitati_export text,
    remark text,
    species text,
    sintesis_attivita text,
    sintesis_descrizione_sezione text,
    trashed_date timestamp without time zone,
    data_ultimo_aggiornamento_sintesis timestamp without time zone,
    id_linea_produttiva_old integer,
    path_completo_linea_produttiva_old text,
    id_istanza_old integer
);


ALTER TABLE public.sintesis_relazione_stabilimento_linee_produttive OWNER TO postgres;

--
-- TOC entry 7640 (class 0 OID 0)
-- Dependencies: 686
-- Name: COLUMN sintesis_relazione_stabilimento_linee_produttive.id_istanza_old; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.sintesis_relazione_stabilimento_linee_produttive.id_istanza_old IS 'Id di opu_relazione_stabilimento_linee_produttive in fase di import';


--
-- TOC entry 687 (class 1259 OID 18794)
-- Name: sintesis_stabilimento; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.sintesis_stabilimento (
    id integer NOT NULL,
    entered timestamp without time zone,
    modified timestamp without time zone,
    entered_by integer,
    id_operatore integer,
    modified_by integer,
    id_asl integer,
    id_soggetto_fisico integer,
    id_indirizzo integer,
    flag_fuori_regione boolean DEFAULT false,
    flag_modifica_residenza_fuori_asl_in_corso boolean,
    id_tipologia_sede integer,
    riferimento_org_id integer,
    flag_dia boolean,
    data_fine_dia timestamp without time zone,
    id_operatore_old_prima_del_raggruppamento integer,
    categoria_rischio integer,
    data_prossimo_controllo timestamp without time zone,
    cun text,
    id_sinvsa integer,
    data_import timestamp without time zone,
    esito_import text,
    descrizione_errore text,
    stato integer,
    numero_registrazione text,
    linea_attivita_aziende_agricole_old text,
    data_generazione_numero timestamp without time zone,
    codice_interno text,
    denominazione text,
    trashed_date timestamp without time zone,
    notes_hd text,
    tipo_attivita integer,
    tipo_carattere integer,
    data_inizio_attivita timestamp without time zone,
    data_fine_attivita timestamp without time zone,
    num_protocollo text,
    linee_pregresse boolean DEFAULT false,
    note text,
    numero_registrazione_precedente text,
    codice_ufficiale_esistente text,
    import_opu boolean,
    importato boolean,
    codiceinternoreg text,
    alt_id integer,
    cessazione_automatica boolean,
    trashed_by integer,
    categoria_precedente integer,
    approval_number text,
    data_ultimo_aggiornamento_sintesis timestamp without time zone,
    riferimento_id_stabilimento integer,
    livello_rischio integer
);


ALTER TABLE public.sintesis_stabilimento OWNER TO postgres;

--
-- TOC entry 688 (class 1259 OID 18801)
-- Name: sintesis_linee_attivita_stabilimenti_view; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.sintesis_linee_attivita_stabilimenti_view AS
 SELECT stab.alt_id,
    v1.id_linea_produttiva AS id_rel_ateco_attivita,
    v1.primario,
    ml8.aggregazione AS categoria,
    ml8.attivita AS linea_attivita,
    ml8.codice,
    ''::text AS codice_istat,
    v1.id,
    v1.enabled,
    ml8.macroarea
   FROM ((public.sintesis_relazione_stabilimento_linee_produttive v1
     JOIN public.ml8_linee_attivita_nuove_materializzata ml8 ON ((v1.id_linea_produttiva = ml8.id_nuova_linea_attivita)))
     LEFT JOIN public.sintesis_stabilimento stab ON ((stab.id = v1.id_stabilimento)));


ALTER TABLE public.sintesis_linee_attivita_stabilimenti_view OWNER TO postgres;

--
-- TOC entry 689 (class 1259 OID 18806)
-- Name: sintesis_operatore; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.sintesis_operatore (
    id integer NOT NULL,
    codice_fiscale_impresa character varying,
    note text,
    partita_iva character varying(255),
    ragione_sociale character varying(300),
    enteredby integer,
    modifiedby integer,
    entered timestamp without time zone,
    modified timestamp without time zone,
    trashed_date timestamp without time zone,
    riferimento_org_id integer,
    domicilio_digitale text,
    flag_ric_ce boolean,
    num_ric_ce text,
    tipo_impresa integer,
    tipo_societa integer,
    codice_interno_impresa text,
    note_internal_use_only_hd text,
    id_indirizzo integer,
    azienda_agricola boolean,
    id_operatore_valido_caso_doppioni integer,
    id_tipologia_organization integer,
    flag_clean boolean DEFAULT false,
    riferimento_ag integer,
    id_indirizzo_prima_della_pulizia integer,
    id_operatore_precedente integer,
    data_ultimo_aggiornamento_sintesis timestamp without time zone
);


ALTER TABLE public.sintesis_operatore OWNER TO postgres;

--
-- TOC entry 690 (class 1259 OID 18812)
-- Name: sintesis_operatore_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.sintesis_operatore_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sintesis_operatore_id_seq OWNER TO postgres;

--
-- TOC entry 7641 (class 0 OID 0)
-- Dependencies: 690
-- Name: sintesis_operatore_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.sintesis_operatore_id_seq OWNED BY public.sintesis_operatore.id;


--
-- TOC entry 691 (class 1259 OID 18813)
-- Name: sintesis_operatori_mercato; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.sintesis_operatori_mercato (
    id integer NOT NULL,
    id_stabilimento_sintesis_mercato integer,
    id_relazione_sintesis_mercato integer,
    riferimento_id_operatore integer,
    riferimento_id_nome_tab_operatore text,
    num_box integer,
    identificativo text,
    entered timestamp without time zone DEFAULT now(),
    enteredby integer,
    trashed_date timestamp without time zone,
    trashedby integer,
    data_cessazione timestamp without time zone,
    cessatoby integer,
    note_hd text
);


ALTER TABLE public.sintesis_operatori_mercato OWNER TO postgres;

--
-- TOC entry 692 (class 1259 OID 18819)
-- Name: sintesis_operatori_mercato_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.sintesis_operatori_mercato_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sintesis_operatori_mercato_id_seq OWNER TO postgres;

--
-- TOC entry 7642 (class 0 OID 0)
-- Dependencies: 692
-- Name: sintesis_operatori_mercato_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.sintesis_operatori_mercato_id_seq OWNED BY public.sintesis_operatori_mercato.id;


--
-- TOC entry 693 (class 1259 OID 18820)
-- Name: sintesis_prodotti; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.sintesis_prodotti (
    id integer NOT NULL,
    id_linea integer,
    id_prodotto integer,
    valore_prodotto text,
    checked_date timestamp without time zone DEFAULT now(),
    unchecked_date timestamp without time zone,
    origine text
);


ALTER TABLE public.sintesis_prodotti OWNER TO postgres;

--
-- TOC entry 694 (class 1259 OID 18826)
-- Name: sintesis_prodotti_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.sintesis_prodotti_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sintesis_prodotti_id_seq OWNER TO postgres;

--
-- TOC entry 7643 (class 0 OID 0)
-- Dependencies: 694
-- Name: sintesis_prodotti_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.sintesis_prodotti_id_seq OWNED BY public.sintesis_prodotti.id;


--
-- TOC entry 695 (class 1259 OID 18827)
-- Name: sintesis_rel_operatore_soggetto_fisico; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.sintesis_rel_operatore_soggetto_fisico (
    id_operatore integer NOT NULL,
    id_soggetto_fisico integer NOT NULL,
    tipo_soggetto_fisico integer NOT NULL,
    data_fine timestamp without time zone,
    id integer NOT NULL,
    data_inizio timestamp without time zone,
    stato_ruolo integer,
    enabled boolean DEFAULT true,
    id_soggett_fisico_old integer,
    notes text
);


ALTER TABLE public.sintesis_rel_operatore_soggetto_fisico OWNER TO postgres;

--
-- TOC entry 696 (class 1259 OID 18833)
-- Name: sintesis_rel_operatore_soggetto_fisico_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.sintesis_rel_operatore_soggetto_fisico_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sintesis_rel_operatore_soggetto_fisico_id_seq OWNER TO postgres;

--
-- TOC entry 7644 (class 0 OID 0)
-- Dependencies: 696
-- Name: sintesis_rel_operatore_soggetto_fisico_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.sintesis_rel_operatore_soggetto_fisico_id_seq OWNED BY public.sintesis_rel_operatore_soggetto_fisico.id;


--
-- TOC entry 697 (class 1259 OID 18834)
-- Name: sintesis_relazione_stabilimento_linee_produttive_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.sintesis_relazione_stabilimento_linee_produttive_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sintesis_relazione_stabilimento_linee_produttive_id_seq OWNER TO postgres;

--
-- TOC entry 7645 (class 0 OID 0)
-- Dependencies: 697
-- Name: sintesis_relazione_stabilimento_linee_produttive_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.sintesis_relazione_stabilimento_linee_produttive_id_seq OWNED BY public.sintesis_relazione_stabilimento_linee_produttive.id;


--
-- TOC entry 698 (class 1259 OID 18835)
-- Name: sintesis_soggetto_fisico; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.sintesis_soggetto_fisico (
    id integer NOT NULL,
    titolo character(20),
    cognome text,
    nome text,
    comune_nascita text,
    codice_fiscale character varying,
    enteredby integer,
    modifiedby integer,
    ipenteredby character(100),
    ipmodifiedby character(100),
    sesso character(1),
    telefono character(50),
    fax character(50),
    email character varying(100),
    telefono1 character(50),
    data_nascita timestamp without time zone,
    documento_identita text,
    indirizzo_id integer,
    provenienza_estera boolean DEFAULT false,
    riferimento_org_id integer,
    provincia_nascita text,
    id_bdn integer,
    id_operatore_temp integer,
    trashed_date timestamp without time zone,
    note_hd text,
    id_soggetto_precedente integer,
    entered timestamp without time zone,
    modified timestamp without time zone,
    nazione_nascita integer DEFAULT 106
);


ALTER TABLE public.sintesis_soggetto_fisico OWNER TO postgres;

--
-- TOC entry 699 (class 1259 OID 18842)
-- Name: sintesis_soggetto_fisico_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.sintesis_soggetto_fisico_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sintesis_soggetto_fisico_id_seq OWNER TO postgres;

--
-- TOC entry 7646 (class 0 OID 0)
-- Dependencies: 699
-- Name: sintesis_soggetto_fisico_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.sintesis_soggetto_fisico_id_seq OWNED BY public.sintesis_soggetto_fisico.id;


--
-- TOC entry 700 (class 1259 OID 18843)
-- Name: sintesis_stabilimenti_import; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.sintesis_stabilimenti_import (
    id integer NOT NULL,
    stato_sede_operativa text,
    approval_number text,
    denominazione_sede_operativa text,
    ragione_sociale_impresa text,
    partita_iva text,
    codice_fiscale text,
    indirizzo text,
    comune text,
    sigla_provincia text,
    provincia text,
    regione text,
    cod_ufficio_veterinario text,
    ufficio_veterinario text,
    attivita text,
    stato_attivita text,
    descrizione_sezione text,
    data_inizio_attivita text,
    data_fine_attivita text,
    tipo_autorizzazione text,
    imballaggio text,
    paesi_abilitati_export text,
    remark text,
    species text,
    informazioni_aggiuntive text,
    id_import integer,
    stato_import integer DEFAULT 0,
    opu_id_linea_produttiva_master_list integer,
    opu_tipo_impresa integer,
    opu_tipo_societa integer,
    opu_domicilio_digitale text,
    opu_note_impresa text,
    opu_nome_rappresentante text,
    opu_cognome_rappresentante text,
    opu_sesso_rappresentante text,
    opu_data_nascita_rappresentante timestamp without time zone,
    opu_nazione_nascita_rappresentante integer,
    opu_comune_nascita_rappresentante text,
    opu_codice_fiscale_rappresentante text,
    opu_nazione_residenza_rappresentante integer,
    opu_provincia_residenza_rappresentante integer,
    opu_toponimo_residenza_rappresentante integer,
    opu_via_residenza_rappresentante text,
    opu_civico_residenza_rappresentante text,
    opu_cap_residenza_rappresentante text,
    opu_domicilio_digitale_rappresentante text,
    opu_comune_residenza_rappresentante integer,
    opu_id_operatore integer,
    opu_nazione_sede_legale integer,
    opu_provincia_sede_legale integer,
    opu_toponimo_sede_legale integer,
    opu_via_sede_legale text,
    opu_civico_sede_legale text,
    opu_cap_sede_legale text,
    opu_comune_sede_legale integer,
    data_process timestamp without time zone,
    id_utente_process integer,
    opu_descrizione_provincia_residenza_rappresentante text,
    opu_descrizione_comune_residenza_rappresentante text,
    opu_descrizione_toponimo_residenza_rappresentante text,
    opu_descrizione_provincia_sede_legale text,
    opu_descrizione_comune_sede_legale text,
    opu_descrizione_toponimo_sede_legale text,
    md5 text,
    riferimento_org_id integer,
    riferimento_id_stabilimento integer,
    recuperato_org_id boolean,
    org_id_da_convergere integer,
    latitudine double precision,
    longitudine double precision,
    cap text
);


ALTER TABLE public.sintesis_stabilimenti_import OWNER TO postgres;

--
-- TOC entry 701 (class 1259 OID 18849)
-- Name: sintesis_stabilimenti_import_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.sintesis_stabilimenti_import_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sintesis_stabilimenti_import_id_seq OWNER TO postgres;

--
-- TOC entry 7647 (class 0 OID 0)
-- Dependencies: 701
-- Name: sintesis_stabilimenti_import_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.sintesis_stabilimenti_import_id_seq OWNED BY public.sintesis_stabilimenti_import.id;


--
-- TOC entry 702 (class 1259 OID 18850)
-- Name: sintesis_stabilimenti_import_log; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.sintesis_stabilimenti_import_log (
    id integer NOT NULL,
    utente_import integer,
    data_sintesis timestamp without time zone,
    file_import text,
    errore text,
    entered timestamp without time zone,
    md5 text
);


ALTER TABLE public.sintesis_stabilimenti_import_log OWNER TO postgres;

--
-- TOC entry 703 (class 1259 OID 18855)
-- Name: sintesis_stabilimenti_import_log_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.sintesis_stabilimenti_import_log_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sintesis_stabilimenti_import_log_id_seq OWNER TO postgres;

--
-- TOC entry 7648 (class 0 OID 0)
-- Dependencies: 703
-- Name: sintesis_stabilimenti_import_log_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.sintesis_stabilimenti_import_log_id_seq OWNED BY public.sintesis_stabilimenti_import_log.id;


--
-- TOC entry 704 (class 1259 OID 18856)
-- Name: sintesis_stabilimento_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.sintesis_stabilimento_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sintesis_stabilimento_id_seq OWNER TO postgres;

--
-- TOC entry 7649 (class 0 OID 0)
-- Dependencies: 704
-- Name: sintesis_stabilimento_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.sintesis_stabilimento_id_seq OWNED BY public.sintesis_stabilimento.id;


--
-- TOC entry 705 (class 1259 OID 18857)
-- Name: sintesis_stabilimento_mobile; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.sintesis_stabilimento_mobile AS
 SELECT sa.id,
    rel.id_stabilimento,
    sa.automezzo_targa AS targa,
    '-1'::integer AS tipo,
    ''::text AS carta,
    true AS enabled,
    '-1'::integer AS indice,
    rel.id AS id_rel_stab_lp,
    sa.numero_identificativo
   FROM (public.sintesis_automezzi sa
     JOIN public.sintesis_relazione_stabilimento_linee_produttive rel ON ((rel.id = sa.id_sintesis_rel_stab_lp)))
  WHERE ((sa.trashed_date IS NULL) AND (sa.data_dismissione IS NULL));


ALTER TABLE public.sintesis_stabilimento_mobile OWNER TO postgres;

--
-- TOC entry 706 (class 1259 OID 18862)
-- Name: sintesis_storico_operatore; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.sintesis_storico_operatore (
    id integer NOT NULL,
    data_modifica timestamp without time zone,
    id_utente integer,
    id_operatore integer,
    tipo_impresa_old integer,
    tipo_impresa_new integer,
    domicilio_digitale_old text,
    domicilio_digitale_new text,
    id_indirizzo_old integer,
    id_indirizzo_new integer,
    tipo_societa_old integer,
    tipo_societa_new integer
);


ALTER TABLE public.sintesis_storico_operatore OWNER TO postgres;

--
-- TOC entry 707 (class 1259 OID 18867)
-- Name: sintesis_storico_operatore_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.sintesis_storico_operatore_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sintesis_storico_operatore_id_seq OWNER TO postgres;

--
-- TOC entry 7650 (class 0 OID 0)
-- Dependencies: 707
-- Name: sintesis_storico_operatore_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.sintesis_storico_operatore_id_seq OWNED BY public.sintesis_storico_operatore.id;


--
-- TOC entry 708 (class 1259 OID 18868)
-- Name: sintesis_storico_relazione_stabilimento_linee_produttive; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.sintesis_storico_relazione_stabilimento_linee_produttive (
    id integer NOT NULL,
    id_import integer,
    id_relazione integer,
    stato_old integer,
    stato_new integer,
    data_inizio_old timestamp without time zone,
    data_inizio_new timestamp without time zone,
    data_fine_old timestamp without time zone,
    data_fine_new timestamp without time zone,
    tipo_autorizzazione_old text,
    tipo_autorizzazione_new text,
    imballaggio_old text,
    imballaggio_new text,
    paesi_abilitati_export_old text,
    paesi_abilitati_export_new text,
    remark_old text,
    remark_new text,
    species_old text,
    species_new text,
    id_utente integer,
    data_modifica timestamp without time zone,
    id_sintesis_stabilimenti_import integer
);


ALTER TABLE public.sintesis_storico_relazione_stabilimento_linee_produttive OWNER TO postgres;

--
-- TOC entry 709 (class 1259 OID 18873)
-- Name: sintesis_storico_relazione_stabilimento_linee_produttive_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.sintesis_storico_relazione_stabilimento_linee_produttive_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sintesis_storico_relazione_stabilimento_linee_produttive_id_seq OWNER TO postgres;

--
-- TOC entry 7651 (class 0 OID 0)
-- Dependencies: 709
-- Name: sintesis_storico_relazione_stabilimento_linee_produttive_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.sintesis_storico_relazione_stabilimento_linee_produttive_id_seq OWNED BY public.sintesis_storico_relazione_stabilimento_linee_produttive.id;


--
-- TOC entry 710 (class 1259 OID 18874)
-- Name: sintesis_storico_soggetto_fisico; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.sintesis_storico_soggetto_fisico (
    id integer NOT NULL,
    data_modifica timestamp without time zone,
    id_utente integer,
    id_soggetto_fisico integer,
    nome_old text,
    nome_new text,
    cognome_old text,
    cognome_new text,
    sesso_old text,
    sesso_new text,
    data_nascita_old timestamp without time zone,
    data_nascita_new timestamp without time zone,
    nazione_nascita_old integer,
    nazione_nascita_new integer,
    comune_nascita_old text,
    comune_nascita_new text,
    codice_fiscale_old text,
    codice_fiscale_new text,
    indirizzo_id_old integer,
    indirizzo_id_new integer,
    email_old text,
    email_new text
);


ALTER TABLE public.sintesis_storico_soggetto_fisico OWNER TO postgres;

--
-- TOC entry 711 (class 1259 OID 18879)
-- Name: sintesis_storico_soggetto_fisico_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.sintesis_storico_soggetto_fisico_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sintesis_storico_soggetto_fisico_id_seq OWNER TO postgres;

--
-- TOC entry 7652 (class 0 OID 0)
-- Dependencies: 711
-- Name: sintesis_storico_soggetto_fisico_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.sintesis_storico_soggetto_fisico_id_seq OWNED BY public.sintesis_storico_soggetto_fisico.id;


--
-- TOC entry 712 (class 1259 OID 18880)
-- Name: sintesis_storico_stabilimento; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.sintesis_storico_stabilimento (
    id integer NOT NULL,
    id_import integer,
    id_stabilimento integer,
    denominazione_old text,
    denominazione_new text,
    id_indirizzo_old integer,
    id_indirizzo_new integer,
    id_operatore_old integer,
    id_operatore_new integer,
    stato_old integer,
    stato_new integer,
    id_utente integer,
    data_modifica timestamp without time zone,
    id_sintesis_stabilimenti_import integer
);


ALTER TABLE public.sintesis_storico_stabilimento OWNER TO postgres;

--
-- TOC entry 713 (class 1259 OID 18885)
-- Name: sintesis_storico_stabilimento_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.sintesis_storico_stabilimento_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sintesis_storico_stabilimento_id_seq OWNER TO postgres;

--
-- TOC entry 7653 (class 0 OID 0)
-- Dependencies: 713
-- Name: sintesis_storico_stabilimento_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.sintesis_storico_stabilimento_id_seq OWNED BY public.sintesis_storico_stabilimento.id;


--
-- TOC entry 714 (class 1259 OID 18886)
-- Name: sintesis_workflow_attivita; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.sintesis_workflow_attivita (
    id integer NOT NULL,
    id_stato integer,
    id_stato_futuro integer
);


ALTER TABLE public.sintesis_workflow_attivita OWNER TO postgres;

--
-- TOC entry 715 (class 1259 OID 18889)
-- Name: sintesis_workflow_attivita_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.sintesis_workflow_attivita_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sintesis_workflow_attivita_id_seq OWNER TO postgres;

--
-- TOC entry 7654 (class 0 OID 0)
-- Dependencies: 715
-- Name: sintesis_workflow_attivita_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.sintesis_workflow_attivita_id_seq OWNED BY public.sintesis_workflow_attivita.id;


--
-- TOC entry 716 (class 1259 OID 18890)
-- Name: sintesis_workflow_stabilimento; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.sintesis_workflow_stabilimento (
    id integer NOT NULL,
    id_stato integer,
    id_stato_futuro integer
);


ALTER TABLE public.sintesis_workflow_stabilimento OWNER TO postgres;

--
-- TOC entry 717 (class 1259 OID 18893)
-- Name: sintesis_workflow_stabilimento_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.sintesis_workflow_stabilimento_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sintesis_workflow_stabilimento_id_seq OWNER TO postgres;

--
-- TOC entry 7655 (class 0 OID 0)
-- Dependencies: 717
-- Name: sintesis_workflow_stabilimento_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.sintesis_workflow_stabilimento_id_seq OWNED BY public.sintesis_workflow_stabilimento.id;


--
-- TOC entry 718 (class 1259 OID 18894)
-- Name: strutture_asl_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.strutture_asl_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.strutture_asl_id_seq OWNER TO postgres;

--
-- TOC entry 7656 (class 0 OID 0)
-- Dependencies: 718
-- Name: strutture_asl_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.strutture_asl_id_seq OWNED BY public.strutture_asl.id;


--
-- TOC entry 719 (class 1259 OID 18895)
-- Name: strutture_controllate_autorita_competenti; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.strutture_controllate_autorita_competenti (
    id integer NOT NULL,
    id_controllo integer,
    id_struttura integer,
    enabled boolean DEFAULT true,
    modified timestamp without time zone,
    entered timestamp without time zone,
    note_hd text
);


ALTER TABLE public.strutture_controllate_autorita_competenti OWNER TO postgres;

--
-- TOC entry 720 (class 1259 OID 18901)
-- Name: suap_ric_scia_relazione_stabilimento_linee_produttive; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.suap_ric_scia_relazione_stabilimento_linee_produttive (
    id integer NOT NULL,
    id_linea_produttiva integer,
    id_stabilimento integer,
    stato integer DEFAULT 1,
    data_inizio timestamp without time zone,
    data_fine timestamp without time zone,
    primario boolean,
    enabled boolean,
    modified timestamp without time zone,
    modifiedby integer,
    numero_registrazione text,
    data_generazione_numero timestamp without time zone,
    tipo_attivita_produttiva integer,
    codice_nazionale text,
    id_opu_stabilimento integer,
    validazione_note text,
    validato_in_data timestamp without time zone,
    validato_da integer,
    codice_univoco_ml text,
    id_linea_produttiva_old integer
);


ALTER TABLE public.suap_ric_scia_relazione_stabilimento_linee_produttive OWNER TO postgres;

--
-- TOC entry 721 (class 1259 OID 18907)
-- Name: suap_ric_linee_attivita_stabilimenti_view; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.suap_ric_linee_attivita_stabilimenti_view AS
 SELECT DISTINCT v2.id_attivita,
    v1.id_stabilimento AS org_id,
    v1.id_linea_produttiva AS id_rel_ateco_attivita,
    v1.primario,
    v2.aggregazione AS categoria,
    v2.attivita AS linea_attivita,
    v2.codice_attivita AS codice_istat,
    v1.id,
    v1.enabled,
    v2.macroarea
   FROM (public.suap_ric_scia_relazione_stabilimento_linee_produttive v1
     LEFT JOIN public.ml8_linee_attivita_nuove_materializzata v2 ON ((v1.id_linea_produttiva = v2.id_nuova_linea_attivita)))
  WHERE v1.enabled;


ALTER TABLE public.suap_ric_linee_attivita_stabilimenti_view OWNER TO postgres;

--
-- TOC entry 722 (class 1259 OID 18912)
-- Name: suap_ric_scia_stabilimento; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.suap_ric_scia_stabilimento (
    id integer NOT NULL,
    entered timestamp without time zone,
    modified timestamp without time zone,
    entered_by integer,
    id_operatore integer,
    modified_by integer,
    id_asl integer,
    id_soggetto_fisico integer,
    id_indirizzo integer,
    stato integer,
    numero_registrazione text,
    data_generazione_numero timestamp without time zone,
    denominazione text,
    trashed_date timestamp without time zone,
    notes_hd text,
    tipo_attivita integer,
    tipo_carattere integer,
    data_inizio_attivita timestamp without time zone,
    data_fine_attivita timestamp without time zone,
    note text,
    numero_registrazione_variazione text,
    cessazione_stabilimento boolean,
    id_opu_stabilimento integer,
    partita_iva_variazione text,
    telefono text,
    data_ricezione_richiesta timestamp without time zone,
    alt_id integer,
    note_validazione text DEFAULT ''::text,
    stato_validazione integer DEFAULT 1,
    categoria_rischio integer,
    data_prossimo_controllo timestamp without time zone,
    data_inizio_sospensione timestamp without time zone,
    sospensione_stabilimento boolean,
    tipo_reg_ric integer,
    validazione_data timestamp without time zone,
    validazione_da integer,
    validazione_note text,
    superficie integer,
    tipo_reg_ric_old integer
);


ALTER TABLE public.suap_ric_scia_stabilimento OWNER TO postgres;

--
-- TOC entry 723 (class 1259 OID 18919)
-- Name: suap_ric_scia_linee_attivita_stabilimenti_view; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.suap_ric_scia_linee_attivita_stabilimenti_view AS
 SELECT stab.alt_id,
    v1.id_linea_produttiva AS id_rel_ateco_attivita,
    v1.primario,
    v2.aggregazione AS categoria,
    v2.attivita AS linea_attivita,
    v2.codice_attivita AS codice_istat,
    v2.codice,
    v1.id,
    v1.enabled,
    v2.macroarea
   FROM ((public.suap_ric_scia_relazione_stabilimento_linee_produttive v1
     JOIN public.ml8_linee_attivita_nuove_materializzata v2 ON ((v1.id_linea_produttiva = v2.id_nuova_linea_attivita)))
     LEFT JOIN public.suap_ric_scia_stabilimento stab ON ((stab.id = v1.id_stabilimento)));


ALTER TABLE public.suap_ric_scia_linee_attivita_stabilimenti_view OWNER TO postgres;

--
-- TOC entry 724 (class 1259 OID 18924)
-- Name: suap_ric_scia_operatore; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.suap_ric_scia_operatore (
    id integer NOT NULL,
    codice_fiscale_impresa character varying,
    note text,
    partita_iva character varying(255),
    ragione_sociale character varying(300),
    enteredby integer,
    modifiedby integer,
    entered timestamp without time zone,
    modified timestamp without time zone,
    trashed_date timestamp without time zone,
    domicilio_digitale text,
    tipo_impresa integer,
    tipo_societa integer DEFAULT '-1'::integer,
    note_internal_use_only_hd text,
    id_indirizzo integer,
    id_tipo_richiesta integer,
    validato boolean DEFAULT false,
    id_opu_operatore integer
);


ALTER TABLE public.suap_ric_scia_operatore OWNER TO postgres;

--
-- TOC entry 725 (class 1259 OID 18931)
-- Name: suap_ric_scia_operatore_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.suap_ric_scia_operatore_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.suap_ric_scia_operatore_id_seq OWNER TO postgres;

--
-- TOC entry 7657 (class 0 OID 0)
-- Dependencies: 725
-- Name: suap_ric_scia_operatore_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.suap_ric_scia_operatore_id_seq OWNED BY public.suap_ric_scia_operatore.id;


--
-- TOC entry 726 (class 1259 OID 18932)
-- Name: suap_ric_scia_relazione_stabilimento_linee_produttive_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.suap_ric_scia_relazione_stabilimento_linee_produttive_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.suap_ric_scia_relazione_stabilimento_linee_produttive_id_seq OWNER TO postgres;

--
-- TOC entry 7658 (class 0 OID 0)
-- Dependencies: 726
-- Name: suap_ric_scia_relazione_stabilimento_linee_produttive_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.suap_ric_scia_relazione_stabilimento_linee_produttive_id_seq OWNED BY public.suap_ric_scia_relazione_stabilimento_linee_produttive.id;


--
-- TOC entry 727 (class 1259 OID 18933)
-- Name: suap_ric_scia_stabilimento_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.suap_ric_scia_stabilimento_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.suap_ric_scia_stabilimento_id_seq OWNER TO postgres;

--
-- TOC entry 7659 (class 0 OID 0)
-- Dependencies: 727
-- Name: suap_ric_scia_stabilimento_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.suap_ric_scia_stabilimento_id_seq OWNED BY public.suap_ric_scia_stabilimento.id;


--
-- TOC entry 728 (class 1259 OID 18934)
-- Name: sviluppo_flussi; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.sviluppo_flussi (
    id integer NOT NULL,
    id_flusso integer,
    data timestamp without time zone DEFAULT now(),
    descrizione text,
    tags text,
    data_cancellazione timestamp without time zone,
    data_consegna timestamp without time zone,
    note_consegna text,
    id_utente_consegna integer,
    data_ultima_modifica timestamp without time zone,
    data_standby timestamp without time zone,
    id_utente_standby integer,
    note_standby text,
    data_annullamento timestamp without time zone,
    id_utente_annullamento integer,
    note_annullamento text,
    id_priorita integer DEFAULT 1,
    note_aggiornamenti_priorita text,
    note_hd text
);


ALTER TABLE public.sviluppo_flussi OWNER TO postgres;

--
-- TOC entry 729 (class 1259 OID 18941)
-- Name: sviluppo_flussi_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.sviluppo_flussi_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sviluppo_flussi_id_seq OWNER TO postgres;

--
-- TOC entry 7660 (class 0 OID 0)
-- Dependencies: 729
-- Name: sviluppo_flussi_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.sviluppo_flussi_id_seq OWNED BY public.sviluppo_flussi.id;


--
-- TOC entry 730 (class 1259 OID 18942)
-- Name: sviluppo_moduli; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.sviluppo_moduli (
    id integer NOT NULL,
    id_tipo integer NOT NULL,
    id_flusso integer NOT NULL,
    data timestamp without time zone DEFAULT now(),
    id_utente integer,
    data_cancellazione timestamp without time zone,
    non_disponibile boolean
);


ALTER TABLE public.sviluppo_moduli OWNER TO postgres;

--
-- TOC entry 731 (class 1259 OID 18946)
-- Name: sviluppo_moduli_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.sviluppo_moduli_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sviluppo_moduli_id_seq OWNER TO postgres;

--
-- TOC entry 7661 (class 0 OID 0)
-- Dependencies: 731
-- Name: sviluppo_moduli_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.sviluppo_moduli_id_seq OWNED BY public.sviluppo_moduli.id;


--
-- TOC entry 732 (class 1259 OID 18947)
-- Name: sviluppo_moduli_note; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.sviluppo_moduli_note (
    id integer NOT NULL,
    note text,
    id_modulo integer,
    id_utente integer,
    data_inserimento timestamp without time zone DEFAULT now(),
    data_cancellazione timestamp without time zone
);


ALTER TABLE public.sviluppo_moduli_note OWNER TO postgres;

--
-- TOC entry 733 (class 1259 OID 18953)
-- Name: sviluppo_moduli_note_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.sviluppo_moduli_note_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sviluppo_moduli_note_id_seq OWNER TO postgres;

--
-- TOC entry 7662 (class 0 OID 0)
-- Dependencies: 733
-- Name: sviluppo_moduli_note_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.sviluppo_moduli_note_id_seq OWNED BY public.sviluppo_moduli_note.id;


--
-- TOC entry 734 (class 1259 OID 18954)
-- Name: sviluppo_note_flusso; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.sviluppo_note_flusso (
    id integer NOT NULL,
    nota text,
    id_flusso integer,
    id_utente integer,
    data_inserimento timestamp without time zone DEFAULT now(),
    data_cancellazione timestamp without time zone
);


ALTER TABLE public.sviluppo_note_flusso OWNER TO postgres;

--
-- TOC entry 735 (class 1259 OID 18960)
-- Name: sviluppo_note_flusso_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.sviluppo_note_flusso_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sviluppo_note_flusso_id_seq OWNER TO postgres;

--
-- TOC entry 7663 (class 0 OID 0)
-- Dependencies: 735
-- Name: sviluppo_note_flusso_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.sviluppo_note_flusso_id_seq OWNED BY public.sviluppo_note_flusso.id;


--
-- TOC entry 736 (class 1259 OID 18961)
-- Name: tb_accesslock; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.tb_accesslock (
    id integer NOT NULL,
    ip text,
    username text,
    badcount integer DEFAULT 0,
    last timestamp without time zone DEFAULT now()
);


ALTER TABLE public.tb_accesslock OWNER TO postgres;

--
-- TOC entry 737 (class 1259 OID 18968)
-- Name: tb_accesslock_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.tb_accesslock_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.tb_accesslock_id_seq OWNER TO postgres;

--
-- TOC entry 7664 (class 0 OID 0)
-- Dependencies: 737
-- Name: tb_accesslock_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.tb_accesslock_id_seq OWNED BY public.tb_accesslock.id;


--
-- TOC entry 764 (class 1259 OID 21880)
-- Name: terreni_investigati; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.terreni_investigati (
    id integer NOT NULL,
    id_sito text,
    classe_rischio text,
    comune text,
    foglio text,
    particella text,
    parte text,
    area text,
    stato_sito text,
    decreto_approvazione text
);


ALTER TABLE public.terreni_investigati OWNER TO postgres;

--
-- TOC entry 763 (class 1259 OID 21879)
-- Name: terreni_investigati_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.terreni_investigati_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.terreni_investigati_id_seq OWNER TO postgres;

--
-- TOC entry 7665 (class 0 OID 0)
-- Dependencies: 763
-- Name: terreni_investigati_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.terreni_investigati_id_seq OWNED BY public.terreni_investigati.id;


--
-- TOC entry 738 (class 1259 OID 18969)
-- Name: ticket_ticketid_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.ticket_ticketid_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ticket_ticketid_seq OWNER TO postgres;

--
-- TOC entry 7666 (class 0 OID 0)
-- Dependencies: 738
-- Name: ticket_ticketid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.ticket_ticketid_seq OWNED BY public.ticket.ticketid;


--
-- TOC entry 739 (class 1259 OID 18970)
-- Name: tipocontrolloufficialeimprese; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.tipocontrolloufficialeimprese (
    idcontrollo integer,
    tipo_audit integer,
    bpi integer,
    haccp integer,
    tipoispezione integer,
    pianomonitoraggio integer,
    ispezione integer,
    audit_tipo integer,
    id integer NOT NULL,
    id_unita_operativa integer,
    oggetto_audit integer,
    enabled boolean DEFAULT true,
    modified timestamp without time zone,
    modifiedby integer,
    id_lookup_condizionalita integer DEFAULT '-1'::integer,
    audit_di_followup boolean,
    id_oia_nodo_temp integer,
    id_tipocontrollo_ufficiale_imprese_ext integer,
    notes_hd text,
    note_hd text
);


ALTER TABLE public.tipocontrolloufficialeimprese OWNER TO postgres;

--
-- TOC entry 740 (class 1259 OID 18977)
-- Name: tipocontrolloufficialeimprese_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.tipocontrolloufficialeimprese_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.tipocontrolloufficialeimprese_id_seq OWNER TO postgres;

--
-- TOC entry 7667 (class 0 OID 0)
-- Dependencies: 740
-- Name: tipocontrolloufficialeimprese_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.tipocontrolloufficialeimprese_id_seq OWNED BY public.tipocontrolloufficialeimprese.id;


--
-- TOC entry 741 (class 1259 OID 18978)
-- Name: unita_operative_controllo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.unita_operative_controllo (
    id integer NOT NULL,
    id_controllo integer,
    id_unita_operativa integer,
    note_internal_use_only_hd text
);


ALTER TABLE public.unita_operative_controllo OWNER TO postgres;

--
-- TOC entry 742 (class 1259 OID 18983)
-- Name: unita_operative_controllo_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.unita_operative_controllo_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.unita_operative_controllo_id_seq OWNER TO postgres;

--
-- TOC entry 7668 (class 0 OID 0)
-- Dependencies: 742
-- Name: unita_operative_controllo_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.unita_operative_controllo_id_seq OWNED BY public.unita_operative_controllo.id;


--
-- TOC entry 743 (class 1259 OID 18984)
-- Name: vdaccess_log_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.vdaccess_log_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.vdaccess_log_id_seq OWNER TO postgres;

--
-- TOC entry 7669 (class 0 OID 0)
-- Dependencies: 743
-- Name: vdaccess_log_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.vdaccess_log_id_seq OWNED BY public.guru_log.id;


--
-- TOC entry 744 (class 1259 OID 18985)
-- Name: view_gisa_anag; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.view_gisa_anag AS
 SELECT t1.riferimento_id,
    t1.riferimento_id_nome_tab,
    t1.ragione_sociale,
    t1.partita_iva,
    t1.codice_fiscale,
    t1.nominativo_rappresentante,
    t1.comune_leg,
    t1.provincia_leg,
    t1.indirizzo_leg,
    t1.comune,
    t1.provincia_stab,
    t1.indirizzo,
    t1.latitudine_stab,
    t1.longitudine_stab,
    t1.asl_rif,
    t1.asl
   FROM public.dblink('host=127.0.0.1 dbname=gisa'::text, 'SELECT distinct 
			riferimento_id, riferimento_id_nome_tab, ragione_sociale, partita_iva, codice_fiscale, nominativo_rappresentante
			, comune_leg, provincia_leg, indirizzo_leg, comune, provincia_stab, indirizzo, latitudine_stab, longitudine_stab
			, asl_rif, asl
			from ricerche_anagrafiche_old_materializzata'::text) t1(riferimento_id integer, riferimento_id_nome_tab text, ragione_sociale character varying, partita_iva character varying, codice_fiscale character varying, nominativo_rappresentante text, comune_leg character varying, provincia_leg text, indirizzo_leg text, comune character varying, provincia_stab text, indirizzo text, latitudine_stab double precision, longitudine_stab double precision, asl_rif integer, asl character varying)
  WHERE (1 = 1);


ALTER TABLE public.view_gisa_anag OWNER TO postgres;

--
-- TOC entry 745 (class 1259 OID 18990)
-- Name: view_globale_trashed_no_trashed_minimale; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.view_globale_trashed_no_trashed_minimale AS
 SELECT DISTINCT controllo.num_verbale,
    controllo.orgidt,
    controllo.id_stabilimento,
    controllo.id_apiario,
    controllo.alt_id,
    controllo.ticketid,
    controllo.identificativo,
    controllo.id_nc,
    controllo.tipo_attivita,
    controllo.data_cancellazione_attivita,
    controllo.id_cu,
    controllo.tipologia_campioni,
    controllo.motivazione_piano_campione,
    controllo.motivazione_campione,
    controllo.tipo_piano_monitoraggio,
    controllo.sottopiano,
    controllo.esito,
    controllo.analita,
    controllo.matrice,
    controllo.data_inizio_controllo,
    controllo.data_chiusura_controllo,
    controllo.anno_chiusura,
    anagrafica.riferimento_id AS org_id,
    anagrafica.ragione_sociale,
    anagrafica.asl_rif,
    anagrafica.asl,
    anagrafica.tipologia_operatore AS tipologia,
    lto.description AS tipologia_operatore,
    NULL::timestamp without time zone AS data_cancellazione_operatore
   FROM ((( SELECT t.location AS num_verbale,
            t.org_id AS orgidt,
            t.id_stabilimento,
            t.id_apiario,
            t.alt_id,
            t.ticketid,
            t.identificativo,
            t.id_nonconformita AS id_nc,
            t.tipologia AS tipo_attivita,
            t.trashed_date AS data_cancellazione_attivita,
                CASE
                    WHEN ((t.tipologia = 1) OR (t.tipologia = 9) OR (t.tipologia = 15)) THEN ( SELECT tt.id_controllo_ufficiale
                       FROM public.ticket tt
                      WHERE (tt.ticketid = t.id_nonconformita))
                    ELSE t.id_controllo_ufficiale
                END AS id_cu,
                CASE
                    WHEN (t.tipologia = 1) THEN 'Sanzioni'::text
                    WHEN (t.tipologia = 2) THEN 'Campioni'::text
                    WHEN (t.tipologia = 6) THEN 'Notizie di reato'::text
                    WHEN (t.tipologia = 7) THEN 'Tamponi'::text
                    WHEN (t.tipologia = 8) THEN 'Non conformitÃ '::text
                    WHEN (t.tipologia = 9) THEN 'Sequestri'::text
                    WHEN (t.tipologia = 15) THEN 'Follow up'::text
                    WHEN (t.tipologia = 3) THEN 'Controlli Ufficiali'::text
                    ELSE 'Altro'::text
                END AS tipologia_campioni,
            t.motivazione_piano_campione,
                CASE
                    WHEN (lti.code = 2) THEN ((lpiano.description)::text)::character varying
                    ELSE lti.description
                END AS motivazione_campione,
                CASE
                    WHEN (lpianopadre.code > 0) THEN lpianopadre.description
                    ELSE lpiano.description
                END AS tipo_piano_monitoraggio,
            lpiano.description AS sottopiano,
                CASE
                    WHEN ((t.sanzioni_amministrative > 0) AND (analiti.esito_id IS NULL)) THEN (esito.description)::text
                    WHEN (analiti.esito_id > 0) THEN (esitonew.description)::text
                    WHEN ((t.tipologia = 2) AND (t.sanzioni_amministrative < 0) AND (analiti.esito_id < 0)) THEN 'Da Attendere'::text
                    ELSE 'N.D'::text
                END AS esito,
            analiti.cammino AS analita,
            matrici.cammino AS matrice,
            to_date((t.assigned_date)::text, 'yyyy/mm/dd'::text) AS data_inizio_controllo,
            to_date((t.closed)::text, 'yyyy/mm/dd'::text) AS data_chiusura_controllo,
                CASE
                    WHEN (t.closed IS NULL) THEN 'N.D.'::text
                    ELSE (date_part('year'::text, t.closed))::text
                END AS anno_chiusura
           FROM (((((((public.ticket t
             LEFT JOIN public.campione_analiti analiti ON ((analiti.id_campione = t.ticketid)))
             LEFT JOIN public.matrici_campioni matrici ON ((matrici.id_campione = t.ticketid)))
             LEFT JOIN public.lookup_tipo_ispezione lti ON ((lti.code = t.motivazione_campione)))
             LEFT JOIN public.lookup_piano_monitoraggio lpiano ON ((lpiano.code = t.motivazione_piano_campione)))
             LEFT JOIN public.lookup_piano_monitoraggio lpianopadre ON ((lpianopadre.code = lpiano.id_padre)))
             LEFT JOIN public.lookup_esito_campione esito ON ((t.sanzioni_amministrative = esito.code)))
             LEFT JOIN public.lookup_esito_campione esitonew ON ((analiti.esito_id = esitonew.code)))) controllo
     JOIN ( SELECT ricerche_anagrafiche_old_materializzata.riferimento_id,
            ricerche_anagrafiche_old_materializzata.riferimento_id_nome,
            ricerche_anagrafiche_old_materializzata.riferimento_id_nome_col,
            ricerche_anagrafiche_old_materializzata.riferimento_id_nome_tab,
            ricerche_anagrafiche_old_materializzata.data_inserimento,
            ricerche_anagrafiche_old_materializzata.ragione_sociale,
            ricerche_anagrafiche_old_materializzata.asl_rif,
            ricerche_anagrafiche_old_materializzata.asl,
            ricerche_anagrafiche_old_materializzata.codice_fiscale,
            ricerche_anagrafiche_old_materializzata.codice_fiscale_rappresentante,
            ricerche_anagrafiche_old_materializzata.partita_iva,
            ricerche_anagrafiche_old_materializzata.categoria_rischio,
            ricerche_anagrafiche_old_materializzata.prossimo_controllo,
            ricerche_anagrafiche_old_materializzata.num_riconoscimento,
            ricerche_anagrafiche_old_materializzata.n_reg,
            ricerche_anagrafiche_old_materializzata.n_linea,
            ricerche_anagrafiche_old_materializzata.nominativo_rappresentante,
            ricerche_anagrafiche_old_materializzata.tipo_attivita_descrizione,
            ricerche_anagrafiche_old_materializzata.tipo_attivita,
            ricerche_anagrafiche_old_materializzata.data_inizio_attivita,
            ricerche_anagrafiche_old_materializzata.data_fine_attivita,
            ricerche_anagrafiche_old_materializzata.stato,
            ricerche_anagrafiche_old_materializzata.id_stato,
            ricerche_anagrafiche_old_materializzata.comune,
            ricerche_anagrafiche_old_materializzata.provincia_stab,
            ricerche_anagrafiche_old_materializzata.indirizzo,
            ricerche_anagrafiche_old_materializzata.cap_stab,
            ricerche_anagrafiche_old_materializzata.comune_leg,
            ricerche_anagrafiche_old_materializzata.provincia_leg,
            ricerche_anagrafiche_old_materializzata.indirizzo_leg,
            ricerche_anagrafiche_old_materializzata.cap_leg,
            ricerche_anagrafiche_old_materializzata.macroarea,
            ricerche_anagrafiche_old_materializzata.aggregazione,
            ricerche_anagrafiche_old_materializzata.attivita,
            ricerche_anagrafiche_old_materializzata.path_attivita_completo,
            ricerche_anagrafiche_old_materializzata.gestione_masterlist,
            ricerche_anagrafiche_old_materializzata.norma,
            ricerche_anagrafiche_old_materializzata.id_norma,
            ricerche_anagrafiche_old_materializzata.tipologia_operatore,
            ricerche_anagrafiche_old_materializzata.tipo_ricerca_anagrafica,
            ricerche_anagrafiche_old_materializzata.color,
            ricerche_anagrafiche_old_materializzata.n_reg_old,
            ricerche_anagrafiche_old_materializzata.id_tipo_linea_reg_ric,
            ricerche_anagrafiche_old_materializzata.id_linea
           FROM public.ricerche_anagrafiche_old_materializzata) anagrafica ON ((((controllo.orgidt = anagrafica.riferimento_id) AND (anagrafica.riferimento_id_nome_tab = 'organization'::text)) OR ((controllo.id_stabilimento = anagrafica.riferimento_id) AND (anagrafica.riferimento_id_nome_tab = 'opu_stabilimento'::text)) OR ((controllo.id_apiario = anagrafica.riferimento_id) AND (anagrafica.riferimento_id_nome_tab = 'apicoltura_apiari'::text)) OR ((controllo.alt_id = anagrafica.riferimento_id) AND (anagrafica.riferimento_id_nome_tab = 'suap_ric_scia_stabilimento'::text)) OR ((controllo.alt_id = anagrafica.riferimento_id) AND (anagrafica.riferimento_id_nome_tab = 'sintesis_stabilimento'::text)) OR ((controllo.alt_id = anagrafica.riferimento_id) AND (anagrafica.riferimento_id_nome_tab = 'stabilimenti'::text)) OR ((controllo.alt_id = (anagrafica.riferimento_id + 20000000)) AND (anagrafica.riferimento_id_nome_tab = 'opu_stabilimento'::text)))))
     LEFT JOIN public.lookup_tipologia_operatore lto ON ((lto.code = anagrafica.tipologia_operatore)));


ALTER TABLE public.view_globale_trashed_no_trashed_minimale OWNER TO postgres;

--
-- TOC entry 746 (class 1259 OID 18995)
-- Name: whitelist_ip; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.whitelist_ip (
    ip character varying(15) NOT NULL,
    shared_key_suap text,
    istat_comune text,
    id integer NOT NULL
);


ALTER TABLE public.whitelist_ip OWNER TO postgres;

--
-- TOC entry 747 (class 1259 OID 19000)
-- Name: whitelist_ip_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.whitelist_ip_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.whitelist_ip_id_seq OWNER TO postgres;

--
-- TOC entry 7670 (class 0 OID 0)
-- Dependencies: 747
-- Name: whitelist_ip_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.whitelist_ip_id_seq OWNED BY public.whitelist_ip.id;


--
-- TOC entry 748 (class 1259 OID 19001)
-- Name: ws_endpoint; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ws_endpoint (
    id integer NOT NULL,
    nome text
);


ALTER TABLE public.ws_endpoint OWNER TO postgres;

--
-- TOC entry 749 (class 1259 OID 19006)
-- Name: ws_endpoint_info; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ws_endpoint_info (
    id integer NOT NULL,
    id_endpoint integer NOT NULL,
    ambiente text,
    url text,
    username text,
    password text,
    ruolo text,
    ruolo_codice text,
    ruolo_valore_codice text,
    xmlns text,
    suffisso_autenticazione text,
    prefisso_username_password text
);


ALTER TABLE public.ws_endpoint_info OWNER TO postgres;

--
-- TOC entry 750 (class 1259 OID 19011)
-- Name: ws_info_web_service; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ws_info_web_service (
    id integer NOT NULL,
    id_endpoint integer NOT NULL,
    id_azione integer,
    id_servizio integer,
    id_oggetto integer
);


ALTER TABLE public.ws_info_web_service OWNER TO postgres;

--
-- TOC entry 751 (class 1259 OID 19014)
-- Name: ws_oggetto; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ws_oggetto (
    id integer NOT NULL,
    nome text
);


ALTER TABLE public.ws_oggetto OWNER TO postgres;

--
-- TOC entry 752 (class 1259 OID 19019)
-- Name: ws_oggetto_campi; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ws_oggetto_campi (
    id integer NOT NULL,
    id_oggetto integer NOT NULL,
    campo text,
    obbligatorio boolean DEFAULT false
);


ALTER TABLE public.ws_oggetto_campi OWNER TO postgres;

--
-- TOC entry 753 (class 1259 OID 19025)
-- Name: ws_servizi; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ws_servizi (
    id integer NOT NULL,
    nome text
);


ALTER TABLE public.ws_servizi OWNER TO postgres;

--
-- TOC entry 754 (class 1259 OID 19030)
-- Name: ws_storico_chiamate; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ws_storico_chiamate (
    id integer NOT NULL,
    url text,
    request text,
    response text,
    id_utente integer,
    data timestamp without time zone DEFAULT now()
);


ALTER TABLE public.ws_storico_chiamate OWNER TO postgres;

--
-- TOC entry 755 (class 1259 OID 19036)
-- Name: ws_storico_chiamate_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.ws_storico_chiamate_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ws_storico_chiamate_id_seq OWNER TO postgres;

--
-- TOC entry 7671 (class 0 OID 0)
-- Dependencies: 755
-- Name: ws_storico_chiamate_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.ws_storico_chiamate_id_seq OWNED BY public.ws_storico_chiamate.id;


--
-- TOC entry 5844 (class 2604 OID 19037)
-- Name: associazione_preaccettazione_entita id; Type: DEFAULT; Schema: preaccettazione; Owner: postgres
--

ALTER TABLE ONLY preaccettazione.associazione_preaccettazione_entita ALTER COLUMN id SET DEFAULT nextval('preaccettazione.associazione_preaccettazione_entita_id_seq'::regclass);


--
-- TOC entry 5845 (class 2604 OID 19038)
-- Name: codici_preaccettazione id; Type: DEFAULT; Schema: preaccettazione; Owner: postgres
--

ALTER TABLE ONLY preaccettazione.codici_preaccettazione ALTER COLUMN id SET DEFAULT nextval('preaccettazione.codici_preaccettazione_id_seq'::regclass);


--
-- TOC entry 5846 (class 2604 OID 19039)
-- Name: stati_preaccettazione id; Type: DEFAULT; Schema: preaccettazione; Owner: postgres
--

ALTER TABLE ONLY preaccettazione.stati_preaccettazione ALTER COLUMN id SET DEFAULT nextval('preaccettazione.stati_preaccettazione_id_seq'::regclass);


--
-- TOC entry 5855 (class 2604 OID 19040)
-- Name: access_ user_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.access_ ALTER COLUMN user_id SET DEFAULT nextval('public.access_user_id_seq'::regclass);


--
-- TOC entry 5876 (class 2604 OID 19041)
-- Name: access_dati user_dati_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.access_dati ALTER COLUMN user_dati_id SET DEFAULT nextval('public.access_dati_user_dati_id_seq'::regclass);


--
-- TOC entry 5877 (class 2604 OID 19042)
-- Name: access_ext_ user_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.access_ext_ ALTER COLUMN user_id SET DEFAULT nextval('public.access_ext_user_id_seq'::regclass);


--
-- TOC entry 5897 (class 2604 OID 19043)
-- Name: acquacoltura_dati_controlli_bdn id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.acquacoltura_dati_controlli_bdn ALTER COLUMN id SET DEFAULT nextval('public.acquacoltura_dati_controlli_bdn_id_seq'::regclass);


--
-- TOC entry 5900 (class 2604 OID 19044)
-- Name: alt_partizioni code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.alt_partizioni ALTER COLUMN code SET DEFAULT nextval('public.alt_partizioni_code_seq'::regclass);


--
-- TOC entry 5901 (class 2604 OID 19045)
-- Name: anag_acque_reflue id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.anag_acque_reflue ALTER COLUMN id SET DEFAULT nextval('public.anag_acque_reflue_id_seq'::regclass);


--
-- TOC entry 5902 (class 2604 OID 19046)
-- Name: anag_dati_aggiuntivi id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.anag_dati_aggiuntivi ALTER COLUMN id SET DEFAULT nextval('public.anag_dati_aggiuntivi_id_seq'::regclass);


--
-- TOC entry 5906 (class 2604 OID 19047)
-- Name: anag_dati_autorizzativi id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.anag_dati_autorizzativi ALTER COLUMN id SET DEFAULT nextval('public.anag_dati_autorizzativi_id_seq'::regclass);


--
-- TOC entry 5904 (class 2604 OID 19048)
-- Name: anag_dati_autorizzativi_matrici id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.anag_dati_autorizzativi_matrici ALTER COLUMN id SET DEFAULT nextval('public.anag_dati_aggiuntivi_matrici_id_seq'::regclass);


--
-- TOC entry 5908 (class 2604 OID 19049)
-- Name: anag_emissioni_in_atmosfera_camini id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.anag_emissioni_in_atmosfera_camini ALTER COLUMN id SET DEFAULT nextval('public.anag_emissioni_in_atmosfera_camini_id_seq'::regclass);


--
-- TOC entry 5836 (class 2604 OID 19050)
-- Name: anag_storico_modifiche id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.anag_storico_modifiche ALTER COLUMN id SET DEFAULT nextval('public.anag_storico_modifiche_id_seq'::regclass);


--
-- TOC entry 5910 (class 2604 OID 19051)
-- Name: anagrafica_codice_sinvsa id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.anagrafica_codice_sinvsa ALTER COLUMN id SET DEFAULT nextval('public.anagrafica_codice_sinvsa_id_seq'::regclass);


--
-- TOC entry 5954 (class 2604 OID 19052)
-- Name: asset asset_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.asset ALTER COLUMN asset_id SET DEFAULT nextval('public.asset_asset_id_seq'::regclass);


--
-- TOC entry 5958 (class 2604 OID 19053)
-- Name: audit id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.audit ALTER COLUMN id SET DEFAULT nextval('public.audit_id_seq'::regclass);


--
-- TOC entry 5959 (class 2604 OID 19054)
-- Name: audit_checklist checklist_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.audit_checklist ALTER COLUMN checklist_id SET DEFAULT nextval('public.audit_checklist_checklist_id_seq'::regclass);


--
-- TOC entry 5961 (class 2604 OID 19055)
-- Name: aziende id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.aziende ALTER COLUMN id SET DEFAULT nextval('public.aziende_id_seq'::regclass);


--
-- TOC entry 5962 (class 2604 OID 19056)
-- Name: aziendezootecniche_osm id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.aziendezootecniche_osm ALTER COLUMN id SET DEFAULT nextval('public.aziendezootecniche_osm_id_seq'::regclass);


--
-- TOC entry 5964 (class 2604 OID 19057)
-- Name: blacklist_range_ip id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blacklist_range_ip ALTER COLUMN id SET DEFAULT nextval('public.blacklist_range_ip_id_seq'::regclass);


--
-- TOC entry 5953 (class 2604 OID 19058)
-- Name: campione_analiti id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.campione_analiti ALTER COLUMN id SET DEFAULT nextval('public.analiti_campioni_id_seq'::regclass);


--
-- TOC entry 5965 (class 2604 OID 19059)
-- Name: campione_gruppo_ispettivo id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.campione_gruppo_ispettivo ALTER COLUMN id SET DEFAULT nextval('public.campione_gruppo_ispettivo_id_seq'::regclass);


--
-- TOC entry 5967 (class 2604 OID 19060)
-- Name: campione_programma_campionamento id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.campione_programma_campionamento ALTER COLUMN id SET DEFAULT nextval('public.campione_programma_campionamento_id_seq'::regclass);


--
-- TOC entry 5969 (class 2604 OID 19061)
-- Name: campioni id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.campioni ALTER COLUMN id SET DEFAULT nextval('public.campioni_id_seq'::regclass);


--
-- TOC entry 5972 (class 2604 OID 19062)
-- Name: campioni_verbali_protocolli id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.campioni_verbali_protocolli ALTER COLUMN id SET DEFAULT nextval('public.campioni_verbali_protocolli_id_seq'::regclass);


--
-- TOC entry 5974 (class 2604 OID 19063)
-- Name: cfsinbox_message id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cfsinbox_message ALTER COLUMN id SET DEFAULT nextval('public.cfsinbox_message_id_seq'::regclass);


--
-- TOC entry 5982 (class 2604 OID 19064)
-- Name: checklist id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.checklist ALTER COLUMN id SET DEFAULT nextval('public.checklist_id_seq'::regclass);


--
-- TOC entry 5987 (class 2604 OID 19065)
-- Name: checklist_type code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.checklist_type ALTER COLUMN code SET DEFAULT nextval('public.checklist_type_code_seq'::regclass);


--
-- TOC entry 5992 (class 2604 OID 19066)
-- Name: chk_bns_mod_ist id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.chk_bns_mod_ist ALTER COLUMN id SET DEFAULT nextval('public.chk_bns_mod_ist_id_seq'::regclass);


--
-- TOC entry 5995 (class 2604 OID 19067)
-- Name: chk_bns_risposte id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.chk_bns_risposte ALTER COLUMN id SET DEFAULT nextval('public.chk_bns_risposte_id_seq'::regclass);


--
-- TOC entry 5911 (class 2604 OID 19068)
-- Name: comuni1 id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comuni1 ALTER COLUMN id SET DEFAULT nextval('public.comuni1_id_seq'::regclass);


--
-- TOC entry 5999 (class 2604 OID 19069)
-- Name: configuratore_template_no_scia id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.configuratore_template_no_scia ALTER COLUMN id SET DEFAULT nextval('public.configuratore_template_no_scia_id_seq'::regclass);


--
-- TOC entry 6002 (class 2604 OID 19070)
-- Name: contact_ contact_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contact_ ALTER COLUMN contact_id SET DEFAULT nextval('public.contact_contact_id_seq'::regclass);


--
-- TOC entry 6017 (class 2604 OID 19071)
-- Name: contact_emailaddress emailaddress_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contact_emailaddress ALTER COLUMN emailaddress_id SET DEFAULT nextval('public.contact_emailaddress_emailaddress_id_seq'::regclass);


--
-- TOC entry 6036 (class 2604 OID 19072)
-- Name: contact_ext contact_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contact_ext ALTER COLUMN contact_id SET DEFAULT nextval('public.contact_ext_contact_id_seq'::regclass);


--
-- TOC entry 6021 (class 2604 OID 19073)
-- Name: contact_ext_ contact_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contact_ext_ ALTER COLUMN contact_id SET DEFAULT nextval('public.contact_ext_contact_id_seq'::regclass);


--
-- TOC entry 6080 (class 2604 OID 19074)
-- Name: controlli_ufficiali_operatori_mercato id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.controlli_ufficiali_operatori_mercato ALTER COLUMN id SET DEFAULT nextval('public.controlli_ufficiali_operatori_mercato_id_seq'::regclass);


--
-- TOC entry 6087 (class 2604 OID 19075)
-- Name: cu_fields_value id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cu_fields_value ALTER COLUMN id SET DEFAULT nextval('public.cu_fields_value_id_seq'::regclass);


--
-- TOC entry 6090 (class 2604 OID 19076)
-- Name: cu_html_fields id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cu_html_fields ALTER COLUMN id SET DEFAULT nextval('public.cu_html_fields_id_seq'::regclass);


--
-- TOC entry 6095 (class 2604 OID 19077)
-- Name: cu_motivi_operatori id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cu_motivi_operatori ALTER COLUMN id SET DEFAULT nextval('public.cu_motivi_operatori_id_seq'::regclass);


--
-- TOC entry 6096 (class 2604 OID 19078)
-- Name: cun_amr id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cun_amr ALTER COLUMN id SET DEFAULT nextval('public.cun_amr_id_seq'::regclass);


--
-- TOC entry 6097 (class 2604 OID 19079)
-- Name: dpat id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dpat ALTER COLUMN id SET DEFAULT nextval('public.dpat_id_seq'::regclass);


--
-- TOC entry 6099 (class 2604 OID 19080)
-- Name: dpat_codici_indicatore id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dpat_codici_indicatore ALTER COLUMN id SET DEFAULT nextval('public.dpat_codici_indicatore_id_seq'::regclass);


--
-- TOC entry 6074 (class 2604 OID 19081)
-- Name: dpat_indicatore_new id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dpat_indicatore_new ALTER COLUMN id SET DEFAULT nextval('public.dpat_indicatore_new_id_seq'::regclass);


--
-- TOC entry 6075 (class 2604 OID 19082)
-- Name: dpat_indicatore_new cod_raggruppamento; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dpat_indicatore_new ALTER COLUMN cod_raggruppamento SET DEFAULT nextval('public.dpat_indicatore_new_cod_raggruppamento_seq'::regclass);


--
-- TOC entry 6100 (class 2604 OID 19083)
-- Name: dpat_istanza id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dpat_istanza ALTER COLUMN id SET DEFAULT nextval('public.dpat_istanza_id_seq'::regclass);


--
-- TOC entry 6078 (class 2604 OID 19084)
-- Name: dpat_piano_attivita_new id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dpat_piano_attivita_new ALTER COLUMN id SET DEFAULT nextval('public.dpat_piano_attivita_new_id_seq'::regclass);


--
-- TOC entry 6079 (class 2604 OID 19085)
-- Name: dpat_piano_attivita_new cod_raggruppamento; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dpat_piano_attivita_new ALTER COLUMN cod_raggruppamento SET DEFAULT nextval('public.dpat_piano_attivita_new_cod_raggruppamento_seq'::regclass);


--
-- TOC entry 6102 (class 2604 OID 19086)
-- Name: dpat_sez_new id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dpat_sez_new ALTER COLUMN id SET DEFAULT nextval('public.dpat_sez_new_id_seq'::regclass);


--
-- TOC entry 6103 (class 2604 OID 19087)
-- Name: dpat_sez_new cod_raggruppamento; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dpat_sez_new ALTER COLUMN cod_raggruppamento SET DEFAULT nextval('public.dpat_sez_new_cod_raggruppamento_seq'::regclass);


--
-- TOC entry 6104 (class 2604 OID 19088)
-- Name: dpat_strumento_calcolo id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dpat_strumento_calcolo ALTER COLUMN id SET DEFAULT nextval('public.dpat_strumento_calcolo_id_seq'::regclass);


--
-- TOC entry 6143 (class 2604 OID 19089)
-- Name: elenco_attivita_osm_reg id_; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.elenco_attivita_osm_reg ALTER COLUMN id_ SET DEFAULT nextval('public.elenco_attivita_osm_reg_id_seq'::regclass);


--
-- TOC entry 6144 (class 2604 OID 19090)
-- Name: elenco_attivita_osm_reg id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.elenco_attivita_osm_reg ALTER COLUMN id SET DEFAULT nextval('public.elenco_attivita_osm_reg_id_seq1'::regclass);


--
-- TOC entry 5835 (class 2604 OID 19091)
-- Name: emissioni_in_atmosfera_camini id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.emissioni_in_atmosfera_camini ALTER COLUMN id SET DEFAULT nextval('public.emissioni_in_atmosfera_camini_id_seq'::regclass);


--
-- TOC entry 6145 (class 2604 OID 19092)
-- Name: evento_blocco id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.evento_blocco ALTER COLUMN id SET DEFAULT nextval('public.evento_blocco_id_seq'::regclass);


--
-- TOC entry 6146 (class 2604 OID 19093)
-- Name: evento_blocco_controlli id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.evento_blocco_controlli ALTER COLUMN id SET DEFAULT nextval('public.evento_blocco_controlli_id_seq'::regclass);


--
-- TOC entry 6148 (class 2604 OID 19094)
-- Name: fascicoli_ispettivi id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.fascicoli_ispettivi ALTER COLUMN id SET DEFAULT nextval('public.fascicoli_id_seq'::regclass);


--
-- TOC entry 6152 (class 2604 OID 19095)
-- Name: fascicoli_ispettivi_protocolli id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.fascicoli_ispettivi_protocolli ALTER COLUMN id SET DEFAULT nextval('public.fascicoli_protocolli_id_seq'::regclass);


--
-- TOC entry 6154 (class 2604 OID 19096)
-- Name: fasi_lavorazione id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.fasi_lavorazione ALTER COLUMN id SET DEFAULT nextval('public.fasi_lavorazione_id_seq'::regclass);


--
-- TOC entry 6049 (class 2604 OID 19097)
-- Name: giornate_ispettive id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.giornate_ispettive ALTER COLUMN id SET DEFAULT nextval('public.controlli_ufficiali_id_seq'::regclass);


--
-- TOC entry 6581 (class 2604 OID 21692)
-- Name: giornate_ispettive_allegati id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.giornate_ispettive_allegati ALTER COLUMN id SET DEFAULT nextval('public.giornate_ispettive_allegati_id_seq'::regclass);


--
-- TOC entry 6043 (class 2604 OID 19098)
-- Name: giornate_ispettive_emissioni_in_atmosfera_camini id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.giornate_ispettive_emissioni_in_atmosfera_camini ALTER COLUMN id SET DEFAULT nextval('public.controlli_ufficiali_emissioni_in_atmosfera_camini_id_seq'::regclass);


--
-- TOC entry 6046 (class 2604 OID 19099)
-- Name: giornate_ispettive_esami id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.giornate_ispettive_esami ALTER COLUMN id SET DEFAULT nextval('public.controlli_ufficiali_esami_id_seq'::regclass);


--
-- TOC entry 6037 (class 2604 OID 19100)
-- Name: giornate_ispettive_fase_lavorazione id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.giornate_ispettive_fase_lavorazione ALTER COLUMN id SET DEFAULT nextval('public.controlli_fase_lavorazione_id_seq'::regclass);


--
-- TOC entry 6093 (class 2604 OID 19101)
-- Name: giornate_ispettive_log_json id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.giornate_ispettive_log_json ALTER COLUMN id SET DEFAULT nextval('public.cu_log_json_id_seq'::regclass);


--
-- TOC entry 6052 (class 2604 OID 19102)
-- Name: giornate_ispettive_matrici id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.giornate_ispettive_matrici ALTER COLUMN id SET DEFAULT nextval('public.controlli_ufficiali_matrici_id_seq'::regclass);


--
-- TOC entry 6071 (class 2604 OID 19103)
-- Name: giornate_ispettive_motivi id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.giornate_ispettive_motivi ALTER COLUMN id SET DEFAULT nextval('public.controlli_ufficiali_motivi_id_seq'::regclass);


--
-- TOC entry 6040 (class 2604 OID 19104)
-- Name: giornate_ispettive_per_conto_di id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.giornate_ispettive_per_conto_di ALTER COLUMN id SET DEFAULT nextval('public.controlli_per_conto_di_id_seq'::regclass);


--
-- TOC entry 6082 (class 2604 OID 19105)
-- Name: giornate_ispettive_tipi_verifica id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.giornate_ispettive_tipi_verifica ALTER COLUMN id SET DEFAULT nextval('public.controlli_ufficiali_tipi_verifica_id_seq'::regclass);


--
-- TOC entry 6085 (class 2604 OID 19106)
-- Name: giornate_ispettive_verbali_protocolli id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.giornate_ispettive_verbali_protocolli ALTER COLUMN id SET DEFAULT nextval('public.controlli_ufficiali_verbali_protocolli_id_seq'::regclass);


--
-- TOC entry 6160 (class 2604 OID 19107)
-- Name: gisa_storico_operazioni_utenti id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.gisa_storico_operazioni_utenti ALTER COLUMN id SET DEFAULT nextval('public.gisa_storico_operazioni_utenti_id_seq'::regclass);


--
-- TOC entry 6161 (class 2604 OID 19108)
-- Name: gruppi_template_no_scia id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.gruppi_template_no_scia ALTER COLUMN id SET DEFAULT nextval('public.gruppi_template_no_scia_id_seq'::regclass);


--
-- TOC entry 6162 (class 2604 OID 19109)
-- Name: guru_log id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.guru_log ALTER COLUMN id SET DEFAULT nextval('public.vdaccess_log_id_seq'::regclass);


--
-- TOC entry 5853 (class 2604 OID 19110)
-- Name: import_aia id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.import_aia ALTER COLUMN id SET DEFAULT nextval('public.import_aia_id_seq'::regclass);


--
-- TOC entry 6164 (class 2604 OID 19111)
-- Name: import_aia_anagrafiche id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.import_aia_anagrafiche ALTER COLUMN id SET DEFAULT nextval('public.import_aia_anagrafiche_id_seq'::regclass);


--
-- TOC entry 6165 (class 2604 OID 19112)
-- Name: iter_cartografie id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.iter_cartografie ALTER COLUMN id SET DEFAULT nextval('public.iter_cartografie_id_seq'::regclass);


--
-- TOC entry 6169 (class 2604 OID 19113)
-- Name: la_imprese_linee_attivita id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.la_imprese_linee_attivita ALTER COLUMN id SET DEFAULT nextval('public.la_imprese_linee_attivita_id_seq'::regclass);


--
-- TOC entry 6175 (class 2604 OID 19114)
-- Name: la_linee_attivita id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.la_linee_attivita ALTER COLUMN id SET DEFAULT nextval('public.la_linee_attivita_id_seq'::regclass);


--
-- TOC entry 6176 (class 2604 OID 19115)
-- Name: la_rel_ateco_attivita id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.la_rel_ateco_attivita ALTER COLUMN id SET DEFAULT nextval('public.la_rel_ateco_attivita_id_seq'::regclass);


--
-- TOC entry 6177 (class 2604 OID 19116)
-- Name: laboratori_haccp_controllati id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.laboratori_haccp_controllati ALTER COLUMN id SET DEFAULT nextval('public.laboratori_haccp_controllati_id_seq'::regclass);


--
-- TOC entry 6179 (class 2604 OID 19117)
-- Name: linee_mobili_html_fields id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.linee_mobili_html_fields ALTER COLUMN id SET DEFAULT nextval('public.linee_mobili_html_fields_id_seq'::regclass);


--
-- TOC entry 6185 (class 2604 OID 19118)
-- Name: lista_controlli_ufficiali id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lista_controlli_ufficiali ALTER COLUMN id SET DEFAULT nextval('public.lista_controlli_ufficiali_id_seq'::regclass);


--
-- TOC entry 6186 (class 2604 OID 19119)
-- Name: lock_action id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lock_action ALTER COLUMN id SET DEFAULT nextval('public.lock_action_id_seq'::regclass);


--
-- TOC entry 6580 (class 2604 OID 21548)
-- Name: log_chiamate_get_documenti_sicra id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.log_chiamate_get_documenti_sicra ALTER COLUMN id SET DEFAULT nextval('public.log_chiamate_get_documenti_sicra_id_seq'::regclass);


--
-- TOC entry 6187 (class 2604 OID 19120)
-- Name: log_import_aia id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.log_import_aia ALTER COLUMN id SET DEFAULT nextval('public.log_import_aia_id_seq'::regclass);


--
-- TOC entry 6189 (class 2604 OID 19121)
-- Name: log_import_gisa_remoto id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.log_import_gisa_remoto ALTER COLUMN id SET DEFAULT nextval('public.log_import_gisa_remoto_id_seq'::regclass);


--
-- TOC entry 6191 (class 2604 OID 19122)
-- Name: lookup_access_types code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_access_types ALTER COLUMN code SET DEFAULT nextval('public.lookup_access_types_code_seq'::regclass);


--
-- TOC entry 6194 (class 2604 OID 19123)
-- Name: lookup_account_size code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_account_size ALTER COLUMN code SET DEFAULT nextval('public.lookup_account_size_code_seq'::regclass);


--
-- TOC entry 6198 (class 2604 OID 19124)
-- Name: lookup_articoli_azioni code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_articoli_azioni ALTER COLUMN code SET DEFAULT nextval('public.lookup_articoli_azioni_code_seq'::regclass);


--
-- TOC entry 6055 (class 2604 OID 19125)
-- Name: lookup_audit_tipo code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_audit_tipo ALTER COLUMN code SET DEFAULT nextval('public.lookup_audit_tipo_code_seq'::regclass);


--
-- TOC entry 6202 (class 2604 OID 19126)
-- Name: lookup_autorizzazione_tipo code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_autorizzazione_tipo ALTER COLUMN code SET DEFAULT nextval('public.lookup_autorizzazione_tipo_code_seq'::regclass);


--
-- TOC entry 6206 (class 2604 OID 19127)
-- Name: lookup_azioni_adottate code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_azioni_adottate ALTER COLUMN code SET DEFAULT nextval('public.lookup_azioni_adottate_code_seq'::regclass);


--
-- TOC entry 6059 (class 2604 OID 19128)
-- Name: lookup_bpi code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_bpi ALTER COLUMN code SET DEFAULT nextval('public.lookup_bpi_code_seq'::regclass);


--
-- TOC entry 6210 (class 2604 OID 19129)
-- Name: lookup_categoria_specie_allevata code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_categoria_specie_allevata ALTER COLUMN code SET DEFAULT nextval('public.lookup_categoria_specie_allevata_code_seq'::regclass);


--
-- TOC entry 6221 (class 2604 OID 19130)
-- Name: lookup_codistat code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_codistat ALTER COLUMN code SET DEFAULT nextval('public.lookup_codistat_code_seq'::regclass);


--
-- TOC entry 6225 (class 2604 OID 19131)
-- Name: lookup_condizionalita code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_condizionalita ALTER COLUMN code SET DEFAULT nextval('public.lookup_condizionalita_code_seq'::regclass);


--
-- TOC entry 6229 (class 2604 OID 19132)
-- Name: lookup_contact_source code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_contact_source ALTER COLUMN code SET DEFAULT nextval('public.lookup_contact_source_code_seq'::regclass);


--
-- TOC entry 6233 (class 2604 OID 19133)
-- Name: lookup_contactemail_types code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_contactemail_types ALTER COLUMN code SET DEFAULT nextval('public.lookup_contactemail_types_code_seq'::regclass);


--
-- TOC entry 5827 (class 2604 OID 19134)
-- Name: lookup_destinazione_campione code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_destinazione_campione ALTER COLUMN code SET DEFAULT nextval('public.lookup_destinazione_campione_code_seq'::regclass);


--
-- TOC entry 6237 (class 2604 OID 19135)
-- Name: lookup_destinazione_distribuzione code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_destinazione_distribuzione ALTER COLUMN code SET DEFAULT nextval('public.lookup_destinazione_distribuzione_code_seq'::regclass);


--
-- TOC entry 6241 (class 2604 OID 19136)
-- Name: lookup_distribuzione_partita code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_distribuzione_partita ALTER COLUMN code SET DEFAULT nextval('public.lookup_distribuzione_partita_code_seq'::regclass);


--
-- TOC entry 6245 (class 2604 OID 19137)
-- Name: lookup_email_model code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_email_model ALTER COLUMN code SET DEFAULT nextval('public.lookup_email_model_code_seq'::regclass);


--
-- TOC entry 6248 (class 2604 OID 19138)
-- Name: lookup_esami code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_esami ALTER COLUMN code SET DEFAULT nextval('public.lookup_esami_code_seq'::regclass);


--
-- TOC entry 6255 (class 2604 OID 19139)
-- Name: lookup_esito_campione code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_esito_campione ALTER COLUMN code SET DEFAULT nextval('public.lookup_esito_campione_code_seq'::regclass);


--
-- TOC entry 6259 (class 2604 OID 19140)
-- Name: lookup_esito_controllo code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_esito_controllo ALTER COLUMN code SET DEFAULT nextval('public.lookup_esito_controllo_code_seq'::regclass);


--
-- TOC entry 6266 (class 2604 OID 19141)
-- Name: lookup_gruppo_ruoli code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_gruppo_ruoli ALTER COLUMN code SET DEFAULT nextval('public.lookup_gruppo_ruoli_code_seq'::regclass);


--
-- TOC entry 6063 (class 2604 OID 19142)
-- Name: lookup_haccp code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_haccp ALTER COLUMN code SET DEFAULT nextval('public.lookup_haccp_code_seq'::regclass);


--
-- TOC entry 6267 (class 2604 OID 19143)
-- Name: lookup_ispezione code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_ispezione ALTER COLUMN code SET DEFAULT nextval('public.lookup_ispezione_2_code_seq'::regclass);


--
-- TOC entry 6274 (class 2604 OID 19144)
-- Name: lookup_matrice_controlli code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_matrice_controlli ALTER COLUMN code SET DEFAULT nextval('public.lookup_matrice_controlli_code_seq'::regclass);


--
-- TOC entry 6278 (class 2604 OID 19145)
-- Name: lookup_messaggio_soggetto code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_messaggio_soggetto ALTER COLUMN code SET DEFAULT nextval('public.lookup_messaggio_soggetto_code_seq'::regclass);


--
-- TOC entry 6282 (class 2604 OID 19146)
-- Name: lookup_messaggio_tipo code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_messaggio_tipo ALTER COLUMN code SET DEFAULT nextval('public.lookup_messaggio_tipo_code_seq'::regclass);


--
-- TOC entry 6286 (class 2604 OID 19147)
-- Name: lookup_motivi code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_motivi ALTER COLUMN code SET DEFAULT nextval('public.lookup_motivi_code_seq'::regclass);


--
-- TOC entry 6290 (class 2604 OID 19148)
-- Name: lookup_nazioni_ code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_nazioni_ ALTER COLUMN code SET DEFAULT nextval('public.lookup_nazioni_code_seq'::regclass);


--
-- TOC entry 6294 (class 2604 OID 19149)
-- Name: lookup_nucleo_ispettivo code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_nucleo_ispettivo ALTER COLUMN code SET DEFAULT nextval('public.lookup_nucleo_ispettivo_code_seq'::regclass);


--
-- TOC entry 6298 (class 2604 OID 19150)
-- Name: lookup_oggetto_audit code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_oggetto_audit ALTER COLUMN code SET DEFAULT nextval('public.lookup_oggetto_audit_code_seq'::regclass);


--
-- TOC entry 6302 (class 2604 OID 19151)
-- Name: lookup_opportunity_budget code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_opportunity_budget ALTER COLUMN code SET DEFAULT nextval('public.lookup_opportunity_budget_code_seq'::regclass);


--
-- TOC entry 5912 (class 2604 OID 19152)
-- Name: lookup_opu_tipo_impresa code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_opu_tipo_impresa ALTER COLUMN code SET DEFAULT nextval('public.lookup_opu_tipo_impresa_code_seq'::regclass);


--
-- TOC entry 5917 (class 2604 OID 19153)
-- Name: lookup_opu_tipo_impresa_societa code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_opu_tipo_impresa_societa ALTER COLUMN code SET DEFAULT nextval('public.lookup_opu_tipo_impresa_societa_code_seq'::regclass);


--
-- TOC entry 5831 (class 2604 OID 19154)
-- Name: lookup_org_catrischio code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_org_catrischio ALTER COLUMN code SET DEFAULT nextval('public.lookup_org_catrischio_code_seq'::regclass);


--
-- TOC entry 6306 (class 2604 OID 19155)
-- Name: lookup_orgaddress_types code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_orgaddress_types ALTER COLUMN code SET DEFAULT nextval('public.lookup_orgaddress_types_code_seq'::regclass);


--
-- TOC entry 6310 (class 2604 OID 19156)
-- Name: lookup_orientamento_produttivo code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_orientamento_produttivo ALTER COLUMN code SET DEFAULT nextval('public.lookup_orientamento_produttivo_code_seq'::regclass);


--
-- TOC entry 6313 (class 2604 OID 19157)
-- Name: lookup_piano_monitoraggio_ code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_piano_monitoraggio_ ALTER COLUMN code SET DEFAULT nextval('public.lookup_piano_monitoraggio_code_seq'::regclass);


--
-- TOC entry 6322 (class 2604 OID 19158)
-- Name: lookup_processo_depurativo code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_processo_depurativo ALTER COLUMN code SET DEFAULT nextval('public.lookup_processo_depurativo_code_seq'::regclass);


--
-- TOC entry 5921 (class 2604 OID 19159)
-- Name: lookup_province code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_province ALTER COLUMN code SET DEFAULT nextval('public.lookup_province_code_seq'::regclass);


--
-- TOC entry 6325 (class 2604 OID 19160)
-- Name: lookup_provvedimenti code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_provvedimenti ALTER COLUMN code SET DEFAULT nextval('public.lookup_provvedimenti_code_seq'::regclass);


--
-- TOC entry 6110 (class 2604 OID 19161)
-- Name: lookup_site_id code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_site_id ALTER COLUMN code SET DEFAULT nextval('public.lookup_site_id_code_seq'::regclass);


--
-- TOC entry 6329 (class 2604 OID 19162)
-- Name: lookup_specie_allevata code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_specie_allevata ALTER COLUMN code SET DEFAULT nextval('public.lookup_specie_allevata_code_seq'::regclass);


--
-- TOC entry 6333 (class 2604 OID 19163)
-- Name: lookup_specie_trasportata code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_specie_trasportata ALTER COLUMN code SET DEFAULT nextval('public.lookup_specie_trasportata_code_seq'::regclass);


--
-- TOC entry 6337 (class 2604 OID 19164)
-- Name: lookup_stato_attivita_sintesis code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_stato_attivita_sintesis ALTER COLUMN code SET DEFAULT nextval('public.lookup_stato_attivita_sintesis_code_seq'::regclass);


--
-- TOC entry 6340 (class 2604 OID 19165)
-- Name: lookup_stato_cu code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_stato_cu ALTER COLUMN code SET DEFAULT nextval('public.lookup_stato_cu_code_seq'::regclass);


--
-- TOC entry 6344 (class 2604 OID 19166)
-- Name: lookup_stato_fascicolo code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_stato_fascicolo ALTER COLUMN code SET DEFAULT nextval('public.lookup_stato_fascicolo_code_seq'::regclass);


--
-- TOC entry 6348 (class 2604 OID 19167)
-- Name: lookup_stato_impianto_acque_reflue code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_stato_impianto_acque_reflue ALTER COLUMN code SET DEFAULT nextval('public.lookup_stato_impianto_acque_reflue_code_seq'::regclass);


--
-- TOC entry 6351 (class 2604 OID 19168)
-- Name: lookup_stato_lab code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_stato_lab ALTER COLUMN code SET DEFAULT nextval('public.lookup_stato_lab_code_seq'::regclass);


--
-- TOC entry 6355 (class 2604 OID 19169)
-- Name: lookup_stato_stabilimento_sintesis code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_stato_stabilimento_sintesis ALTER COLUMN code SET DEFAULT nextval('public.lookup_stato_stabilimento_sintesis_code_seq'::regclass);


--
-- TOC entry 6358 (class 2604 OID 19170)
-- Name: lookup_tipi_verifica code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_tipi_verifica ALTER COLUMN code SET DEFAULT nextval('public.lookup_tipi_verifica_code_seq'::regclass);


--
-- TOC entry 6363 (class 2604 OID 19171)
-- Name: lookup_tipo_attivita code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_tipo_attivita ALTER COLUMN code SET DEFAULT nextval('public.lookup_tipo_attivita_code_seq'::regclass);


--
-- TOC entry 6067 (class 2604 OID 19172)
-- Name: lookup_tipo_audit code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_tipo_audit ALTER COLUMN code SET DEFAULT nextval('public.lookup_tipo_audit_code_seq'::regclass);


--
-- TOC entry 6367 (class 2604 OID 19173)
-- Name: lookup_tipo_controllo code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_tipo_controllo ALTER COLUMN code SET DEFAULT nextval('public.lookup_tipo_controllo_code_seq'::regclass);


--
-- TOC entry 6373 (class 2604 OID 19174)
-- Name: lookup_tipo_ispezione_ code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_tipo_ispezione_ ALTER COLUMN code SET DEFAULT nextval('public.lookup_tipo_ispezione_2_code_seq'::regclass);


--
-- TOC entry 6377 (class 2604 OID 19175)
-- Name: lookup_tipo_modulo_sviluppo code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_tipo_modulo_sviluppo ALTER COLUMN code SET DEFAULT nextval('public.lookup_tipo_modulo_sviluppo_code_seq'::regclass);


--
-- TOC entry 6379 (class 2604 OID 19176)
-- Name: lookup_tipo_ricerca_anagrafica code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_tipo_ricerca_anagrafica ALTER COLUMN code SET DEFAULT nextval('public.lookup_tipo_ricerca_anagrafica_code_seq'::regclass);


--
-- TOC entry 6380 (class 2604 OID 19177)
-- Name: lookup_tipo_scheda_operatore code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_tipo_scheda_operatore ALTER COLUMN code SET DEFAULT nextval('public.lookup_tipo_scheda_operatore_code_seq1'::regclass);


--
-- TOC entry 6385 (class 2604 OID 19178)
-- Name: lookup_tipologia_cu_e_sottoattivita code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_tipologia_cu_e_sottoattivita ALTER COLUMN code SET DEFAULT nextval('public.lookup_tipologia_cu_e_sottoattivita_code_seq'::regclass);


--
-- TOC entry 6389 (class 2604 OID 19179)
-- Name: lookup_tipologia_nodo_oia code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_tipologia_nodo_oia ALTER COLUMN code SET DEFAULT nextval('public.lookup_tipologia_nodo_oia_code_seq'::regclass);


--
-- TOC entry 6393 (class 2604 OID 19180)
-- Name: lookup_tipologia_operatore code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_tipologia_operatore ALTER COLUMN code SET DEFAULT nextval('public.lookup_tipologia_operatore_code_seq'::regclass);


--
-- TOC entry 6397 (class 2604 OID 19181)
-- Name: lookup_tipologia_scia code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_tipologia_scia ALTER COLUMN code SET DEFAULT nextval('public.lookup_tipologia_scia_code_seq'::regclass);


--
-- TOC entry 6399 (class 2604 OID 19182)
-- Name: lookup_tipologia_struttura code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_tipologia_struttura ALTER COLUMN code SET DEFAULT nextval('public.lookup_tipologia_struttura_code_seq'::regclass);


--
-- TOC entry 5925 (class 2604 OID 19183)
-- Name: lookup_toponimi code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_toponimi ALTER COLUMN code SET DEFAULT nextval('public.lookup_toponimi_code_seq'::regclass);


--
-- TOC entry 6402 (class 2604 OID 19184)
-- Name: master_list_aggregazione id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.master_list_aggregazione ALTER COLUMN id SET DEFAULT nextval('public.master_list_aggregazione_id_seq'::regclass);


--
-- TOC entry 6403 (class 2604 OID 19185)
-- Name: master_list_flag_linee_attivita id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.master_list_flag_linee_attivita ALTER COLUMN id SET DEFAULT nextval('public.master_list_flag_linee_attivita_id_seq'::regclass);


--
-- TOC entry 6405 (class 2604 OID 19186)
-- Name: master_list_linea_attivita id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.master_list_linea_attivita ALTER COLUMN id SET DEFAULT nextval('public.master_list_linea_attivita_id_seq'::regclass);


--
-- TOC entry 6407 (class 2604 OID 19187)
-- Name: master_list_macroarea id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.master_list_macroarea ALTER COLUMN id SET DEFAULT nextval('public.master_list_macroarea_id_seq'::regclass);


--
-- TOC entry 6408 (class 2604 OID 19188)
-- Name: master_list_sk_elenco id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.master_list_sk_elenco ALTER COLUMN id SET DEFAULT nextval('public.master_list_sk_elenco_id_seq'::regclass);


--
-- TOC entry 5838 (class 2604 OID 19189)
-- Name: matrici matrice_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.matrici ALTER COLUMN matrice_id SET DEFAULT nextval('public.matrici_new_matrice_id_seq'::regclass);


--
-- TOC entry 6415 (class 2604 OID 19190)
-- Name: matrici_campioni id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.matrici_campioni ALTER COLUMN id SET DEFAULT nextval('public.matrici_campioni_id_seq'::regclass);


--
-- TOC entry 6416 (class 2604 OID 19191)
-- Name: messaggi_interni id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.messaggi_interni ALTER COLUMN id SET DEFAULT nextval('public.messaggi_interni_id_seq'::regclass);


--
-- TOC entry 6424 (class 2604 OID 19192)
-- Name: messaggio_mod4 id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.messaggio_mod4 ALTER COLUMN id SET DEFAULT nextval('public.messaggio_mod4_id_seq'::regclass);


--
-- TOC entry 6426 (class 2604 OID 19193)
-- Name: ml8_master_list id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ml8_master_list ALTER COLUMN id SET DEFAULT nextval('public.ml8_master_list_id_seq'::regclass);


--
-- TOC entry 6430 (class 2604 OID 19194)
-- Name: ml_partizioni code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ml_partizioni ALTER COLUMN code SET DEFAULT nextval('public.ml_partizioni_code_seq'::regclass);


--
-- TOC entry 6432 (class 2604 OID 19195)
-- Name: non_conformita id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.non_conformita ALTER COLUMN id SET DEFAULT nextval('public.non_conformita_id_seq'::regclass);


--
-- TOC entry 6435 (class 2604 OID 19196)
-- Name: operatori_associati_mercato_ittico id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.operatori_associati_mercato_ittico ALTER COLUMN id SET DEFAULT nextval('public.operatori_associati_mercato_ittico_id_seq'::regclass);


--
-- TOC entry 5929 (class 2604 OID 19197)
-- Name: opu_indirizzo id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.opu_indirizzo ALTER COLUMN id SET DEFAULT nextval('public.opu_indirizzo_id_seq'::regclass);


--
-- TOC entry 6440 (class 2604 OID 19198)
-- Name: opu_insert_log id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.opu_insert_log ALTER COLUMN id SET DEFAULT nextval('public.opu_insert_log_id_seq'::regclass);


--
-- TOC entry 6411 (class 2604 OID 19199)
-- Name: opu_lookup_norme_master_list code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.opu_lookup_norme_master_list ALTER COLUMN code SET DEFAULT nextval('public.opu_lookup_norme_master_list_code_seq'::regclass);


--
-- TOC entry 6444 (class 2604 OID 19200)
-- Name: opu_lookup_norme_master_list_rel_tipologia_organzation id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.opu_lookup_norme_master_list_rel_tipologia_organzation ALTER COLUMN id SET DEFAULT nextval('public.opu_lookup_norme_master_list_rel_tipologia_organzation_id_seq'::regclass);


--
-- TOC entry 6445 (class 2604 OID 19201)
-- Name: opu_lookup_stato_ruolo_soggetto code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.opu_lookup_stato_ruolo_soggetto ALTER COLUMN code SET DEFAULT nextval('public.opu_lookup_stato_ruolo_soggetto_code_seq'::regclass);


--
-- TOC entry 5931 (class 2604 OID 19202)
-- Name: opu_lookup_tipologia_attivita code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.opu_lookup_tipologia_attivita ALTER COLUMN code SET DEFAULT nextval('public.opu_lookup_tipologia_attivita_code_seq'::regclass);


--
-- TOC entry 5937 (class 2604 OID 19203)
-- Name: opu_lookup_tipologia_carattere code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.opu_lookup_tipologia_carattere ALTER COLUMN code SET DEFAULT nextval('public.opu_lookup_tipologia_carattere_code_seq'::regclass);


--
-- TOC entry 5943 (class 2604 OID 19204)
-- Name: opu_operatore id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.opu_operatore ALTER COLUMN id SET DEFAULT nextval('public.opu_operatore_id_seq'::regclass);


--
-- TOC entry 5945 (class 2604 OID 19205)
-- Name: opu_rel_operatore_soggetto_fisico id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.opu_rel_operatore_soggetto_fisico ALTER COLUMN id SET DEFAULT nextval('public.opu_rel_operatore_soggetto_fisico_id_seq'::regclass);


--
-- TOC entry 6441 (class 2604 OID 19206)
-- Name: opu_relazione_stabilimento_linee_produttive id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.opu_relazione_stabilimento_linee_produttive ALTER COLUMN id SET DEFAULT nextval('public.opu_relazione_stabilimento_linee_produttive_id_seq'::regclass);


--
-- TOC entry 5946 (class 2604 OID 19207)
-- Name: opu_soggetto_fisico id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.opu_soggetto_fisico ALTER COLUMN id SET DEFAULT nextval('public.opu_soggetto_fisico_id_seq'::regclass);


--
-- TOC entry 6449 (class 2604 OID 19208)
-- Name: opu_soggetto_fisico_storico id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.opu_soggetto_fisico_storico ALTER COLUMN id SET DEFAULT nextval('public.opu_soggetto_fisico_storico_id_seq'::regclass);


--
-- TOC entry 5948 (class 2604 OID 19209)
-- Name: opu_stabilimento id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.opu_stabilimento ALTER COLUMN id SET DEFAULT nextval('public.opu_stabilimento_id_seq'::regclass);


--
-- TOC entry 6450 (class 2604 OID 19210)
-- Name: organization org_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.organization ALTER COLUMN org_id SET DEFAULT nextval('public.organization_org_id_seq'::regclass);


--
-- TOC entry 6466 (class 2604 OID 19211)
-- Name: organization_address address_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.organization_address ALTER COLUMN address_id SET DEFAULT nextval('public.organization_address_address_id_seq'::regclass);


--
-- TOC entry 6474 (class 2604 OID 19212)
-- Name: permission permission_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.permission ALTER COLUMN permission_id SET DEFAULT nextval('public.permission_permission_id_seq'::regclass);


--
-- TOC entry 6484 (class 2604 OID 19213)
-- Name: permission_category category_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.permission_category ALTER COLUMN category_id SET DEFAULT nextval('public.permission_category_category_id_seq'::regclass);


--
-- TOC entry 6499 (class 2604 OID 19214)
-- Name: post_it id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.post_it ALTER COLUMN id SET DEFAULT nextval('public.post_it_id_seq'::regclass);


--
-- TOC entry 6501 (class 2604 OID 19215)
-- Name: programmi_campionamento_categorie_merceologiche id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.programmi_campionamento_categorie_merceologiche ALTER COLUMN id SET DEFAULT nextval('public.programmi_campionamento_categorie_merceologiche_id_seq'::regclass);


--
-- TOC entry 6502 (class 2604 OID 19216)
-- Name: rel_checklist_sorv_ml id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rel_checklist_sorv_ml ALTER COLUMN id SET DEFAULT nextval('public.rel_checklist_sorv_ml_id_seq'::regclass);


--
-- TOC entry 6504 (class 2604 OID 19217)
-- Name: rel_gruppo_ruoli code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rel_gruppo_ruoli ALTER COLUMN code SET DEFAULT nextval('public.rel_gruppo_ruoli_code_seq'::regclass);


--
-- TOC entry 6120 (class 2604 OID 19218)
-- Name: role role_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.role ALTER COLUMN role_id SET DEFAULT nextval('public.role_role_id_seq'::regclass);


--
-- TOC entry 6132 (class 2604 OID 19219)
-- Name: role_ext role_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.role_ext ALTER COLUMN role_id SET DEFAULT nextval('public.role_ext_role_id_seq'::regclass);


--
-- TOC entry 6505 (class 2604 OID 19220)
-- Name: role_permission id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.role_permission ALTER COLUMN id SET DEFAULT nextval('public.role_permission_id_seq'::regclass);


--
-- TOC entry 6510 (class 2604 OID 19221)
-- Name: salvataggio_nc_note id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.salvataggio_nc_note ALTER COLUMN id SET DEFAULT nextval('public.salvataggio_nc_note_id_seq'::regclass);


--
-- TOC entry 6512 (class 2604 OID 19222)
-- Name: scheda_operatore_metadati id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.scheda_operatore_metadati ALTER COLUMN id SET DEFAULT nextval('public.scheda_operatore_metadati_id_seq1'::regclass);


--
-- TOC entry 6517 (class 2604 OID 19223)
-- Name: schema_anagrafica id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.schema_anagrafica ALTER COLUMN id SET DEFAULT nextval('public.schema_anagrafica_id_seq'::regclass);


--
-- TOC entry 6520 (class 2604 OID 19224)
-- Name: sintesis_automezzi id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_automezzi ALTER COLUMN id SET DEFAULT nextval('public.sintesis_automezzi_id_seq'::regclass);


--
-- TOC entry 6522 (class 2604 OID 19225)
-- Name: sintesis_indirizzo id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_indirizzo ALTER COLUMN id SET DEFAULT nextval('public.sintesis_indirizzo_id_seq'::regclass);


--
-- TOC entry 6531 (class 2604 OID 19226)
-- Name: sintesis_operatore id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_operatore ALTER COLUMN id SET DEFAULT nextval('public.sintesis_operatore_id_seq'::regclass);


--
-- TOC entry 6533 (class 2604 OID 19227)
-- Name: sintesis_operatori_mercato id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_operatori_mercato ALTER COLUMN id SET DEFAULT nextval('public.sintesis_operatori_mercato_id_seq'::regclass);


--
-- TOC entry 6535 (class 2604 OID 19228)
-- Name: sintesis_prodotti id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_prodotti ALTER COLUMN id SET DEFAULT nextval('public.sintesis_prodotti_id_seq'::regclass);


--
-- TOC entry 6537 (class 2604 OID 19229)
-- Name: sintesis_rel_operatore_soggetto_fisico id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_rel_operatore_soggetto_fisico ALTER COLUMN id SET DEFAULT nextval('public.sintesis_rel_operatore_soggetto_fisico_id_seq'::regclass);


--
-- TOC entry 6524 (class 2604 OID 19230)
-- Name: sintesis_relazione_stabilimento_linee_produttive id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_relazione_stabilimento_linee_produttive ALTER COLUMN id SET DEFAULT nextval('public.sintesis_relazione_stabilimento_linee_produttive_id_seq'::regclass);


--
-- TOC entry 6539 (class 2604 OID 19231)
-- Name: sintesis_soggetto_fisico id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_soggetto_fisico ALTER COLUMN id SET DEFAULT nextval('public.sintesis_soggetto_fisico_id_seq'::regclass);


--
-- TOC entry 6542 (class 2604 OID 19232)
-- Name: sintesis_stabilimenti_import id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_stabilimenti_import ALTER COLUMN id SET DEFAULT nextval('public.sintesis_stabilimenti_import_id_seq'::regclass);


--
-- TOC entry 6544 (class 2604 OID 19233)
-- Name: sintesis_stabilimenti_import_log id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_stabilimenti_import_log ALTER COLUMN id SET DEFAULT nextval('public.sintesis_stabilimenti_import_log_id_seq'::regclass);


--
-- TOC entry 6528 (class 2604 OID 19234)
-- Name: sintesis_stabilimento id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_stabilimento ALTER COLUMN id SET DEFAULT nextval('public.sintesis_stabilimento_id_seq'::regclass);


--
-- TOC entry 6545 (class 2604 OID 19235)
-- Name: sintesis_storico_operatore id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_storico_operatore ALTER COLUMN id SET DEFAULT nextval('public.sintesis_storico_operatore_id_seq'::regclass);


--
-- TOC entry 6546 (class 2604 OID 19236)
-- Name: sintesis_storico_relazione_stabilimento_linee_produttive id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_storico_relazione_stabilimento_linee_produttive ALTER COLUMN id SET DEFAULT nextval('public.sintesis_storico_relazione_stabilimento_linee_produttive_id_seq'::regclass);


--
-- TOC entry 6547 (class 2604 OID 19237)
-- Name: sintesis_storico_soggetto_fisico id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_storico_soggetto_fisico ALTER COLUMN id SET DEFAULT nextval('public.sintesis_storico_soggetto_fisico_id_seq'::regclass);


--
-- TOC entry 6548 (class 2604 OID 19238)
-- Name: sintesis_storico_stabilimento id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_storico_stabilimento ALTER COLUMN id SET DEFAULT nextval('public.sintesis_storico_stabilimento_id_seq'::regclass);


--
-- TOC entry 6549 (class 2604 OID 19239)
-- Name: sintesis_workflow_attivita id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_workflow_attivita ALTER COLUMN id SET DEFAULT nextval('public.sintesis_workflow_attivita_id_seq'::regclass);


--
-- TOC entry 6550 (class 2604 OID 19240)
-- Name: sintesis_workflow_stabilimento id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_workflow_stabilimento ALTER COLUMN id SET DEFAULT nextval('public.sintesis_workflow_stabilimento_id_seq'::regclass);


--
-- TOC entry 6114 (class 2604 OID 19241)
-- Name: strutture_asl id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.strutture_asl ALTER COLUMN id SET DEFAULT nextval('public.strutture_asl_id_seq'::regclass);


--
-- TOC entry 6557 (class 2604 OID 19242)
-- Name: suap_ric_scia_operatore id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.suap_ric_scia_operatore ALTER COLUMN id SET DEFAULT nextval('public.suap_ric_scia_operatore_id_seq'::regclass);


--
-- TOC entry 6552 (class 2604 OID 19243)
-- Name: suap_ric_scia_relazione_stabilimento_linee_produttive id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.suap_ric_scia_relazione_stabilimento_linee_produttive ALTER COLUMN id SET DEFAULT nextval('public.suap_ric_scia_relazione_stabilimento_linee_produttive_id_seq'::regclass);


--
-- TOC entry 6554 (class 2604 OID 19244)
-- Name: suap_ric_scia_stabilimento id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.suap_ric_scia_stabilimento ALTER COLUMN id SET DEFAULT nextval('public.suap_ric_scia_stabilimento_id_seq'::regclass);


--
-- TOC entry 6560 (class 2604 OID 19245)
-- Name: sviluppo_flussi id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sviluppo_flussi ALTER COLUMN id SET DEFAULT nextval('public.sviluppo_flussi_id_seq'::regclass);


--
-- TOC entry 6563 (class 2604 OID 19246)
-- Name: sviluppo_moduli id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sviluppo_moduli ALTER COLUMN id SET DEFAULT nextval('public.sviluppo_moduli_id_seq'::regclass);


--
-- TOC entry 6565 (class 2604 OID 19247)
-- Name: sviluppo_moduli_note id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sviluppo_moduli_note ALTER COLUMN id SET DEFAULT nextval('public.sviluppo_moduli_note_id_seq'::regclass);


--
-- TOC entry 6567 (class 2604 OID 19248)
-- Name: sviluppo_note_flusso id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sviluppo_note_flusso ALTER COLUMN id SET DEFAULT nextval('public.sviluppo_note_flusso_id_seq'::regclass);


--
-- TOC entry 6569 (class 2604 OID 19249)
-- Name: tb_accesslock id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tb_accesslock ALTER COLUMN id SET DEFAULT nextval('public.tb_accesslock_id_seq'::regclass);


--
-- TOC entry 6583 (class 2604 OID 21883)
-- Name: terreni_investigati id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.terreni_investigati ALTER COLUMN id SET DEFAULT nextval('public.terreni_investigati_id_seq'::regclass);


--
-- TOC entry 5847 (class 2604 OID 19250)
-- Name: ticket ticketid; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ticket ALTER COLUMN ticketid SET DEFAULT nextval('public.ticket_ticketid_seq'::regclass);


--
-- TOC entry 6572 (class 2604 OID 19251)
-- Name: tipocontrolloufficialeimprese id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tipocontrolloufficialeimprese ALTER COLUMN id SET DEFAULT nextval('public.tipocontrolloufficialeimprese_id_seq'::regclass);


--
-- TOC entry 6575 (class 2604 OID 19252)
-- Name: unita_operative_controllo id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.unita_operative_controllo ALTER COLUMN id SET DEFAULT nextval('public.unita_operative_controllo_id_seq'::regclass);


--
-- TOC entry 6576 (class 2604 OID 19253)
-- Name: whitelist_ip id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.whitelist_ip ALTER COLUMN id SET DEFAULT nextval('public.whitelist_ip_id_seq'::regclass);


--
-- TOC entry 6578 (class 2604 OID 19254)
-- Name: ws_storico_chiamate id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ws_storico_chiamate ALTER COLUMN id SET DEFAULT nextval('public.ws_storico_chiamate_id_seq'::regclass);


--
-- TOC entry 6596 (class 2606 OID 19766)
-- Name: associazione_preaccettazione_entita associazione_preaccettazione_entita_pkey; Type: CONSTRAINT; Schema: preaccettazione; Owner: postgres
--

ALTER TABLE ONLY preaccettazione.associazione_preaccettazione_entita
    ADD CONSTRAINT associazione_preaccettazione_entita_pkey PRIMARY KEY (id);


--
-- TOC entry 6599 (class 2606 OID 19768)
-- Name: codici_preaccettazione codici_preaccettazione_pkey; Type: CONSTRAINT; Schema: preaccettazione; Owner: postgres
--

ALTER TABLE ONLY preaccettazione.codici_preaccettazione
    ADD CONSTRAINT codici_preaccettazione_pkey PRIMARY KEY (id);


--
-- TOC entry 6602 (class 2606 OID 19770)
-- Name: lookup_stati_pa lookup_stati_pa_pkey; Type: CONSTRAINT; Schema: preaccettazione; Owner: postgres
--

ALTER TABLE ONLY preaccettazione.lookup_stati_pa
    ADD CONSTRAINT lookup_stati_pa_pkey PRIMARY KEY (id);


--
-- TOC entry 6604 (class 2606 OID 19772)
-- Name: stati_preaccettazione stati_preaccettazione_pkey; Type: CONSTRAINT; Schema: preaccettazione; Owner: postgres
--

ALTER TABLE ONLY preaccettazione.stati_preaccettazione
    ADD CONSTRAINT stati_preaccettazione_pkey PRIMARY KEY (id);


--
-- TOC entry 6630 (class 2606 OID 19774)
-- Name: access_dati access_dati_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.access_dati
    ADD CONSTRAINT access_dati_pkey PRIMARY KEY (user_dati_id);


--
-- TOC entry 6632 (class 2606 OID 19776)
-- Name: access_ext_ access_ext_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.access_ext_
    ADD CONSTRAINT access_ext_pkey PRIMARY KEY (user_id);


--
-- TOC entry 6627 (class 2606 OID 19778)
-- Name: access_ access_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.access_
    ADD CONSTRAINT access_pkey PRIMARY KEY (user_id);


--
-- TOC entry 6634 (class 2606 OID 19784)
-- Name: acquacoltura_dati_controlli_bdn acquacoltura_dati_controlli_bdn_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.acquacoltura_dati_controlli_bdn
    ADD CONSTRAINT acquacoltura_dati_controlli_bdn_pkey PRIMARY KEY (id);


--
-- TOC entry 6636 (class 2606 OID 19788)
-- Name: alt_partizioni alt_partizioni_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.alt_partizioni
    ADD CONSTRAINT alt_partizioni_pkey PRIMARY KEY (code);


--
-- TOC entry 6642 (class 2606 OID 19791)
-- Name: anagrafica_codice_sinvsa anagrafica_codice_sinvsa_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.anagrafica_codice_sinvsa
    ADD CONSTRAINT anagrafica_codice_sinvsa_pkey PRIMARY KEY (id);


--
-- TOC entry 6686 (class 2606 OID 19795)
-- Name: campione_analiti analiti_campioni_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.campione_analiti
    ADD CONSTRAINT analiti_campioni_pkey PRIMARY KEY (id);


--
-- TOC entry 6689 (class 2606 OID 19797)
-- Name: asset asset_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.asset
    ADD CONSTRAINT asset_pkey PRIMARY KEY (asset_id);


--
-- TOC entry 6693 (class 2606 OID 19799)
-- Name: audit_checklist audit_checklist_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.audit_checklist
    ADD CONSTRAINT audit_checklist_pkey PRIMARY KEY (checklist_id, audit_id, punti, stato);


--
-- TOC entry 6695 (class 2606 OID 19801)
-- Name: audit_checklist_type audit_checklist_type_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.audit_checklist_type
    ADD CONSTRAINT audit_checklist_type_pkey PRIMARY KEY (checklist_type_id, audit_id);


--
-- TOC entry 6691 (class 2606 OID 19805)
-- Name: audit audit_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.audit
    ADD CONSTRAINT audit_pkey PRIMARY KEY (id);


--
-- TOC entry 6698 (class 2606 OID 19808)
-- Name: aziende azienda_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.aziende
    ADD CONSTRAINT azienda_pk PRIMARY KEY (cod_azienda);


--
-- TOC entry 6700 (class 2606 OID 19812)
-- Name: aziendezootecniche_osm aziendezootecniche_osm_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.aziendezootecniche_osm
    ADD CONSTRAINT aziendezootecniche_osm_pk PRIMARY KEY (id);


--
-- TOC entry 6702 (class 2606 OID 19817)
-- Name: blacklist_ip blacklist_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blacklist_ip
    ADD CONSTRAINT blacklist_pkey PRIMARY KEY (id);


--
-- TOC entry 6704 (class 2606 OID 19819)
-- Name: blacklist_range_ip blacklist_range_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blacklist_range_ip
    ADD CONSTRAINT blacklist_range_pkey PRIMARY KEY (id);


--
-- TOC entry 6706 (class 2606 OID 19821)
-- Name: buffer buffer_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.buffer
    ADD CONSTRAINT buffer_pkey PRIMARY KEY (id);


--
-- TOC entry 6708 (class 2606 OID 19823)
-- Name: campioni_verbali_protocolli campioni_verbali_protocolli_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.campioni_verbali_protocolli
    ADD CONSTRAINT campioni_verbali_protocolli_pkey PRIMARY KEY (id);


--
-- TOC entry 6710 (class 2606 OID 19825)
-- Name: cfsinbox_message cfsinbox_message_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cfsinbox_message
    ADD CONSTRAINT cfsinbox_message_pkey PRIMARY KEY (id);


--
-- TOC entry 6712 (class 2606 OID 19836)
-- Name: checklist checklist_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.checklist
    ADD CONSTRAINT checklist_pkey PRIMARY KEY (id);


--
-- TOC entry 6714 (class 2606 OID 19840)
-- Name: checklist_type checklist_type_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.checklist_type
    ADD CONSTRAINT checklist_type_pkey PRIMARY KEY (code);


--
-- TOC entry 6720 (class 2606 OID 19843)
-- Name: chk_bns_mod_ist chk_bns_mod_ist_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.chk_bns_mod_ist
    ADD CONSTRAINT chk_bns_mod_ist_pkey PRIMARY KEY (id);


--
-- TOC entry 6724 (class 2606 OID 19845)
-- Name: chk_bns_risposte chk_bns_risposte_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.chk_bns_risposte
    ADD CONSTRAINT chk_bns_risposte_pkey PRIMARY KEY (id);


--
-- TOC entry 6923 (class 2606 OID 19847)
-- Name: master_list_flag_linee_attivita codice_univoco_unique; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.master_list_flag_linee_attivita
    ADD CONSTRAINT codice_univoco_unique UNIQUE (codice_univoco);


--
-- TOC entry 6726 (class 2606 OID 19849)
-- Name: codici_malattie_allevamenti codici_malattie_allevamenti_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.codici_malattie_allevamenti
    ADD CONSTRAINT codici_malattie_allevamenti_pkey PRIMARY KEY (description);


--
-- TOC entry 6728 (class 2606 OID 19852)
-- Name: codici_qualifica_sanitaria_allevamenti codici_qualifica_sanitaria_allevamenti_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.codici_qualifica_sanitaria_allevamenti
    ADD CONSTRAINT codici_qualifica_sanitaria_allevamenti_pkey PRIMARY KEY (code);


--
-- TOC entry 6645 (class 2606 OID 19854)
-- Name: comuni1 comuni1_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comuni1
    ADD CONSTRAINT comuni1_pkey PRIMARY KEY (id);


--
-- TOC entry 6730 (class 2606 OID 19856)
-- Name: configuratore_template_no_scia configuratore_template_noscia_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.configuratore_template_no_scia
    ADD CONSTRAINT configuratore_template_noscia_pkey PRIMARY KEY (id);


--
-- TOC entry 6742 (class 2606 OID 19858)
-- Name: contact_emailaddress contact_emailaddress_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contact_emailaddress
    ADD CONSTRAINT contact_emailaddress_pkey PRIMARY KEY (emailaddress_id);


--
-- TOC entry 6732 (class 2606 OID 19860)
-- Name: contact_ contact_employee_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contact_
    ADD CONSTRAINT contact_employee_id_key UNIQUE (employee_id);


--
-- TOC entry 6744 (class 2606 OID 19862)
-- Name: contact_ext_ contact_ext_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contact_ext_
    ADD CONSTRAINT contact_ext_pkey PRIMARY KEY (contact_id);


--
-- TOC entry 6737 (class 2606 OID 19864)
-- Name: contact_ contact_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contact_
    ADD CONSTRAINT contact_pkey PRIMARY KEY (contact_id);


--
-- TOC entry 6765 (class 2606 OID 19866)
-- Name: controlli_ufficiali_operatori_mercato controlli_ufficiali_operatori_mercato_ittico_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.controlli_ufficiali_operatori_mercato
    ADD CONSTRAINT controlli_ufficiali_operatori_mercato_ittico_pkey PRIMARY KEY (id);


--
-- TOC entry 6767 (class 2606 OID 19868)
-- Name: giornate_ispettive_verbali_protocolli controlli_ufficiali_verbali_protocolli_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.giornate_ispettive_verbali_protocolli
    ADD CONSTRAINT controlli_ufficiali_verbali_protocolli_pkey PRIMARY KEY (id);


--
-- TOC entry 6769 (class 2606 OID 19870)
-- Name: cu_fields_value cu_fields_value_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cu_fields_value
    ADD CONSTRAINT cu_fields_value_pkey PRIMARY KEY (id);


--
-- TOC entry 6771 (class 2606 OID 19872)
-- Name: cu_html_fields cu_html_fields_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cu_html_fields
    ADD CONSTRAINT cu_html_fields_pkey PRIMARY KEY (id);


--
-- TOC entry 6773 (class 2606 OID 19874)
-- Name: cu_motivi_operatori cu_motivi_operatori_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cu_motivi_operatori
    ADD CONSTRAINT cu_motivi_operatori_pkey PRIMARY KEY (id);


--
-- TOC entry 6813 (class 2606 OID 19876)
-- Name: giornata_ispettiva_gruppo_ispettivo cu_nucleo_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.giornata_ispettiva_gruppo_ispettivo
    ADD CONSTRAINT cu_nucleo_pkey PRIMARY KEY (id);


--
-- TOC entry 6775 (class 2606 OID 19878)
-- Name: cun_amr cun_amr_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cun_amr
    ADD CONSTRAINT cun_amr_pkey PRIMARY KEY (id);


--
-- TOC entry 6755 (class 2606 OID 19880)
-- Name: dpat_indicatore_new dpat_indicatore_new_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dpat_indicatore_new
    ADD CONSTRAINT dpat_indicatore_new_pkey PRIMARY KEY (id);


--
-- TOC entry 6757 (class 2606 OID 19882)
-- Name: dpat_piano_attivita_new dpat_piano_attivita_new_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dpat_piano_attivita_new
    ADD CONSTRAINT dpat_piano_attivita_new_pkey PRIMARY KEY (id);


--
-- TOC entry 6780 (class 2606 OID 19884)
-- Name: dpat_sez_new dpat_sez_new_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dpat_sez_new
    ADD CONSTRAINT dpat_sez_new_pkey PRIMARY KEY (id);


--
-- TOC entry 6782 (class 2606 OID 19886)
-- Name: dpat_strumento_calcolo dpat_strum_calc; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dpat_strumento_calcolo
    ADD CONSTRAINT dpat_strum_calc PRIMARY KEY (id);


--
-- TOC entry 6809 (class 2606 OID 19888)
-- Name: evento_blocco_controlli evento_blocco_controlli_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.evento_blocco_controlli
    ADD CONSTRAINT evento_blocco_controlli_pkey PRIMARY KEY (id);


--
-- TOC entry 6811 (class 2606 OID 19890)
-- Name: fascicoli_ispettivi_protocolli fascicoli_protocolli_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.fascicoli_ispettivi_protocolli
    ADD CONSTRAINT fascicoli_protocolli_pkey PRIMARY KEY (id);


--
-- TOC entry 7112 (class 2606 OID 21697)
-- Name: giornate_ispettive_allegati giornate_ispettive_allegati_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.giornate_ispettive_allegati
    ADD CONSTRAINT giornate_ispettive_allegati_pkey PRIMARY KEY (id);


--
-- TOC entry 6777 (class 2606 OID 19892)
-- Name: dpat id_dpat; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dpat
    ADD CONSTRAINT id_dpat PRIMARY KEY (id);


--
-- TOC entry 6624 (class 2606 OID 19894)
-- Name: OBSimport_aia import_aia_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."OBSimport_aia"
    ADD CONSTRAINT import_aia_pkey PRIMARY KEY (id);


--
-- TOC entry 6821 (class 2606 OID 19896)
-- Name: iter_cartografie iter_cartografie_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.iter_cartografie
    ADD CONSTRAINT iter_cartografie_pkey PRIMARY KEY (id);


--
-- TOC entry 6823 (class 2606 OID 19898)
-- Name: la_imprese_linee_attivita la_imprese_linee_attivita_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.la_imprese_linee_attivita
    ADD CONSTRAINT la_imprese_linee_attivita_pkey PRIMARY KEY (id);


--
-- TOC entry 6825 (class 2606 OID 19900)
-- Name: la_linee_attivita la_linee_attivita_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.la_linee_attivita
    ADD CONSTRAINT la_linee_attivita_pkey PRIMARY KEY (id);


--
-- TOC entry 6827 (class 2606 OID 19902)
-- Name: la_rel_ateco_attivita la_rel_ateco_attivita_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.la_rel_ateco_attivita
    ADD CONSTRAINT la_rel_ateco_attivita_pkey PRIMARY KEY (id);


--
-- TOC entry 6832 (class 2606 OID 19904)
-- Name: linee_mobili_html_fields linee_mobili_html_fields_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.linee_mobili_html_fields
    ADD CONSTRAINT linee_mobili_html_fields_pkey PRIMARY KEY (id);


--
-- TOC entry 6834 (class 2606 OID 19906)
-- Name: lista_controlli_ufficiali lista_controlli_ufficiali_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lista_controlli_ufficiali
    ADD CONSTRAINT lista_controlli_ufficiali_pk PRIMARY KEY (id);


--
-- TOC entry 6836 (class 2606 OID 19908)
-- Name: lock_action lock_action_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lock_action
    ADD CONSTRAINT lock_action_pkey PRIMARY KEY (id);


--
-- TOC entry 7110 (class 2606 OID 21552)
-- Name: log_chiamate_get_documenti_sicra log_chiamate_get_documenti_sicra_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.log_chiamate_get_documenti_sicra
    ADD CONSTRAINT log_chiamate_get_documenti_sicra_pkey PRIMARY KEY (id);


--
-- TOC entry 6838 (class 2606 OID 19910)
-- Name: log_import_gisa_remoto log_import_gisa_remoto_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.log_import_gisa_remoto
    ADD CONSTRAINT log_import_gisa_remoto_pkey PRIMARY KEY (id);


--
-- TOC entry 6841 (class 2606 OID 19912)
-- Name: lookup_access_types lookup_access_types_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_access_types
    ADD CONSTRAINT lookup_access_types_pkey PRIMARY KEY (code);


--
-- TOC entry 6843 (class 2606 OID 19914)
-- Name: lookup_account_size lookup_account_size_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_account_size
    ADD CONSTRAINT lookup_account_size_pkey PRIMARY KEY (code);


--
-- TOC entry 6792 (class 2606 OID 19916)
-- Name: lookup_area_struttura_asl lookup_area_struttura_asl_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_area_struttura_asl
    ADD CONSTRAINT lookup_area_struttura_asl_pkey PRIMARY KEY (code);


--
-- TOC entry 6845 (class 2606 OID 19918)
-- Name: lookup_articoli_azioni lookup_articoli_azioni_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_articoli_azioni
    ADD CONSTRAINT lookup_articoli_azioni_pkey PRIMARY KEY (code);


--
-- TOC entry 6746 (class 2606 OID 19920)
-- Name: lookup_audit_tipo lookup_audit_tipo_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_audit_tipo
    ADD CONSTRAINT lookup_audit_tipo_pkey PRIMARY KEY (code);


--
-- TOC entry 6847 (class 2606 OID 19922)
-- Name: lookup_autorizzazione_tipo lookup_autorizzazione_tipo_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_autorizzazione_tipo
    ADD CONSTRAINT lookup_autorizzazione_tipo_pkey PRIMARY KEY (code);


--
-- TOC entry 6849 (class 2606 OID 19924)
-- Name: lookup_azioni_adottate lookup_azioni_adottate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_azioni_adottate
    ADD CONSTRAINT lookup_azioni_adottate_pkey PRIMARY KEY (code);


--
-- TOC entry 6748 (class 2606 OID 19926)
-- Name: lookup_bpi lookup_bpi_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_bpi
    ADD CONSTRAINT lookup_bpi_pkey PRIMARY KEY (code);


--
-- TOC entry 6851 (class 2606 OID 19928)
-- Name: lookup_categoria_specie_allevata lookup_categoria_specie_allevata_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_categoria_specie_allevata
    ADD CONSTRAINT lookup_categoria_specie_allevata_pkey PRIMARY KEY (code);


--
-- TOC entry 6853 (class 2606 OID 19930)
-- Name: lookup_categoriarischio_soa lookup_categoriarischio_soa_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_categoriarischio_soa
    ADD CONSTRAINT lookup_categoriarischio_soa_pkey PRIMARY KEY (code);


--
-- TOC entry 6860 (class 2606 OID 19932)
-- Name: lookup_codistat lookup_codistat_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_codistat
    ADD CONSTRAINT lookup_codistat_pkey PRIMARY KEY (code);


--
-- TOC entry 6862 (class 2606 OID 19934)
-- Name: lookup_condizionalita lookup_condizionalita_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_condizionalita
    ADD CONSTRAINT lookup_condizionalita_pkey PRIMARY KEY (code);


--
-- TOC entry 6864 (class 2606 OID 19936)
-- Name: lookup_contact_source lookup_contact_source_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_contact_source
    ADD CONSTRAINT lookup_contact_source_pkey PRIMARY KEY (code);


--
-- TOC entry 6866 (class 2606 OID 19938)
-- Name: lookup_contactemail_types lookup_contactemail_types_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_contactemail_types
    ADD CONSTRAINT lookup_contactemail_types_pkey PRIMARY KEY (code);


--
-- TOC entry 6588 (class 2606 OID 19940)
-- Name: lookup_destinazione_campione lookup_destinazione_campione_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_destinazione_campione
    ADD CONSTRAINT lookup_destinazione_campione_pkey PRIMARY KEY (code);


--
-- TOC entry 6868 (class 2606 OID 19942)
-- Name: lookup_destinazione_distribuzione lookup_destinazione_distribuzione_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_destinazione_distribuzione
    ADD CONSTRAINT lookup_destinazione_distribuzione_pkey PRIMARY KEY (code);


--
-- TOC entry 6870 (class 2606 OID 19944)
-- Name: lookup_distribuzione_partita lookup_distribuzione_partita_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_distribuzione_partita
    ADD CONSTRAINT lookup_distribuzione_partita_pkey PRIMARY KEY (code);


--
-- TOC entry 6872 (class 2606 OID 19946)
-- Name: lookup_email_model lookup_email_model_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_email_model
    ADD CONSTRAINT lookup_email_model_pkey PRIMARY KEY (code);


--
-- TOC entry 6874 (class 2606 OID 19948)
-- Name: lookup_esito_campione lookup_esito_campione_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_esito_campione
    ADD CONSTRAINT lookup_esito_campione_pkey PRIMARY KEY (code);


--
-- TOC entry 6876 (class 2606 OID 19950)
-- Name: lookup_esito_controllo lookup_esito_controllo_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_esito_controllo
    ADD CONSTRAINT lookup_esito_controllo_pkey PRIMARY KEY (code);


--
-- TOC entry 6750 (class 2606 OID 19952)
-- Name: lookup_haccp lookup_haccp_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_haccp
    ADD CONSTRAINT lookup_haccp_pkey PRIMARY KEY (code);


--
-- TOC entry 6878 (class 2606 OID 19954)
-- Name: lookup_ispezione lookup_ispezione_2_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_ispezione
    ADD CONSTRAINT lookup_ispezione_2_pkey PRIMARY KEY (code);


--
-- TOC entry 6880 (class 2606 OID 19956)
-- Name: lookup_messaggio_tipo lookup_messaggio_tipo_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_messaggio_tipo
    ADD CONSTRAINT lookup_messaggio_tipo_pkey PRIMARY KEY (code);


--
-- TOC entry 6882 (class 2606 OID 19958)
-- Name: lookup_nazioni_ lookup_nazioni_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_nazioni_
    ADD CONSTRAINT lookup_nazioni_pkey PRIMARY KEY (code);


--
-- TOC entry 6884 (class 2606 OID 19960)
-- Name: lookup_nucleo_ispettivo lookup_nucleo_ispettivo_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_nucleo_ispettivo
    ADD CONSTRAINT lookup_nucleo_ispettivo_pkey PRIMARY KEY (code);


--
-- TOC entry 6886 (class 2606 OID 19962)
-- Name: lookup_oggetto_audit lookup_oggetto_audit_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_oggetto_audit
    ADD CONSTRAINT lookup_oggetto_audit_pkey PRIMARY KEY (code);


--
-- TOC entry 6888 (class 2606 OID 19964)
-- Name: lookup_opportunity_budget lookup_opportunity_budget_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_opportunity_budget
    ADD CONSTRAINT lookup_opportunity_budget_pkey PRIMARY KEY (code);


--
-- TOC entry 6647 (class 2606 OID 19966)
-- Name: lookup_opu_tipo_impresa lookup_opu_tipo_impresa_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_opu_tipo_impresa
    ADD CONSTRAINT lookup_opu_tipo_impresa_pkey PRIMARY KEY (code);


--
-- TOC entry 6649 (class 2606 OID 19968)
-- Name: lookup_opu_tipo_impresa_societa lookup_opu_tipo_impresa_societa_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_opu_tipo_impresa_societa
    ADD CONSTRAINT lookup_opu_tipo_impresa_societa_pkey PRIMARY KEY (code);


--
-- TOC entry 6590 (class 2606 OID 19970)
-- Name: lookup_org_catrischio lookup_org_catrischio_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_org_catrischio
    ADD CONSTRAINT lookup_org_catrischio_pkey PRIMARY KEY (code);


--
-- TOC entry 6890 (class 2606 OID 19972)
-- Name: lookup_orgaddress_types lookup_orgaddress_types_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_orgaddress_types
    ADD CONSTRAINT lookup_orgaddress_types_pkey PRIMARY KEY (code);


--
-- TOC entry 6892 (class 2606 OID 19974)
-- Name: lookup_orientamento_produttivo lookup_orientamento_produttivo_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_orientamento_produttivo
    ADD CONSTRAINT lookup_orientamento_produttivo_pkey PRIMARY KEY (code);


--
-- TOC entry 6894 (class 2606 OID 19976)
-- Name: lookup_piano_monitoraggio_ lookup_piano_monitoraggio_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_piano_monitoraggio_
    ADD CONSTRAINT lookup_piano_monitoraggio_pkey PRIMARY KEY (code);


--
-- TOC entry 6651 (class 2606 OID 19978)
-- Name: lookup_province lookup_province_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_province
    ADD CONSTRAINT lookup_province_pkey PRIMARY KEY (code);


--
-- TOC entry 6896 (class 2606 OID 19980)
-- Name: lookup_provvedimenti lookup_provvedimenti_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_provvedimenti
    ADD CONSTRAINT lookup_provvedimenti_pkey PRIMARY KEY (code);


--
-- TOC entry 6794 (class 2606 OID 19982)
-- Name: lookup_site_id lookup_site_id_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_site_id
    ADD CONSTRAINT lookup_site_id_pkey PRIMARY KEY (code);


--
-- TOC entry 6899 (class 2606 OID 19984)
-- Name: lookup_specie_allevata lookup_specie_allevata_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_specie_allevata
    ADD CONSTRAINT lookup_specie_allevata_pkey PRIMARY KEY (code);


--
-- TOC entry 6901 (class 2606 OID 19986)
-- Name: lookup_specie_trasportata lookup_specie_trasportata_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_specie_trasportata
    ADD CONSTRAINT lookup_specie_trasportata_pkey PRIMARY KEY (code);


--
-- TOC entry 6903 (class 2606 OID 19988)
-- Name: lookup_stato_attivita_sintesis lookup_stato_attivita_sintesis_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_stato_attivita_sintesis
    ADD CONSTRAINT lookup_stato_attivita_sintesis_pkey PRIMARY KEY (code);


--
-- TOC entry 6905 (class 2606 OID 19990)
-- Name: lookup_stato_lab lookup_stato_lab_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_stato_lab
    ADD CONSTRAINT lookup_stato_lab_pkey PRIMARY KEY (code);


--
-- TOC entry 6907 (class 2606 OID 19992)
-- Name: lookup_stato_stabilimento_sintesis lookup_stato_stabilimento_sintesis_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_stato_stabilimento_sintesis
    ADD CONSTRAINT lookup_stato_stabilimento_sintesis_pkey PRIMARY KEY (code);


--
-- TOC entry 6919 (class 2606 OID 19994)
-- Name: lookup_tipologia_struttura lookup_tipo_allevamento_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_tipologia_struttura
    ADD CONSTRAINT lookup_tipo_allevamento_pkey PRIMARY KEY (code);


--
-- TOC entry 6752 (class 2606 OID 19996)
-- Name: lookup_tipo_audit lookup_tipo_audit_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_tipo_audit
    ADD CONSTRAINT lookup_tipo_audit_pkey PRIMARY KEY (code);


--
-- TOC entry 6909 (class 2606 OID 19998)
-- Name: lookup_tipo_controllo lookup_tipo_controllo_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_tipo_controllo
    ADD CONSTRAINT lookup_tipo_controllo_pkey PRIMARY KEY (code);


--
-- TOC entry 6911 (class 2606 OID 20000)
-- Name: lookup_tipo_ispezione_ lookup_tipo_ispezione_2_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_tipo_ispezione_
    ADD CONSTRAINT lookup_tipo_ispezione_2_pkey PRIMARY KEY (code);


--
-- TOC entry 6913 (class 2606 OID 20002)
-- Name: lookup_tipo_modulo_sviluppo lookup_tipo_modulo_sviluppo_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_tipo_modulo_sviluppo
    ADD CONSTRAINT lookup_tipo_modulo_sviluppo_pkey PRIMARY KEY (code);


--
-- TOC entry 6915 (class 2606 OID 20004)
-- Name: lookup_tipo_scheda_operatore lookup_tipo_scheda_operatore_new_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_tipo_scheda_operatore
    ADD CONSTRAINT lookup_tipo_scheda_operatore_new_pkey PRIMARY KEY (code);


--
-- TOC entry 6917 (class 2606 OID 20006)
-- Name: lookup_tipologia_nodo_oia lookup_tipologia_nodo_oia_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_tipologia_nodo_oia
    ADD CONSTRAINT lookup_tipologia_nodo_oia_pkey PRIMARY KEY (code);


--
-- TOC entry 6653 (class 2606 OID 20008)
-- Name: lookup_toponimi lookup_toponimi_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_toponimi
    ADD CONSTRAINT lookup_toponimi_pkey PRIMARY KEY (code);


--
-- TOC entry 6921 (class 2606 OID 20010)
-- Name: master_list_aggregazione master_list_aggregazione_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.master_list_aggregazione
    ADD CONSTRAINT master_list_aggregazione_pkey PRIMARY KEY (id);


--
-- TOC entry 6925 (class 2606 OID 20012)
-- Name: master_list_flag_linee_attivita master_list_flag_linee_attivita_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.master_list_flag_linee_attivita
    ADD CONSTRAINT master_list_flag_linee_attivita_pkey PRIMARY KEY (id);


--
-- TOC entry 6927 (class 2606 OID 20014)
-- Name: master_list_linea_attivita master_list_linea_attivita_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.master_list_linea_attivita
    ADD CONSTRAINT master_list_linea_attivita_pkey PRIMARY KEY (id);


--
-- TOC entry 6929 (class 2606 OID 20016)
-- Name: master_list_macroarea master_list_macroarea_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.master_list_macroarea
    ADD CONSTRAINT master_list_macroarea_pkey PRIMARY KEY (id);


--
-- TOC entry 6931 (class 2606 OID 20018)
-- Name: master_list_sk_elenco master_list_sk_elenco_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.master_list_sk_elenco
    ADD CONSTRAINT master_list_sk_elenco_pk PRIMARY KEY (id);


--
-- TOC entry 6937 (class 2606 OID 20020)
-- Name: matrici_campioni matrici_campioni_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.matrici_campioni
    ADD CONSTRAINT matrici_campioni_pkey PRIMARY KEY (id);


--
-- TOC entry 6594 (class 2606 OID 20022)
-- Name: matrici matrici_new_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.matrici
    ADD CONSTRAINT matrici_new_pkey PRIMARY KEY (matrice_id);


--
-- TOC entry 6939 (class 2606 OID 20024)
-- Name: messaggi_interni messaggi_interni_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.messaggi_interni
    ADD CONSTRAINT messaggi_interni_pkey PRIMARY KEY (id);


--
-- TOC entry 6941 (class 2606 OID 20026)
-- Name: ml8_master_list ml8_master_list_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ml8_master_list
    ADD CONSTRAINT ml8_master_list_pkey PRIMARY KEY (id);


--
-- TOC entry 6943 (class 2606 OID 20028)
-- Name: ml_partizioni ml_partizioni_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ml_partizioni
    ADD CONSTRAINT ml_partizioni_pkey PRIMARY KEY (code);


--
-- TOC entry 6796 (class 2606 OID 20030)
-- Name: strutture_asl oia_nodo_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.strutture_asl
    ADD CONSTRAINT oia_nodo_pkey PRIMARY KEY (id);


--
-- TOC entry 6946 (class 2606 OID 20032)
-- Name: operatori_allevamenti operatori_allevamenti_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.operatori_allevamenti
    ADD CONSTRAINT operatori_allevamenti_pkey PRIMARY KEY (cf);


--
-- TOC entry 6948 (class 2606 OID 20034)
-- Name: operatori_associati_mercato_ittico operatori_associati_mercato_ittico_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.operatori_associati_mercato_ittico
    ADD CONSTRAINT operatori_associati_mercato_ittico_pkey PRIMARY KEY (id);


--
-- TOC entry 6638 (class 2606 OID 20036)
-- Name: anag_dati_autorizzativi_matrici opu_dati_aggiuntivi_matrice_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.anag_dati_autorizzativi_matrici
    ADD CONSTRAINT opu_dati_aggiuntivi_matrice_pkey PRIMARY KEY (id);


--
-- TOC entry 6640 (class 2606 OID 20038)
-- Name: anag_dati_autorizzativi opu_dati_aggiuntivi_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.anag_dati_autorizzativi
    ADD CONSTRAINT opu_dati_aggiuntivi_pkey PRIMARY KEY (id);


--
-- TOC entry 6657 (class 2606 OID 20040)
-- Name: opu_indirizzo opu_indirizzo_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.opu_indirizzo
    ADD CONSTRAINT opu_indirizzo_pkey PRIMARY KEY (id);


--
-- TOC entry 6933 (class 2606 OID 20042)
-- Name: opu_lookup_norme_master_list opu_lookup_norme_master_list_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.opu_lookup_norme_master_list
    ADD CONSTRAINT opu_lookup_norme_master_list_pkey PRIMARY KEY (code);


--
-- TOC entry 6955 (class 2606 OID 20044)
-- Name: opu_lookup_stato_ruolo_soggetto opu_lookup_stato_ruolo_soggetto_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.opu_lookup_stato_ruolo_soggetto
    ADD CONSTRAINT opu_lookup_stato_ruolo_soggetto_pkey PRIMARY KEY (code);


--
-- TOC entry 6659 (class 2606 OID 20046)
-- Name: opu_lookup_tipologia_attivita opu_lookup_tipologia_attivita_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.opu_lookup_tipologia_attivita
    ADD CONSTRAINT opu_lookup_tipologia_attivita_pkey PRIMARY KEY (code);


--
-- TOC entry 6661 (class 2606 OID 20048)
-- Name: opu_lookup_tipologia_carattere opu_lookup_tipologia_carattere_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.opu_lookup_tipologia_carattere
    ADD CONSTRAINT opu_lookup_tipologia_carattere_pkey PRIMARY KEY (code);


--
-- TOC entry 6668 (class 2606 OID 20050)
-- Name: opu_operatore opu_operatore_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.opu_operatore
    ADD CONSTRAINT opu_operatore_pkey PRIMARY KEY (id);


--
-- TOC entry 6672 (class 2606 OID 20052)
-- Name: opu_rel_operatore_soggetto_fisico opu_rel_operatore_soggetto_fisico_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.opu_rel_operatore_soggetto_fisico
    ADD CONSTRAINT opu_rel_operatore_soggetto_fisico_pkey PRIMARY KEY (id);


--
-- TOC entry 6676 (class 2606 OID 20054)
-- Name: opu_soggetto_fisico opu_soggetto_fisico_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.opu_soggetto_fisico
    ADD CONSTRAINT opu_soggetto_fisico_pkey PRIMARY KEY (id);


--
-- TOC entry 6957 (class 2606 OID 20056)
-- Name: opu_soggetto_fisico_storico opu_soggetto_fisico_storico_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.opu_soggetto_fisico_storico
    ADD CONSTRAINT opu_soggetto_fisico_storico_pkey PRIMARY KEY (id);


--
-- TOC entry 6977 (class 2606 OID 20058)
-- Name: organization_address organization_address_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.organization_address
    ADD CONSTRAINT organization_address_pkey PRIMARY KEY (address_id);


--
-- TOC entry 6968 (class 2606 OID 20060)
-- Name: organization organization_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.organization
    ADD CONSTRAINT organization_pkey PRIMARY KEY (org_id);


--
-- TOC entry 6980 (class 2606 OID 20062)
-- Name: parametri_categorizzazzione_osa parametri_categorizzazzione_osa_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.parametri_categorizzazzione_osa
    ADD CONSTRAINT parametri_categorizzazzione_osa_pkey PRIMARY KEY (id);


--
-- TOC entry 6984 (class 2606 OID 20064)
-- Name: permission_category permission_category_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.permission_category
    ADD CONSTRAINT permission_category_pkey PRIMARY KEY (category_id);


--
-- TOC entry 6982 (class 2606 OID 20066)
-- Name: permission permission_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.permission
    ADD CONSTRAINT permission_pkey PRIMARY KEY (permission_id);


--
-- TOC entry 6815 (class 2606 OID 20068)
-- Name: gisa_storico_operazioni_utenti pk_gisa; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.gisa_storico_operazioni_utenti
    ADD CONSTRAINT pk_gisa PRIMARY KEY (id);


--
-- TOC entry 6817 (class 2606 OID 20070)
-- Name: gruppi_template_no_scia pk_gruppi_template_no_scia; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.gruppi_template_no_scia
    ADD CONSTRAINT pk_gruppi_template_no_scia PRIMARY KEY (id);


--
-- TOC entry 6858 (class 2606 OID 20072)
-- Name: lookup_chk_bns_mod pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lookup_chk_bns_mod
    ADD CONSTRAINT pkey PRIMARY KEY (code);


--
-- TOC entry 6790 (class 2606 OID 20074)
-- Name: dpat_strumento_calcolo_nominativi_ pkey_strum_nom; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dpat_strumento_calcolo_nominativi_
    ADD CONSTRAINT pkey_strum_nom PRIMARY KEY (id);


--
-- TOC entry 7049 (class 2606 OID 20076)
-- Name: strutture_controllate_autorita_competenti pkey_strutt; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.strutture_controllate_autorita_competenti
    ADD CONSTRAINT pkey_strutt PRIMARY KEY (id);


--
-- TOC entry 6986 (class 2606 OID 20078)
-- Name: post_it post_it_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.post_it
    ADD CONSTRAINT post_it_pkey PRIMARY KEY (id);


--
-- TOC entry 6953 (class 2606 OID 20080)
-- Name: opu_relazione_stabilimento_linee_produttive relazione_stabilimento_linee_produttive_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.opu_relazione_stabilimento_linee_produttive
    ADD CONSTRAINT relazione_stabilimento_linee_produttive_pkey PRIMARY KEY (id);


--
-- TOC entry 6807 (class 2606 OID 20082)
-- Name: role_ext role_ext_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.role_ext
    ADD CONSTRAINT role_ext_pkey PRIMARY KEY (role_id);


--
-- TOC entry 6988 (class 2606 OID 20084)
-- Name: role_permission role_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.role_permission
    ADD CONSTRAINT role_permission_pkey PRIMARY KEY (id);


--
-- TOC entry 6805 (class 2606 OID 20086)
-- Name: role role_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.role
    ADD CONSTRAINT role_pkey PRIMARY KEY (role_id);


--
-- TOC entry 6991 (class 2606 OID 20088)
-- Name: salvataggio_nc_note salvataggio_nc_note_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.salvataggio_nc_note
    ADD CONSTRAINT salvataggio_nc_note_pk PRIMARY KEY (id);


--
-- TOC entry 6994 (class 2606 OID 20090)
-- Name: sanzioni_allegati sanzioni_allegati_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sanzioni_allegati
    ADD CONSTRAINT sanzioni_allegati_pkey PRIMARY KEY (id);


--
-- TOC entry 6996 (class 2606 OID 20092)
-- Name: scheda_operatore_metadati scheda_operatore_metadati_new_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.scheda_operatore_metadati
    ADD CONSTRAINT scheda_operatore_metadati_new_pkey PRIMARY KEY (id);


--
-- TOC entry 6999 (class 2606 OID 20094)
-- Name: schema_anagrafica schema_anagrafica_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.schema_anagrafica
    ADD CONSTRAINT schema_anagrafica_pkey PRIMARY KEY (id);


--
-- TOC entry 7001 (class 2606 OID 20096)
-- Name: sintesis_automezzi sintesis_automezzi_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_automezzi
    ADD CONSTRAINT sintesis_automezzi_pkey PRIMARY KEY (id);


--
-- TOC entry 7005 (class 2606 OID 20098)
-- Name: sintesis_indirizzo sintesis_indirizzo_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_indirizzo
    ADD CONSTRAINT sintesis_indirizzo_pkey PRIMARY KEY (id);


--
-- TOC entry 7024 (class 2606 OID 20100)
-- Name: sintesis_operatore sintesis_operatore_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_operatore
    ADD CONSTRAINT sintesis_operatore_pkey PRIMARY KEY (id);


--
-- TOC entry 7026 (class 2606 OID 20102)
-- Name: sintesis_operatori_mercato sintesis_operatori_mercato_ittico_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_operatori_mercato
    ADD CONSTRAINT sintesis_operatori_mercato_ittico_pkey PRIMARY KEY (id);


--
-- TOC entry 7028 (class 2606 OID 20104)
-- Name: sintesis_prodotti sintesis_prodotti_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_prodotti
    ADD CONSTRAINT sintesis_prodotti_pk PRIMARY KEY (id);


--
-- TOC entry 7032 (class 2606 OID 20106)
-- Name: sintesis_rel_operatore_soggetto_fisico sintesis_rel_operatore_soggetto_fisico_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_rel_operatore_soggetto_fisico
    ADD CONSTRAINT sintesis_rel_operatore_soggetto_fisico_pkey PRIMARY KEY (id);


--
-- TOC entry 7009 (class 2606 OID 20108)
-- Name: sintesis_relazione_stabilimento_linee_produttive sintesis_relazione_stabilimento_linee_produttive_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_relazione_stabilimento_linee_produttive
    ADD CONSTRAINT sintesis_relazione_stabilimento_linee_produttive_pkey PRIMARY KEY (id);


--
-- TOC entry 7035 (class 2606 OID 20110)
-- Name: sintesis_soggetto_fisico sintesis_soggetto_fisico_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_soggetto_fisico
    ADD CONSTRAINT sintesis_soggetto_fisico_pkey PRIMARY KEY (id);


--
-- TOC entry 7017 (class 2606 OID 20112)
-- Name: sintesis_stabilimento sintesis_stabilimento_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_stabilimento
    ADD CONSTRAINT sintesis_stabilimento_pkey PRIMARY KEY (id);


--
-- TOC entry 7037 (class 2606 OID 20114)
-- Name: sintesis_storico_operatore sintesis_storico_operatore_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_storico_operatore
    ADD CONSTRAINT sintesis_storico_operatore_pkey PRIMARY KEY (id);


--
-- TOC entry 7039 (class 2606 OID 20116)
-- Name: sintesis_storico_relazione_stabilimento_linee_produttive sintesis_storico_rel_stab_lp_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_storico_relazione_stabilimento_linee_produttive
    ADD CONSTRAINT sintesis_storico_rel_stab_lp_pkey PRIMARY KEY (id);


--
-- TOC entry 7041 (class 2606 OID 20118)
-- Name: sintesis_storico_soggetto_fisico sintesis_storico_soggetto_fisico_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_storico_soggetto_fisico
    ADD CONSTRAINT sintesis_storico_soggetto_fisico_pkey PRIMARY KEY (id);


--
-- TOC entry 7043 (class 2606 OID 20120)
-- Name: sintesis_storico_stabilimento sintesis_storico_stabilimento_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_storico_stabilimento
    ADD CONSTRAINT sintesis_storico_stabilimento_pkey PRIMARY KEY (id);


--
-- TOC entry 7045 (class 2606 OID 20122)
-- Name: sintesis_workflow_attivita sintesis_workflow_attivita_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_workflow_attivita
    ADD CONSTRAINT sintesis_workflow_attivita_pkey PRIMARY KEY (id);


--
-- TOC entry 7047 (class 2606 OID 20124)
-- Name: sintesis_workflow_stabilimento sintesis_workflow_stabilimento_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_workflow_stabilimento
    ADD CONSTRAINT sintesis_workflow_stabilimento_pkey PRIMARY KEY (id);


--
-- TOC entry 6684 (class 2606 OID 20126)
-- Name: opu_stabilimento stabilimento_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.opu_stabilimento
    ADD CONSTRAINT stabilimento_pkey PRIMARY KEY (id);


--
-- TOC entry 7072 (class 2606 OID 20128)
-- Name: suap_ric_scia_operatore suap_ric_scia_op_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.suap_ric_scia_operatore
    ADD CONSTRAINT suap_ric_scia_op_pkey PRIMARY KEY (id);


--
-- TOC entry 7055 (class 2606 OID 20130)
-- Name: suap_ric_scia_relazione_stabilimento_linee_produttive suap_ric_scia_relazione_stabilimento_linee_produttive_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.suap_ric_scia_relazione_stabilimento_linee_produttive
    ADD CONSTRAINT suap_ric_scia_relazione_stabilimento_linee_produttive_pkey PRIMARY KEY (id);


--
-- TOC entry 7065 (class 2606 OID 20132)
-- Name: suap_ric_scia_stabilimento suap_ric_sciastabilimento_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.suap_ric_scia_stabilimento
    ADD CONSTRAINT suap_ric_sciastabilimento_pkey PRIMARY KEY (id);


--
-- TOC entry 7076 (class 2606 OID 20134)
-- Name: sviluppo_flussi sviluppo_flussi_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sviluppo_flussi
    ADD CONSTRAINT sviluppo_flussi_pkey PRIMARY KEY (id);


--
-- TOC entry 7080 (class 2606 OID 20136)
-- Name: sviluppo_moduli_note sviluppo_moduli_note_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sviluppo_moduli_note
    ADD CONSTRAINT sviluppo_moduli_note_pkey PRIMARY KEY (id);


--
-- TOC entry 7078 (class 2606 OID 20138)
-- Name: sviluppo_moduli sviluppo_moduli_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sviluppo_moduli
    ADD CONSTRAINT sviluppo_moduli_pkey PRIMARY KEY (id);


--
-- TOC entry 7082 (class 2606 OID 20140)
-- Name: sviluppo_note_flusso sviluppo_note_flusso_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sviluppo_note_flusso
    ADD CONSTRAINT sviluppo_note_flusso_pkey PRIMARY KEY (id);


--
-- TOC entry 7114 (class 2606 OID 21887)
-- Name: terreni_investigati terreni_investigati_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.terreni_investigati
    ADD CONSTRAINT terreni_investigati_pkey PRIMARY KEY (id);


--
-- TOC entry 6615 (class 2606 OID 20142)
-- Name: ticket ticket_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ticket
    ADD CONSTRAINT ticket_pkey PRIMARY KEY (ticketid);


--
-- TOC entry 7092 (class 2606 OID 20144)
-- Name: tipocontrolloufficialeimprese tipocontrolloufficialeimprese_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tipocontrolloufficialeimprese
    ADD CONSTRAINT tipocontrolloufficialeimprese_pkey PRIMARY KEY (id);


--
-- TOC entry 6819 (class 2606 OID 20146)
-- Name: guru_log vdaccess_log_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.guru_log
    ADD CONSTRAINT vdaccess_log_pkey PRIMARY KEY (id);


--
-- TOC entry 7098 (class 2606 OID 20148)
-- Name: ws_endpoint_info ws_endpoint_info_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ws_endpoint_info
    ADD CONSTRAINT ws_endpoint_info_pkey PRIMARY KEY (id);


--
-- TOC entry 7096 (class 2606 OID 20150)
-- Name: ws_endpoint ws_endpoint_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ws_endpoint
    ADD CONSTRAINT ws_endpoint_pkey PRIMARY KEY (id);


--
-- TOC entry 7100 (class 2606 OID 20152)
-- Name: ws_info_web_service ws_info_web_service_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ws_info_web_service
    ADD CONSTRAINT ws_info_web_service_pkey PRIMARY KEY (id);


--
-- TOC entry 7104 (class 2606 OID 20154)
-- Name: ws_oggetto_campi ws_oggetto_campi_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ws_oggetto_campi
    ADD CONSTRAINT ws_oggetto_campi_pkey PRIMARY KEY (id);


--
-- TOC entry 7102 (class 2606 OID 20156)
-- Name: ws_oggetto ws_oggetto_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ws_oggetto
    ADD CONSTRAINT ws_oggetto_pkey PRIMARY KEY (id);


--
-- TOC entry 7106 (class 2606 OID 20158)
-- Name: ws_servizi ws_servizi_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ws_servizi
    ADD CONSTRAINT ws_servizi_pkey PRIMARY KEY (id);


--
-- TOC entry 7108 (class 2606 OID 20160)
-- Name: ws_storico_chiamate ws_storico_chiamate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ws_storico_chiamate
    ADD CONSTRAINT ws_storico_chiamate_pkey PRIMARY KEY (id);


--
-- TOC entry 6597 (class 1259 OID 20161)
-- Name: associazione_preaccettazione_entita_riferimento_entita_idx; Type: INDEX; Schema: preaccettazione; Owner: postgres
--

CREATE INDEX associazione_preaccettazione_entita_riferimento_entita_idx ON preaccettazione.associazione_preaccettazione_entita USING btree (riferimento_entita);


--
-- TOC entry 6600 (class 1259 OID 20162)
-- Name: codici_preaccettazione_progres_idx; Type: INDEX; Schema: preaccettazione; Owner: postgres
--

CREATE INDEX codici_preaccettazione_progres_idx ON preaccettazione.codici_preaccettazione USING btree (progres);


--
-- TOC entry 6625 (class 1259 OID 20163)
-- Name: access__username_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX access__username_idx ON public.access_ USING btree (username);


--
-- TOC entry 6716 (class 1259 OID 20164)
-- Name: chk_bns_mod_ist_id_alleg_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX chk_bns_mod_ist_id_alleg_idx ON public.chk_bns_mod_ist USING btree (id_alleg);


--
-- TOC entry 6717 (class 1259 OID 20165)
-- Name: chk_bns_mod_ist_idcu_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX chk_bns_mod_ist_idcu_idx ON public.chk_bns_mod_ist USING btree (idcu);


--
-- TOC entry 6718 (class 1259 OID 20166)
-- Name: chk_bns_mod_ist_idcu_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX chk_bns_mod_ist_idcu_idx1 ON public.chk_bns_mod_ist USING btree (idcu);


--
-- TOC entry 6721 (class 1259 OID 20167)
-- Name: chk_bns_risposte_idmodist_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX chk_bns_risposte_idmodist_idx ON public.chk_bns_risposte USING btree (idmodist);


--
-- TOC entry 6722 (class 1259 OID 20168)
-- Name: chk_bns_risposte_idmodist_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX chk_bns_risposte_idmodist_idx1 ON public.chk_bns_risposte USING btree (idmodist);


--
-- TOC entry 6753 (class 1259 OID 20169)
-- Name: codspiano; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX codspiano ON public.dpat_indicatore_new USING btree (anno, stato, codice_alias_indicatore, id_piano_attivita) WHERE (data_scadenza IS NULL);


--
-- TOC entry 6643 (class 1259 OID 20170)
-- Name: comuni1_nome_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX comuni1_nome_idx ON public.comuni1 USING btree (nome);


--
-- TOC entry 6733 (class 1259 OID 20171)
-- Name: contact_enteredby; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX contact_enteredby ON public.contact_ USING btree (enteredby);


--
-- TOC entry 6734 (class 1259 OID 20172)
-- Name: contact_modifiedby; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX contact_modifiedby ON public.contact_ USING btree (modifiedby);


--
-- TOC entry 6735 (class 1259 OID 20173)
-- Name: contact_org_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX contact_org_id_idx ON public.contact_ USING btree (org_id) WHERE ((org_id IS NOT NULL) AND (org_id > 0));


--
-- TOC entry 6738 (class 1259 OID 20174)
-- Name: contact_site_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX contact_site_id ON public.contact_ USING btree (site_id);


--
-- TOC entry 6739 (class 1259 OID 20175)
-- Name: contact_user_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX contact_user_id ON public.contact_ USING btree (user_id);


--
-- TOC entry 6740 (class 1259 OID 20176)
-- Name: contact_user_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX contact_user_id_idx ON public.contact_ USING btree (user_id);


--
-- TOC entry 6778 (class 1259 OID 20177)
-- Name: dpat_istanza_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX dpat_istanza_id_idx ON public.dpat_istanza USING btree (id);


--
-- TOC entry 6783 (class 1259 OID 20178)
-- Name: dpat_strumento_calcolo_id_asl_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX dpat_strumento_calcolo_id_asl_idx ON public.dpat_strumento_calcolo USING btree (id_asl);


--
-- TOC entry 6784 (class 1259 OID 20179)
-- Name: dpat_strumento_calcolo_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX dpat_strumento_calcolo_id_idx ON public.dpat_strumento_calcolo USING btree (id);


--
-- TOC entry 6785 (class 1259 OID 20180)
-- Name: dpat_strumento_calcolo_nomina_id_dpat_strumento_calcolo_str_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX dpat_strumento_calcolo_nomina_id_dpat_strumento_calcolo_str_idx ON public.dpat_strumento_calcolo_nominativi_ USING btree (id_dpat_strumento_calcolo_strutture);


--
-- TOC entry 6786 (class 1259 OID 20181)
-- Name: dpat_strumento_calcolo_nominativi__id_anagrafica_nominativo_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX dpat_strumento_calcolo_nominativi__id_anagrafica_nominativo_idx ON public.dpat_strumento_calcolo_nominativi_ USING btree (id_anagrafica_nominativo);


--
-- TOC entry 6787 (class 1259 OID 20182)
-- Name: dpat_strumento_calcolo_nominativi__id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX dpat_strumento_calcolo_nominativi__id_idx ON public.dpat_strumento_calcolo_nominativi_ USING btree (id);


--
-- TOC entry 6788 (class 1259 OID 20183)
-- Name: dpat_strumento_calcolo_nominativi__id_lookup_qualifica_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX dpat_strumento_calcolo_nominativi__id_lookup_qualifica_idx ON public.dpat_strumento_calcolo_nominativi_ USING btree (id_lookup_qualifica);


--
-- TOC entry 6949 (class 1259 OID 20184)
-- Name: fki_fkey_linea_prod; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX fki_fkey_linea_prod ON public.opu_relazione_stabilimento_linee_produttive USING btree (id_linea_produttiva);


--
-- TOC entry 6687 (class 1259 OID 20185)
-- Name: idx_analiti_campioni_id_campione; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_analiti_campioni_id_campione ON public.campione_analiti USING btree (id_campione);


--
-- TOC entry 6696 (class 1259 OID 20186)
-- Name: idx_audit_checklist_type_audit_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_audit_checklist_type_audit_id ON public.audit_checklist_type USING btree (audit_id);


--
-- TOC entry 6715 (class 1259 OID 20187)
-- Name: idx_checklist_type_catrischio_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_checklist_type_catrischio_id ON public.checklist_type USING btree (catrischio_id);


--
-- TOC entry 7056 (class 1259 OID 20188)
-- Name: idx_id_asl_; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_id_asl_ ON public.suap_ric_scia_stabilimento USING btree (id_asl);


--
-- TOC entry 7066 (class 1259 OID 20189)
-- Name: idx_id_indirizzo; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_id_indirizzo ON public.suap_ric_scia_operatore USING btree (id_indirizzo);


--
-- TOC entry 7057 (class 1259 OID 20190)
-- Name: idx_id_indirizzo_; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_id_indirizzo_ ON public.suap_ric_scia_stabilimento USING btree (id_indirizzo);


--
-- TOC entry 7058 (class 1259 OID 20191)
-- Name: idx_id_operatore; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_id_operatore ON public.suap_ric_scia_stabilimento USING btree (id_operatore);


--
-- TOC entry 7059 (class 1259 OID 20192)
-- Name: idx_id_tipo_attivita; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_id_tipo_attivita ON public.suap_ric_scia_stabilimento USING btree (tipo_attivita);


--
-- TOC entry 7060 (class 1259 OID 20193)
-- Name: idx_id_tipo_carattere; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_id_tipo_carattere ON public.suap_ric_scia_stabilimento USING btree (tipo_carattere);


--
-- TOC entry 7067 (class 1259 OID 20194)
-- Name: idx_inserito_da; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_inserito_da ON public.suap_ric_scia_operatore USING btree (enteredby);


--
-- TOC entry 7061 (class 1259 OID 20195)
-- Name: idx_inserito_da_; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_inserito_da_ ON public.suap_ric_scia_stabilimento USING btree (entered_by);


--
-- TOC entry 6828 (class 1259 OID 20196)
-- Name: idx_linee_attivita_controlli_ufficiali_id_linea_attivita; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_linee_attivita_controlli_ufficiali_id_linea_attivita ON public.linee_attivita_giornate_ispettive USING btree (id_linea_attivita);


--
-- TOC entry 6934 (class 1259 OID 20197)
-- Name: idx_matrici_campioni_id_campione; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_matrici_campioni_id_campione ON public.matrici_campioni USING btree (id_campione);


--
-- TOC entry 6935 (class 1259 OID 20198)
-- Name: idx_matrici_campioni_id_matrice; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_matrici_campioni_id_matrice ON public.matrici_campioni USING btree (id_matrice);


--
-- TOC entry 7068 (class 1259 OID 20199)
-- Name: idx_modificato_da; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_modificato_da ON public.suap_ric_scia_operatore USING btree (modifiedby);


--
-- TOC entry 7062 (class 1259 OID 20200)
-- Name: idx_modificato_da_; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_modificato_da_ ON public.suap_ric_scia_stabilimento USING btree (modified_by);


--
-- TOC entry 6654 (class 1259 OID 20201)
-- Name: idx_opu_indirizzo_comune; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_opu_indirizzo_comune ON public.opu_indirizzo USING btree (comune);


--
-- TOC entry 6662 (class 1259 OID 20202)
-- Name: idx_opu_operatore_entered_by; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_opu_operatore_entered_by ON public.opu_operatore USING btree (enteredby);


--
-- TOC entry 6663 (class 1259 OID 20203)
-- Name: idx_opu_operatore_id_ind; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_opu_operatore_id_ind ON public.opu_operatore USING btree (id_indirizzo);


--
-- TOC entry 6664 (class 1259 OID 20204)
-- Name: idx_opu_operatore_modified_by; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_opu_operatore_modified_by ON public.opu_operatore USING btree (modifiedby);


--
-- TOC entry 6665 (class 1259 OID 20205)
-- Name: idx_opu_operatore_tipo_impresa; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_opu_operatore_tipo_impresa ON public.opu_operatore USING btree (tipo_impresa);


--
-- TOC entry 6666 (class 1259 OID 20206)
-- Name: idx_opu_operatore_tipo_societa; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_opu_operatore_tipo_societa ON public.opu_operatore USING btree (tipo_societa);


--
-- TOC entry 6669 (class 1259 OID 20207)
-- Name: idx_opu_rel_operatore_soggetto_fisico_id_op; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_opu_rel_operatore_soggetto_fisico_id_op ON public.opu_rel_operatore_soggetto_fisico USING btree (id_operatore);


--
-- TOC entry 6670 (class 1259 OID 20208)
-- Name: idx_opu_rel_operatore_soggetto_fisico_id_soggetto_fisico; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_opu_rel_operatore_soggetto_fisico_id_soggetto_fisico ON public.opu_rel_operatore_soggetto_fisico USING btree (id_soggetto_fisico);


--
-- TOC entry 6674 (class 1259 OID 20209)
-- Name: idx_opu_soggetto_fisico_ind; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_opu_soggetto_fisico_ind ON public.opu_soggetto_fisico USING btree (indirizzo_id);


--
-- TOC entry 6678 (class 1259 OID 20210)
-- Name: idx_opu_stabilimento_id_asl; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_opu_stabilimento_id_asl ON public.opu_stabilimento USING btree (id_asl);


--
-- TOC entry 6679 (class 1259 OID 20211)
-- Name: idx_opu_stabilimento_id_indirizzo; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_opu_stabilimento_id_indirizzo ON public.opu_stabilimento USING btree (id_indirizzo);


--
-- TOC entry 6680 (class 1259 OID 20212)
-- Name: idx_opu_stabilimento_tipo_attivita; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_opu_stabilimento_tipo_attivita ON public.opu_stabilimento USING btree (tipo_attivita);


--
-- TOC entry 6681 (class 1259 OID 20213)
-- Name: idx_opu_stabilimento_tipo_carattere; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_opu_stabilimento_tipo_carattere ON public.opu_stabilimento USING btree (tipo_carattere);


--
-- TOC entry 7052 (class 1259 OID 20214)
-- Name: idx_rel_stab_lp_id_stab; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_rel_stab_lp_id_stab ON public.suap_ric_scia_relazione_stabilimento_linee_produttive USING btree (id_stabilimento);


--
-- TOC entry 6989 (class 1259 OID 20215)
-- Name: idx_salvataggio_azioni_adottate_id_azione_adottata; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_salvataggio_azioni_adottate_id_azione_adottata ON public.salvataggio_azioni_adottate USING btree (id_azione_adottata);


--
-- TOC entry 6992 (class 1259 OID 20216)
-- Name: idx_salvataggio_specie_trasportata_id_controllo_ufficiale; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_salvataggio_specie_trasportata_id_controllo_ufficiale ON public.salvataggio_specie_trasportata USING btree (id_controllo_ufficiale);


--
-- TOC entry 6997 (class 1259 OID 20217)
-- Name: idx_schema_anagrafica; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX idx_schema_anagrafica ON public.schema_anagrafica USING btree (codice_univoco_ml, id_gruppo_template, id_campo_configuratore, COALESCE(data_scadenza, '1900-01-01 00:00:00'::timestamp without time zone));


--
-- TOC entry 7002 (class 1259 OID 20218)
-- Name: idx_sintesis_indirizzo_comune; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_sintesis_indirizzo_comune ON public.sintesis_indirizzo USING btree (comune);


--
-- TOC entry 7018 (class 1259 OID 20219)
-- Name: idx_sintesis_operatore_entered_by; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_sintesis_operatore_entered_by ON public.sintesis_operatore USING btree (enteredby);


--
-- TOC entry 7019 (class 1259 OID 20220)
-- Name: idx_sintesis_operatore_id_ind; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_sintesis_operatore_id_ind ON public.sintesis_operatore USING btree (id_indirizzo);


--
-- TOC entry 7020 (class 1259 OID 20221)
-- Name: idx_sintesis_operatore_modified_by; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_sintesis_operatore_modified_by ON public.sintesis_operatore USING btree (modifiedby);


--
-- TOC entry 7021 (class 1259 OID 20222)
-- Name: idx_sintesis_operatore_tipo_impresa; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_sintesis_operatore_tipo_impresa ON public.sintesis_operatore USING btree (tipo_impresa);


--
-- TOC entry 7022 (class 1259 OID 20223)
-- Name: idx_sintesis_operatore_tipo_societa; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_sintesis_operatore_tipo_societa ON public.sintesis_operatore USING btree (tipo_societa);


--
-- TOC entry 7029 (class 1259 OID 20224)
-- Name: idx_sintesis_rel_operatore_soggetto_fisico_id_op; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_sintesis_rel_operatore_soggetto_fisico_id_op ON public.sintesis_rel_operatore_soggetto_fisico USING btree (id_operatore);


--
-- TOC entry 7030 (class 1259 OID 20225)
-- Name: idx_sintesis_rel_operatore_soggetto_fisico_id_soggetto_fisico; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_sintesis_rel_operatore_soggetto_fisico_id_soggetto_fisico ON public.sintesis_rel_operatore_soggetto_fisico USING btree (id_soggetto_fisico);


--
-- TOC entry 7011 (class 1259 OID 20226)
-- Name: idx_sintesis_stabilimento_id_asl; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_sintesis_stabilimento_id_asl ON public.sintesis_stabilimento USING btree (id_asl);


--
-- TOC entry 7012 (class 1259 OID 20227)
-- Name: idx_sintesis_stabilimento_id_indirizzo; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_sintesis_stabilimento_id_indirizzo ON public.sintesis_stabilimento USING btree (id_indirizzo);


--
-- TOC entry 7013 (class 1259 OID 20228)
-- Name: idx_sintesis_stabilimento_tipo_attivita; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_sintesis_stabilimento_tipo_attivita ON public.sintesis_stabilimento USING btree (tipo_attivita);


--
-- TOC entry 7014 (class 1259 OID 20229)
-- Name: idx_sintesis_stabilimento_tipo_carattere; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_sintesis_stabilimento_tipo_carattere ON public.sintesis_stabilimento USING btree (tipo_carattere);


--
-- TOC entry 7003 (class 1259 OID 20230)
-- Name: idx_sintesis_toponimo_key; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_sintesis_toponimo_key ON public.sintesis_indirizzo USING btree (toponimo);


--
-- TOC entry 6605 (class 1259 OID 20231)
-- Name: idx_ticket_org_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_ticket_org_id ON public.ticket USING btree (org_id);


--
-- TOC entry 6606 (class 1259 OID 20232)
-- Name: idx_ticket_site_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_ticket_site_id ON public.ticket USING btree (site_id);


--
-- TOC entry 7069 (class 1259 OID 20233)
-- Name: idx_tipo_impresa; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_tipo_impresa ON public.suap_ric_scia_operatore USING btree (tipo_impresa);


--
-- TOC entry 7070 (class 1259 OID 20234)
-- Name: idx_tipo_societa; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_tipo_societa ON public.suap_ric_scia_operatore USING btree (tipo_societa);


--
-- TOC entry 7083 (class 1259 OID 20235)
-- Name: idx_tipocontrolloufficialeimprese_idcontrollo; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_tipocontrolloufficialeimprese_idcontrollo ON public.tipocontrolloufficialeimprese USING btree (idcontrollo);


--
-- TOC entry 6655 (class 1259 OID 20236)
-- Name: idx_toponimo_key; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_toponimo_key ON public.opu_indirizzo USING btree (toponimo);


--
-- TOC entry 6839 (class 1259 OID 20237)
-- Name: laccess_types_rule_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX laccess_types_rule_id ON public.lookup_access_types USING btree (rule_id);


--
-- TOC entry 6829 (class 1259 OID 20238)
-- Name: linee_attivita_controlli_ufficiali_id_controllo_ufficiale_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX linee_attivita_controlli_ufficiali_id_controllo_ufficiale_idx ON public.linee_attivita_giornate_ispettive USING btree (id_giornata_ispettiva);


--
-- TOC entry 6830 (class 1259 OID 20239)
-- Name: linee_attivita_controlli_ufficiali_id_linea_attivita_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX linee_attivita_controlli_ufficiali_id_linea_attivita_idx ON public.linee_attivita_giornate_ispettive USING btree (id_linea_attivita);


--
-- TOC entry 6854 (class 1259 OID 20240)
-- Name: lookup_chk_bns_mod_code_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX lookup_chk_bns_mod_code_idx ON public.lookup_chk_bns_mod USING btree (code);


--
-- TOC entry 6855 (class 1259 OID 20241)
-- Name: lookup_chk_bns_mod_code_idx1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX lookup_chk_bns_mod_code_idx1 ON public.lookup_chk_bns_mod USING btree (code);


--
-- TOC entry 6856 (class 1259 OID 20242)
-- Name: lookup_chk_bns_mod_codice_specie_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX lookup_chk_bns_mod_codice_specie_idx ON public.lookup_chk_bns_mod USING btree (codice_specie);


--
-- TOC entry 6758 (class 1259 OID 20243)
-- Name: lookup_piano_monitoraggio_anno_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX lookup_piano_monitoraggio_anno_idx ON public.lookup_piano_monitoraggio USING btree (anno);


--
-- TOC entry 6759 (class 1259 OID 20244)
-- Name: lookup_piano_monitoraggio_code_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX lookup_piano_monitoraggio_code_idx ON public.lookup_piano_monitoraggio USING btree (code);


--
-- TOC entry 6760 (class 1259 OID 20245)
-- Name: lookup_piano_monitoraggio_description_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX lookup_piano_monitoraggio_description_idx ON public.lookup_piano_monitoraggio USING btree (description);


--
-- TOC entry 6897 (class 1259 OID 20246)
-- Name: lookup_specie_allevata_description_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX lookup_specie_allevata_description_idx ON public.lookup_specie_allevata USING btree (description);


--
-- TOC entry 6761 (class 1259 OID 20247)
-- Name: lookup_tipo_ispezione_anno_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX lookup_tipo_ispezione_anno_idx ON public.lookup_tipo_ispezione USING btree (anno);


--
-- TOC entry 6762 (class 1259 OID 20248)
-- Name: lookup_tipo_ispezione_code_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX lookup_tipo_ispezione_code_idx ON public.lookup_tipo_ispezione USING btree (code);


--
-- TOC entry 6763 (class 1259 OID 20249)
-- Name: lookup_tipo_ispezione_description_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX lookup_tipo_ispezione_description_idx ON public.lookup_tipo_ispezione USING btree (description);


--
-- TOC entry 6591 (class 1259 OID 20250)
-- Name: matrici_id_padre_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX matrici_id_padre_idx ON public.matrici USING btree (id_padre);


--
-- TOC entry 6592 (class 1259 OID 20251)
-- Name: matrici_matrice_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX matrici_matrice_id_idx ON public.matrici USING btree (matrice_id);


--
-- TOC entry 6950 (class 1259 OID 20252)
-- Name: oidx_opu_relazione_stab_linee; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX oidx_opu_relazione_stab_linee ON public.opu_relazione_stabilimento_linee_produttive USING btree (id_stabilimento);


--
-- TOC entry 7006 (class 1259 OID 20253)
-- Name: oidx_sintesis_relazione_stab_linee; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX oidx_sintesis_relazione_stab_linee ON public.sintesis_relazione_stabilimento_linee_produttive USING btree (id_stabilimento);


--
-- TOC entry 6944 (class 1259 OID 20254)
-- Name: operatori_allevamenti_cf_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX operatori_allevamenti_cf_idx ON public.operatori_allevamenti USING btree (cf);


--
-- TOC entry 6951 (class 1259 OID 20255)
-- Name: opu_relazione_stabilimento_linee_produttive_id_stabilimento_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX opu_relazione_stabilimento_linee_produttive_id_stabilimento_idx ON public.opu_relazione_stabilimento_linee_produttive USING btree (id_stabilimento);


--
-- TOC entry 6682 (class 1259 OID 20256)
-- Name: opu_stab_evita_num_reg_duplicati; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX opu_stab_evita_num_reg_duplicati ON public.opu_stabilimento USING btree (upper(NULLIF(btrim(numero_registrazione), ''::text)), COALESCE(trashed_date, '0001-01-01 01:00:00 BC'::timestamp without time zone));


--
-- TOC entry 6958 (class 1259 OID 20257)
-- Name: org_account_size_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX org_account_size_idx ON public.organization USING btree (account_size);


--
-- TOC entry 6972 (class 1259 OID 20258)
-- Name: org_addr_org_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX org_addr_org_id_idx ON public.organization_address USING btree (org_id);


--
-- TOC entry 6973 (class 1259 OID 20259)
-- Name: org_addr_pri_address_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX org_addr_pri_address_idx ON public.organization_address USING btree (primary_address);


--
-- TOC entry 6959 (class 1259 OID 20260)
-- Name: org_enteredby_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX org_enteredby_idx ON public.organization USING btree (enteredby);


--
-- TOC entry 6960 (class 1259 OID 20261)
-- Name: org_industry_temp_code_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX org_industry_temp_code_idx ON public.organization USING btree (industry_temp_code);


--
-- TOC entry 6961 (class 1259 OID 20262)
-- Name: org_modifiedby_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX org_modifiedby_idx ON public.organization USING btree (modifiedby);


--
-- TOC entry 6962 (class 1259 OID 20263)
-- Name: org_org_id_miner_only_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX org_org_id_miner_only_idx ON public.organization USING btree (org_id, miner_only);


--
-- TOC entry 6963 (class 1259 OID 20264)
-- Name: org_owner_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX org_owner_idx ON public.organization USING btree (owner);


--
-- TOC entry 6964 (class 1259 OID 20265)
-- Name: org_site_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX org_site_id_idx ON public.organization USING btree (site_id);


--
-- TOC entry 6965 (class 1259 OID 20266)
-- Name: org_status_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX org_status_id_idx ON public.organization USING btree (status_id);


--
-- TOC entry 6974 (class 1259 OID 20267)
-- Name: organization_address_address_type_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX organization_address_address_type_idx ON public.organization_address USING btree (address_type);


--
-- TOC entry 6975 (class 1259 OID 20268)
-- Name: organization_address_org_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX organization_address_org_id_idx ON public.organization_address USING btree (org_id);


--
-- TOC entry 6978 (class 1259 OID 20269)
-- Name: organization_address_postalcode_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX organization_address_postalcode_idx ON public.organization_address USING btree (postalcode);


--
-- TOC entry 6966 (class 1259 OID 20270)
-- Name: organization_org_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX organization_org_id_idx ON public.organization USING btree (org_id);


--
-- TOC entry 6969 (class 1259 OID 20271)
-- Name: orglist_name; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX orglist_name ON public.organization USING btree (name);


--
-- TOC entry 6970 (class 1259 OID 20272)
-- Name: orglist_partita_iva; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX orglist_partita_iva ON public.organization USING btree (partita_iva);


--
-- TOC entry 7007 (class 1259 OID 20273)
-- Name: sintesis_fki_fkey_linea_prod; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX sintesis_fki_fkey_linea_prod ON public.sintesis_relazione_stabilimento_linee_produttive USING btree (id_linea_produttiva);


--
-- TOC entry 7010 (class 1259 OID 20274)
-- Name: sintesis_relazione_stabilimento_linee_produttive_stab_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX sintesis_relazione_stabilimento_linee_produttive_stab_idx ON public.sintesis_relazione_stabilimento_linee_produttive USING btree (id_stabilimento);


--
-- TOC entry 7015 (class 1259 OID 20275)
-- Name: sintesis_stab_evita_num_reg_duplicati; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX sintesis_stab_evita_num_reg_duplicati ON public.sintesis_stabilimento USING btree (upper(NULLIF(btrim(numero_registrazione), ''::text)), COALESCE(trashed_date, '0001-01-01 01:00:00 BC'::timestamp without time zone));


--
-- TOC entry 7033 (class 1259 OID 20276)
-- Name: sintesis_stop_dup_rel_imp_sf; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX sintesis_stop_dup_rel_imp_sf ON public.sintesis_rel_operatore_soggetto_fisico USING btree (id_soggetto_fisico, id_operatore) WHERE enabled;


--
-- TOC entry 6971 (class 1259 OID 20277)
-- Name: stop_allev_dup; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX stop_allev_dup ON public.organization USING btree (account_number, specie_allev, codice_fiscale_rappresentante) WHERE ((trashed_date IS NULL) AND (tipologia = 2) AND (account_number IS NOT NULL) AND (codice_fiscale_rappresentante IS NOT NULL) AND (specie_allev IS NOT NULL) AND (date2 IS NULL) AND (specie_allevamento = ANY (ARRAY[125, 122, 121, 124, 129])));


--
-- TOC entry 6677 (class 1259 OID 20278)
-- Name: stop_cf_dup; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX stop_cf_dup ON public.opu_soggetto_fisico USING btree (codice_fiscale, indirizzo_id) WHERE ((trashed_date IS NULL) AND (codice_fiscale IS NOT NULL) AND ((codice_fiscale)::text <> ''::text));


--
-- TOC entry 6673 (class 1259 OID 20279)
-- Name: stop_dup_rel_imp_sf; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX stop_dup_rel_imp_sf ON public.opu_rel_operatore_soggetto_fisico USING btree (id_soggetto_fisico, id_operatore) WHERE enabled;


--
-- TOC entry 6797 (class 1259 OID 20280)
-- Name: strutture_asl_data_scadenza_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX strutture_asl_data_scadenza_idx ON public.strutture_asl USING btree (data_scadenza);


--
-- TOC entry 6798 (class 1259 OID 20281)
-- Name: strutture_asl_id_asl_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX strutture_asl_id_asl_idx ON public.strutture_asl USING btree (id_asl);


--
-- TOC entry 6799 (class 1259 OID 20282)
-- Name: strutture_asl_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX strutture_asl_id_idx ON public.strutture_asl USING btree (id);


--
-- TOC entry 6800 (class 1259 OID 20283)
-- Name: strutture_asl_id_padre_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX strutture_asl_id_padre_idx ON public.strutture_asl USING btree (id_padre);


--
-- TOC entry 6801 (class 1259 OID 20284)
-- Name: strutture_asl_n_livello_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX strutture_asl_n_livello_idx ON public.strutture_asl USING btree (n_livello);


--
-- TOC entry 6802 (class 1259 OID 20285)
-- Name: strutture_asl_stato_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX strutture_asl_stato_idx ON public.strutture_asl USING btree (stato);


--
-- TOC entry 6803 (class 1259 OID 20286)
-- Name: strutture_asl_tipologia_struttura_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX strutture_asl_tipologia_struttura_idx ON public.strutture_asl USING btree (tipologia_struttura);


--
-- TOC entry 7050 (class 1259 OID 20287)
-- Name: strutture_controllate_autorita_competenti_id_controllo_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX strutture_controllate_autorita_competenti_id_controllo_idx ON public.strutture_controllate_autorita_competenti USING btree (id_controllo);


--
-- TOC entry 7051 (class 1259 OID 20288)
-- Name: strutture_controllate_autorita_competenti_id_struttura_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX strutture_controllate_autorita_competenti_id_struttura_idx ON public.strutture_controllate_autorita_competenti USING btree (id_struttura);


--
-- TOC entry 7073 (class 1259 OID 20289)
-- Name: suap_ric_scia_operatore_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX suap_ric_scia_operatore_id_idx ON public.suap_ric_scia_operatore USING btree (id);


--
-- TOC entry 7074 (class 1259 OID 20290)
-- Name: suap_ric_scia_operatore_id_tipo_richiesta_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX suap_ric_scia_operatore_id_tipo_richiesta_idx ON public.suap_ric_scia_operatore USING btree (id_tipo_richiesta);


--
-- TOC entry 7053 (class 1259 OID 20291)
-- Name: suap_ric_scia_relazione_stabilimento_linee__id_stabilimento_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX suap_ric_scia_relazione_stabilimento_linee__id_stabilimento_idx ON public.suap_ric_scia_relazione_stabilimento_linee_produttive USING btree (id_stabilimento);


--
-- TOC entry 7063 (class 1259 OID 20292)
-- Name: suap_ric_scia_stabilimento_id_indirizzo_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX suap_ric_scia_stabilimento_id_indirizzo_idx ON public.suap_ric_scia_stabilimento USING btree (id_indirizzo);


--
-- TOC entry 6607 (class 1259 OID 20293)
-- Name: ticket_cidx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ticket_cidx ON public.ticket USING btree (assigned_to, closed);


--
-- TOC entry 6608 (class 1259 OID 20294)
-- Name: ticket_closed_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ticket_closed_idx ON public.ticket USING btree (closed);


--
-- TOC entry 6609 (class 1259 OID 20295)
-- Name: ticket_closed_nolista_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ticket_closed_nolista_idx ON public.ticket USING btree (closed_nolista);


--
-- TOC entry 6610 (class 1259 OID 20296)
-- Name: ticket_comment_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ticket_comment_idx ON public.ticket USING btree (comment);


--
-- TOC entry 6611 (class 1259 OID 20297)
-- Name: ticket_entered_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ticket_entered_idx ON public.ticket USING btree (entered);


--
-- TOC entry 6612 (class 1259 OID 20298)
-- Name: ticket_id_controllo_ufficiale_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ticket_id_controllo_ufficiale_idx ON public.ticket USING btree (id_controllo_ufficiale);


--
-- TOC entry 6613 (class 1259 OID 20299)
-- Name: ticket_id_nonconformita_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ticket_id_nonconformita_idx ON public.ticket USING btree (id_nonconformita);


--
-- TOC entry 6616 (class 1259 OID 20300)
-- Name: ticket_provvedimenti_prescrittivi_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ticket_provvedimenti_prescrittivi_idx ON public.ticket USING btree (provvedimenti_prescrittivi);


--
-- TOC entry 6617 (class 1259 OID 20301)
-- Name: ticket_site_id_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ticket_site_id_idx ON public.ticket USING btree (site_id);


--
-- TOC entry 6618 (class 1259 OID 20302)
-- Name: ticket_solution_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ticket_solution_idx ON public.ticket USING btree (solution);


--
-- TOC entry 6619 (class 1259 OID 20303)
-- Name: ticket_supervisionato_da_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ticket_supervisionato_da_idx ON public.ticket USING btree (supervisionato_da);


--
-- TOC entry 6620 (class 1259 OID 20304)
-- Name: ticket_tipologia_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ticket_tipologia_idx ON public.ticket USING btree (tipologia);


--
-- TOC entry 6621 (class 1259 OID 20305)
-- Name: ticket_trashed_date_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ticket_trashed_date_idx ON public.ticket USING btree (trashed_date);


--
-- TOC entry 6622 (class 1259 OID 20306)
-- Name: ticketlist_entered; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX ticketlist_entered ON public.ticket USING btree (entered);


--
-- TOC entry 7084 (class 1259 OID 20307)
-- Name: tipocontrolloufficialeimprese_audit_tipo_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX tipocontrolloufficialeimprese_audit_tipo_idx ON public.tipocontrolloufficialeimprese USING btree (audit_tipo);


--
-- TOC entry 7085 (class 1259 OID 20308)
-- Name: tipocontrolloufficialeimprese_bpi_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX tipocontrolloufficialeimprese_bpi_idx ON public.tipocontrolloufficialeimprese USING btree (bpi);


--
-- TOC entry 7086 (class 1259 OID 20309)
-- Name: tipocontrolloufficialeimprese_enabled_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX tipocontrolloufficialeimprese_enabled_idx ON public.tipocontrolloufficialeimprese USING btree (enabled);


--
-- TOC entry 7087 (class 1259 OID 20310)
-- Name: tipocontrolloufficialeimprese_haccp_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX tipocontrolloufficialeimprese_haccp_idx ON public.tipocontrolloufficialeimprese USING btree (haccp);


--
-- TOC entry 7088 (class 1259 OID 20311)
-- Name: tipocontrolloufficialeimprese_id_unita_operativa_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX tipocontrolloufficialeimprese_id_unita_operativa_idx ON public.tipocontrolloufficialeimprese USING btree (id_unita_operativa);


--
-- TOC entry 7089 (class 1259 OID 20312)
-- Name: tipocontrolloufficialeimprese_ispezione_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX tipocontrolloufficialeimprese_ispezione_idx ON public.tipocontrolloufficialeimprese USING btree (ispezione);


--
-- TOC entry 7090 (class 1259 OID 20313)
-- Name: tipocontrolloufficialeimprese_pianomonitoraggio_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX tipocontrolloufficialeimprese_pianomonitoraggio_idx ON public.tipocontrolloufficialeimprese USING btree (pianomonitoraggio);


--
-- TOC entry 7093 (class 1259 OID 20314)
-- Name: tipocontrolloufficialeimprese_tipo_audit_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX tipocontrolloufficialeimprese_tipo_audit_idx ON public.tipocontrolloufficialeimprese USING btree (tipo_audit);


--
-- TOC entry 7094 (class 1259 OID 20315)
-- Name: tipocontrolloufficialeimprese_tipoispezione_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX tipocontrolloufficialeimprese_tipoispezione_idx ON public.tipocontrolloufficialeimprese USING btree (tipoispezione);


--
-- TOC entry 6628 (class 1259 OID 20316)
-- Name: usernameloc; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX usernameloc ON public.access_ USING btree (username, data_scadenza) WHERE (trashed_date IS NULL);


--
-- TOC entry 7415 (class 2618 OID 20317)
-- Name: access_ext access_ext_insert; Type: RULE; Schema: public; Owner: postgres
--

CREATE RULE access_ext_insert AS
    ON INSERT TO public.access_ext DO INSTEAD  INSERT INTO public.access_ext_ (user_id, username, password, contact_id, site_id, role_id, enteredby, modifiedby, timezone, currency, language, enabled, expires, in_access, in_dpat, in_nucleo_ispettivo)
  VALUES (new.user_id, new.username, new.password, new.contact_id, new.site_id, new.role_id, new.enteredby, new.modifiedby, new.timezone, new.currency, new.language, new.enabled, new.expires, new.in_access, new.in_dpat, new.in_nucleo_ispettivo);


--
-- TOC entry 7416 (class 2618 OID 20319)
-- Name: access_ext access_ext_update; Type: RULE; Schema: public; Owner: postgres
--

CREATE RULE access_ext_update AS
    ON UPDATE TO public.access_ext DO INSTEAD  UPDATE public.access_ext_ SET access_position_err = new.access_position_err, access_position_lon = new.access_position_lon, access_position_lat = new.access_position_lat, action = new.action, command = new.command, object_id = new.object_id, last_interaction_time = new.last_interaction_time, last_login = new.last_login, last_ip = new.last_ip, modifiedby = new.modifiedby, modified = new.modified
  WHERE (access_ext_.user_id = new.user_id);


--
-- TOC entry 7417 (class 2618 OID 20321)
-- Name: access access_insert; Type: RULE; Schema: public; Owner: postgres
--

CREATE RULE access_insert AS
    ON INSERT TO public.access DO INSTEAD  INSERT INTO public.access_ (user_id, username, password, contact_id, site_id, role_id, enteredby, modifiedby, timezone, currency, language, enabled, expires, in_access, in_dpat, in_nucleo_ispettivo)
  VALUES (new.user_id, new.username, new.password, new.contact_id, new.site_id, new.role_id, new.enteredby, new.modifiedby, new.timezone, new.currency, new.language, new.enabled, new.expires, new.in_access, new.in_dpat, new.in_nucleo_ispettivo);


--
-- TOC entry 7418 (class 2618 OID 20322)
-- Name: access access_update; Type: RULE; Schema: public; Owner: postgres
--

CREATE RULE access_update AS
    ON UPDATE TO public.access DO INSTEAD  UPDATE public.access_ SET access_position_err = new.access_position_err, access_position_lon = new.access_position_lon, access_position_lat = new.access_position_lat, action = new.action, command = new.command, object_id = new.object_id, last_interaction_time = new.last_interaction_time, last_login = new.last_login, last_ip = new.last_ip, modifiedby = new.modifiedby, modified = new.modified
  WHERE (access_.user_id = new.user_id);


--
-- TOC entry 7419 (class 2618 OID 20323)
-- Name: contact_ext contact_ext_insert; Type: RULE; Schema: public; Owner: postgres
--

CREATE RULE contact_ext_insert AS
    ON INSERT TO public.contact_ext DO INSTEAD  INSERT INTO public.contact_ext_ (contact_id, user_id, namefirst, namelast, enteredby, modifiedby, site_id, codice_fiscale, notes, enabled, luogo, nickname, visibilita_delega, num_registrazione_stab)
  VALUES (new.contact_id, new.user_id, new.namefirst, new.namelast, new.enteredby, new.modifiedby, new.site_id, new.codice_fiscale, new.notes, new.enabled, new.luogo, new.nickname, new.visibilita_delega, new.num_registrazione_stab);


--
-- TOC entry 7420 (class 2618 OID 20325)
-- Name: contact contact_insert; Type: RULE; Schema: public; Owner: postgres
--

CREATE RULE contact_insert AS
    ON INSERT TO public.contact DO INSTEAD  INSERT INTO public.contact_ (contact_id, user_id, namefirst, namelast, enteredby, modifiedby, site_id, codice_fiscale, notes, enabled, luogo, nickname, visibilita_delega, num_registrazione_stab)
  VALUES (new.contact_id, new.user_id, new.namefirst, new.namelast, new.enteredby, new.modifiedby, new.site_id, new.codice_fiscale, new.notes, new.enabled, new.luogo, new.nickname, new.visibilita_delega, new.num_registrazione_stab);


--
-- TOC entry 7425 (class 2618 OID 21146)
-- Name: dpat_strumento_calcolo_nominativi nominativi_insert; Type: RULE; Schema: public; Owner: postgres
--

CREATE RULE nominativi_insert AS
    ON INSERT TO public.dpat_strumento_calcolo_nominativi DO INSTEAD  INSERT INTO public.dpat_strumento_calcolo_nominativi_ (id, id_anagrafica_nominativo, id_lookup_qualifica, id_dpat_strumento_calcolo_strutture, entered_by, entered, stato, codice_interno_fk)
  VALUES (new.id, new.id_anagrafica_nominativo, new.id_lookup_qualifica, new.id_dpat_strumento_calcolo_strutture, new.entered_by, new.entered, new.stato, new.codice_interno_fk);


--
-- TOC entry 7426 (class 2618 OID 21147)
-- Name: dpat_strumento_calcolo_nominativi nominativi_update; Type: RULE; Schema: public; Owner: postgres
--

CREATE RULE nominativi_update AS
    ON UPDATE TO public.dpat_strumento_calcolo_nominativi DO INSTEAD  UPDATE public.dpat_strumento_calcolo_nominativi_ SET trashed_date = new.trashed_date, data_scadenza = new.data_scadenza, modified = new.modified, modified_by = new.modified_by, stato = new.stato
  WHERE (dpat_strumento_calcolo_nominativi_.id = new.id);


--
-- TOC entry 7421 (class 2618 OID 20329)
-- Name: oia_nodo strutture_asl_insert; Type: RULE; Schema: public; Owner: postgres
--

CREATE RULE strutture_asl_insert AS
    ON INSERT TO public.oia_nodo DO INSTEAD  INSERT INTO public.strutture_asl (id, id_padre, id_asl, descrizione_lunga, n_livello, entered, entered_by, modified, modified_by, trashed_date, tipologia_struttura, comune, enabled, obsoleto, confermato, id_strumento_calcolo, codice_interno_fk, nome, id_utente, mail, indirizzo, delegato, descrizione_comune, id_oia_nodo_temp, data_scadenza, stato, anno, ui_struttura_foglio_att_iniziale, ui_struttura_foglio_att_finale, id_utente_edit, percentuale_area_a, codice_interno_univoco)
  VALUES (new.id, new.id_padre, new.id_asl, new.descrizione_lunga, new.n_livello, new.entered, new.entered_by, new.modified, new.modified_by, new.trashed_date, new.tipologia_struttura, new.comune, new.enabled, new.obsoleto, new.confermato, new.id_strumento_calcolo, new.codice_interno_fk, new.nome, new.id_utente, new.mail, new.indirizzo, new.delegato, new.descrizione_comune, new.id_oia_nodo_temp, new.data_scadenza, new.stato, new.anno, new.ui_struttura_foglio_att_iniziale, new.ui_struttura_foglio_att_finale, new.id_utente_edit, new.percentuale_area_a, new.codice_interno_univoco);


--
-- TOC entry 7422 (class 2618 OID 20331)
-- Name: oia_nodo strutture_asl_update; Type: RULE; Schema: public; Owner: postgres
--

CREATE RULE strutture_asl_update AS
    ON UPDATE TO public.oia_nodo DO INSTEAD  UPDATE public.strutture_asl SET id_utente_edit = new.id_utente_edit, ui_struttura_foglio_att_iniziale = new.ui_struttura_foglio_att_iniziale, ui_struttura_foglio_att_finale = new.ui_struttura_foglio_att_finale, descrizione_area_struttura_complessa = new.descrizione_area_struttura_complessa, descrizione_lunga = new.descrizione_lunga, trashed_date = new.trashed_date, modified = new.modified, modified_by = new.modified_by, data_scadenza = new.data_scadenza, stato = new.stato, percentuale_area_a = new.percentuale_area_a
  WHERE (strutture_asl.id = new.id);


--
-- TOC entry 7212 (class 2620 OID 20332)
-- Name: opu_indirizzo check_comune; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER check_comune BEFORE INSERT ON public.opu_indirizzo FOR EACH ROW EXECUTE FUNCTION public.opu_indirizzo_check();

ALTER TABLE public.opu_indirizzo DISABLE TRIGGER check_comune;


--
-- TOC entry 7222 (class 2620 OID 20333)
-- Name: organization def_cod_g2s; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER def_cod_g2s AFTER INSERT ON public.organization FOR EACH ROW EXECUTE FUNCTION public.set_cod_g2s();


--
-- TOC entry 7223 (class 2620 OID 20334)
-- Name: organization def_modif_date; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER def_modif_date AFTER INSERT ON public.organization FOR EACH ROW EXECUTE FUNCTION public.set_modif_date();


--
-- TOC entry 7198 (class 2620 OID 20335)
-- Name: ticket evita_data_aperture_null_allerte; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER evita_data_aperture_null_allerte BEFORE INSERT OR UPDATE ON public.ticket FOR EACH ROW EXECUTE FUNCTION public.update_insert_allerta();


--
-- TOC entry 7234 (class 2620 OID 20336)
-- Name: sviluppo_flussi log_operazioni_flusso; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER log_operazioni_flusso BEFORE UPDATE ON public.sviluppo_flussi FOR EACH ROW EXECUTE FUNCTION public.log_operazioni_flusso();


--
-- TOC entry 7217 (class 2620 OID 20337)
-- Name: master_list_aggregazione ml_aggregazione_id; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER ml_aggregazione_id BEFORE INSERT ON public.master_list_aggregazione FOR EACH ROW EXECUTE FUNCTION public.ml_inserisci_id_aggregazione();


--
-- TOC entry 7218 (class 2620 OID 20338)
-- Name: master_list_linea_attivita ml_linea_attivita_id; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER ml_linea_attivita_id BEFORE INSERT ON public.master_list_linea_attivita FOR EACH ROW EXECUTE FUNCTION public.ml_inserisci_id_linea_attivita();


--
-- TOC entry 7219 (class 2620 OID 20339)
-- Name: master_list_macroarea ml_macroarea_id; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER ml_macroarea_id BEFORE INSERT ON public.master_list_macroarea FOR EACH ROW EXECUTE FUNCTION public.ml_inserisci_id_macroarea();


--
-- TOC entry 7214 (class 2620 OID 20340)
-- Name: opu_stabilimento modify_num_reg; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER modify_num_reg BEFORE UPDATE ON public.opu_stabilimento FOR EACH ROW EXECUTE FUNCTION public.update_modif_stab();

ALTER TABLE public.opu_stabilimento DISABLE TRIGGER modify_num_reg;


--
-- TOC entry 7215 (class 2620 OID 20341)
-- Name: opu_stabilimento opu_id_alternativo; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER opu_id_alternativo AFTER INSERT ON public.opu_stabilimento FOR EACH ROW EXECUTE FUNCTION public.inserisci_id_alternativo_opu();


--
-- TOC entry 7213 (class 2620 OID 20342)
-- Name: opu_operatore opu_insert_log; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER opu_insert_log AFTER INSERT ON public.opu_operatore FOR EACH ROW EXECUTE FUNCTION public.opu_insert_log();


--
-- TOC entry 7224 (class 2620 OID 20343)
-- Name: organization organization_delete_materialize_view; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER organization_delete_materialize_view AFTER UPDATE ON public.organization FOR EACH ROW EXECUTE FUNCTION public.aggiornaricerche_anagrafiche_old_materializzata_organization();


--
-- TOC entry 7229 (class 2620 OID 20344)
-- Name: organization_address organization_delete_materialize_view; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER organization_delete_materialize_view AFTER UPDATE ON public.organization_address FOR EACH ROW EXECUTE FUNCTION public.aggiornaricerche_anagrafiche_old_materializzata_organization_ad();

ALTER TABLE public.organization_address DISABLE TRIGGER organization_delete_materialize_view;


--
-- TOC entry 7225 (class 2620 OID 20345)
-- Name: organization organization_insert_linee_attivita_ml8_temp; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER organization_insert_linee_attivita_ml8_temp AFTER INSERT ON public.organization FOR EACH ROW EXECUTE FUNCTION public.insert_linee_attivita_ml8_temp_organization();


--
-- TOC entry 7226 (class 2620 OID 20346)
-- Name: organization organization_insert_materialize_view; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER organization_insert_materialize_view AFTER INSERT ON public.organization FOR EACH ROW EXECUTE FUNCTION public.aggiornaricerche_anagrafiche_old_materializzata_organization();


--
-- TOC entry 7230 (class 2620 OID 20347)
-- Name: organization_address organization_insert_materialize_view; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER organization_insert_materialize_view AFTER INSERT ON public.organization_address FOR EACH ROW EXECUTE FUNCTION public.aggiornaricerche_anagrafiche_old_materializzata_organization_ad();

ALTER TABLE public.organization_address DISABLE TRIGGER organization_insert_materialize_view;


--
-- TOC entry 7231 (class 2620 OID 20348)
-- Name: organization_address prov2; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER prov2 BEFORE INSERT OR UPDATE OF city, state ON public.organization_address FOR EACH ROW EXECUTE FUNCTION public.update_comune_provincia();

ALTER TABLE public.organization_address DISABLE TRIGGER prov2;


--
-- TOC entry 7209 (class 2620 OID 20349)
-- Name: access_ role_lock_dpat_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER role_lock_dpat_trigger BEFORE UPDATE ON public.access_ FOR EACH ROW EXECUTE FUNCTION public.role_lock_dpat();

ALTER TABLE public.access_ DISABLE TRIGGER role_lock_dpat_trigger;


--
-- TOC entry 7232 (class 2620 OID 20350)
-- Name: sintesis_stabilimento sintesis_id_alternativo; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER sintesis_id_alternativo AFTER INSERT ON public.sintesis_stabilimento FOR EACH ROW EXECUTE FUNCTION public.inserisci_id_alternativo_sintesis();


--
-- TOC entry 7233 (class 2620 OID 20351)
-- Name: suap_ric_scia_stabilimento suap_ric_id_alternativo; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER suap_ric_id_alternativo AFTER INSERT ON public.suap_ric_scia_stabilimento FOR EACH ROW EXECUTE FUNCTION public.inserisci_id_alternativo_ric();


--
-- TOC entry 7199 (class 2620 OID 20352)
-- Name: ticket trigger_delete_cu_canili; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trigger_delete_cu_canili AFTER DELETE ON public.ticket FOR EACH ROW EXECUTE FUNCTION public.delete_cu_canili();

ALTER TABLE public.ticket DISABLE TRIGGER trigger_delete_cu_canili;


--
-- TOC entry 7200 (class 2620 OID 20353)
-- Name: ticket trigger_delete_cu_colonie; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trigger_delete_cu_colonie AFTER DELETE ON public.ticket FOR EACH ROW EXECUTE FUNCTION public.delete_cu_colonie();

ALTER TABLE public.ticket DISABLE TRIGGER trigger_delete_cu_colonie;


--
-- TOC entry 7201 (class 2620 OID 20354)
-- Name: ticket trigger_delete_cu_operatori_commerciali; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trigger_delete_cu_operatori_commerciali AFTER DELETE ON public.ticket FOR EACH ROW EXECUTE FUNCTION public.delete_cu_operatori_commerciali();

ALTER TABLE public.ticket DISABLE TRIGGER trigger_delete_cu_operatori_commerciali;


--
-- TOC entry 7202 (class 2620 OID 20355)
-- Name: ticket trigger_insert_cu_canili; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trigger_insert_cu_canili AFTER INSERT ON public.ticket FOR EACH ROW EXECUTE FUNCTION public.insert_cu_canili();

ALTER TABLE public.ticket DISABLE TRIGGER trigger_insert_cu_canili;


--
-- TOC entry 7203 (class 2620 OID 20356)
-- Name: ticket trigger_insert_cu_colonie; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trigger_insert_cu_colonie AFTER INSERT ON public.ticket FOR EACH ROW EXECUTE FUNCTION public.insert_cu_colonie();

ALTER TABLE public.ticket DISABLE TRIGGER trigger_insert_cu_colonie;


--
-- TOC entry 7204 (class 2620 OID 20357)
-- Name: ticket trigger_insert_cu_operatori_commerciali; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trigger_insert_cu_operatori_commerciali AFTER INSERT ON public.ticket FOR EACH ROW EXECUTE FUNCTION public.insert_cu_operatori_commerciali();

ALTER TABLE public.ticket DISABLE TRIGGER trigger_insert_cu_operatori_commerciali;


--
-- TOC entry 7210 (class 2620 OID 20358)
-- Name: access_ trigger_on_update_access; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trigger_on_update_access AFTER UPDATE ON public.access_ FOR EACH ROW EXECUTE FUNCTION public.infasa_storico_operazioni_utenti();

ALTER TABLE public.access_ DISABLE TRIGGER trigger_on_update_access;


--
-- TOC entry 7205 (class 2620 OID 20359)
-- Name: ticket trigger_on_update_cu_punti_sbarco_trashed; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trigger_on_update_cu_punti_sbarco_trashed AFTER UPDATE ON public.ticket FOR EACH ROW EXECUTE FUNCTION public.update_cu_children_punti_sbarco_trashed();


--
-- TOC entry 7206 (class 2620 OID 20360)
-- Name: ticket trigger_update_cu_canili; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trigger_update_cu_canili AFTER UPDATE ON public.ticket FOR EACH ROW EXECUTE FUNCTION public.update_cu_canili();

ALTER TABLE public.ticket DISABLE TRIGGER trigger_update_cu_canili;


--
-- TOC entry 7207 (class 2620 OID 20361)
-- Name: ticket trigger_update_cu_colonie; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trigger_update_cu_colonie AFTER UPDATE ON public.ticket FOR EACH ROW EXECUTE FUNCTION public.update_cu_colonie();

ALTER TABLE public.ticket DISABLE TRIGGER trigger_update_cu_colonie;


--
-- TOC entry 7208 (class 2620 OID 20362)
-- Name: ticket trigger_update_cu_operatori_commerciali; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trigger_update_cu_operatori_commerciali AFTER UPDATE ON public.ticket FOR EACH ROW EXECUTE FUNCTION public.update_cu_operatori_commerciali();

ALTER TABLE public.ticket DISABLE TRIGGER trigger_update_cu_operatori_commerciali;


--
-- TOC entry 7211 (class 2620 OID 20363)
-- Name: access_ trigger_update_password; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trigger_update_password AFTER UPDATE ON public.access_ FOR EACH ROW EXECUTE FUNCTION public.update_password();

ALTER TABLE public.access_ DISABLE TRIGGER trigger_update_password;


--
-- TOC entry 7220 (class 2620 OID 20364)
-- Name: opu_relazione_stabilimento_linee_produttive update_inser_update_linee_produttive; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_inser_update_linee_produttive BEFORE INSERT OR UPDATE ON public.opu_relazione_stabilimento_linee_produttive FOR EACH ROW EXECUTE FUNCTION public.update_inser_update_linee_produttive();

ALTER TABLE public.opu_relazione_stabilimento_linee_produttive DISABLE TRIGGER update_inser_update_linee_produttive;


--
-- TOC entry 7227 (class 2620 OID 20365)
-- Name: organization update_modif_date; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_modif_date BEFORE UPDATE ON public.organization FOR EACH ROW EXECUTE FUNCTION public.update_modif_date();


--
-- TOC entry 7228 (class 2620 OID 20366)
-- Name: organization update_operatori_commerciali_bdr; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_operatori_commerciali_bdr AFTER UPDATE ON public.organization FOR EACH ROW EXECUTE FUNCTION public.update_operatori_commerciali_bdr();

ALTER TABLE public.organization DISABLE TRIGGER update_operatori_commerciali_bdr;


--
-- TOC entry 7216 (class 2620 OID 20367)
-- Name: opu_stabilimento update_stato_opu_stabilimento; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_stato_opu_stabilimento BEFORE UPDATE ON public.opu_stabilimento FOR EACH ROW EXECUTE FUNCTION public.update_stato_opu_stabilimento();

ALTER TABLE public.opu_stabilimento DISABLE TRIGGER update_stato_opu_stabilimento;


--
-- TOC entry 7221 (class 2620 OID 20368)
-- Name: opu_relazione_stabilimento_linee_produttive updatenum_reg_temp; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER updatenum_reg_temp BEFORE UPDATE ON public.opu_relazione_stabilimento_linee_produttive FOR EACH ROW EXECUTE FUNCTION public.update_modif_stab_lp();

ALTER TABLE public.opu_relazione_stabilimento_linee_produttive DISABLE TRIGGER updatenum_reg_temp;


--
-- TOC entry 7116 (class 2606 OID 20369)
-- Name: stati_preaccettazione id_preaccettazione_fkey; Type: FK CONSTRAINT; Schema: preaccettazione; Owner: postgres
--

ALTER TABLE ONLY preaccettazione.stati_preaccettazione
    ADD CONSTRAINT id_preaccettazione_fkey FOREIGN KEY (id_preaccettazione) REFERENCES preaccettazione.codici_preaccettazione(id) MATCH FULL;


--
-- TOC entry 7115 (class 2606 OID 20374)
-- Name: associazione_preaccettazione_entita id_stati_fkey; Type: FK CONSTRAINT; Schema: preaccettazione; Owner: postgres
--

ALTER TABLE ONLY preaccettazione.associazione_preaccettazione_entita
    ADD CONSTRAINT id_stati_fkey FOREIGN KEY (id_stati) REFERENCES preaccettazione.stati_preaccettazione(id) MATCH FULL;


--
-- TOC entry 7117 (class 2606 OID 20379)
-- Name: stati_preaccettazione id_stato_fkey; Type: FK CONSTRAINT; Schema: preaccettazione; Owner: postgres
--

ALTER TABLE ONLY preaccettazione.stati_preaccettazione
    ADD CONSTRAINT id_stato_fkey FOREIGN KEY (id_stato) REFERENCES preaccettazione.lookup_stati_pa(id) MATCH FULL;


--
-- TOC entry 7121 (class 2606 OID 20384)
-- Name: access_ext_ access_site_id_ext_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.access_ext_
    ADD CONSTRAINT access_site_id_ext_fkey FOREIGN KEY (site_id) REFERENCES public.lookup_site_id(code);


--
-- TOC entry 7120 (class 2606 OID 20389)
-- Name: access_ access_site_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.access_
    ADD CONSTRAINT access_site_id_fkey FOREIGN KEY (site_id) REFERENCES public.lookup_site_id(code);


--
-- TOC entry 7127 (class 2606 OID 20394)
-- Name: opu_stabilimento asl_key; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.opu_stabilimento
    ADD CONSTRAINT asl_key FOREIGN KEY (id_asl) REFERENCES public.lookup_site_id(code);


--
-- TOC entry 7132 (class 2606 OID 20399)
-- Name: asset asset_account_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.asset
    ADD CONSTRAINT asset_account_id_fkey FOREIGN KEY (account_id) REFERENCES public.organization(org_id);


--
-- TOC entry 7133 (class 2606 OID 20404)
-- Name: asset asset_email_service_model_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.asset
    ADD CONSTRAINT asset_email_service_model_fkey FOREIGN KEY (email_service_model) REFERENCES public.lookup_email_model(code);


--
-- TOC entry 7134 (class 2606 OID 20409)
-- Name: asset asset_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.asset
    ADD CONSTRAINT asset_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES public.asset(asset_id);


--
-- TOC entry 7135 (class 2606 OID 20414)
-- Name: audit_checklist audit_checklist_audit_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.audit_checklist
    ADD CONSTRAINT audit_checklist_audit_id_fkey FOREIGN KEY (audit_id) REFERENCES public.audit(id);


--
-- TOC entry 7136 (class 2606 OID 20419)
-- Name: audit_checklist_type audit_checklist_type_audit_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.audit_checklist_type
    ADD CONSTRAINT audit_checklist_type_audit_id_fkey FOREIGN KEY (audit_id) REFERENCES public.audit(id);


--
-- TOC entry 7193 (class 2606 OID 20424)
-- Name: tipocontrolloufficialeimprese audittipofkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tipocontrolloufficialeimprese
    ADD CONSTRAINT audittipofkey FOREIGN KEY (audit_tipo) REFERENCES public.lookup_audit_tipo(code) MATCH FULL;


--
-- TOC entry 7194 (class 2606 OID 20429)
-- Name: tipocontrolloufficialeimprese bpitfkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tipocontrolloufficialeimprese
    ADD CONSTRAINT bpitfkey FOREIGN KEY (bpi) REFERENCES public.lookup_bpi(code) MATCH FULL;


--
-- TOC entry 7137 (class 2606 OID 20434)
-- Name: cfsinbox_messagelink cfsinbox_messagelink_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cfsinbox_messagelink
    ADD CONSTRAINT cfsinbox_messagelink_id_fkey FOREIGN KEY (id) REFERENCES public.cfsinbox_message(id);


--
-- TOC entry 7138 (class 2606 OID 20439)
-- Name: checklist_type checklist_type_catrischio_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.checklist_type
    ADD CONSTRAINT checklist_type_catrischio_id_fkey FOREIGN KEY (catrischio_id) REFERENCES public.lookup_org_catrischio(code);


--
-- TOC entry 7139 (class 2606 OID 20444)
-- Name: contact_ contact_access_type_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contact_
    ADD CONSTRAINT contact_access_type_fkey FOREIGN KEY (access_type) REFERENCES public.lookup_access_types(code);


--
-- TOC entry 7140 (class 2606 OID 20449)
-- Name: contact_ contact_assistant_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contact_
    ADD CONSTRAINT contact_assistant_fkey FOREIGN KEY (assistant) REFERENCES public.contact_(contact_id);


--
-- TOC entry 7148 (class 2606 OID 20454)
-- Name: contact_emailaddress contact_emailaddress_contact_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contact_emailaddress
    ADD CONSTRAINT contact_emailaddress_contact_id_fkey FOREIGN KEY (contact_id) REFERENCES public.contact_(contact_id);


--
-- TOC entry 7149 (class 2606 OID 20459)
-- Name: contact_emailaddress contact_emailaddress_emailaddress_type_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contact_emailaddress
    ADD CONSTRAINT contact_emailaddress_emailaddress_type_fkey FOREIGN KEY (emailaddress_type) REFERENCES public.lookup_contactemail_types(code);


--
-- TOC entry 7150 (class 2606 OID 20464)
-- Name: contact_emailaddress contact_emailaddress_enteredby_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contact_emailaddress
    ADD CONSTRAINT contact_emailaddress_enteredby_fkey FOREIGN KEY (enteredby) REFERENCES public.access_(user_id);


--
-- TOC entry 7151 (class 2606 OID 20469)
-- Name: contact_emailaddress contact_emailaddress_modifiedby_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contact_emailaddress
    ADD CONSTRAINT contact_emailaddress_modifiedby_fkey FOREIGN KEY (modifiedby) REFERENCES public.access_(user_id);


--
-- TOC entry 7141 (class 2606 OID 20474)
-- Name: contact_ contact_enteredby_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contact_
    ADD CONSTRAINT contact_enteredby_fkey FOREIGN KEY (enteredby) REFERENCES public.access_(user_id);


--
-- TOC entry 7142 (class 2606 OID 20479)
-- Name: contact_ contact_modifiedby_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contact_
    ADD CONSTRAINT contact_modifiedby_fkey FOREIGN KEY (modifiedby) REFERENCES public.access_(user_id);


--
-- TOC entry 7143 (class 2606 OID 20484)
-- Name: contact_ contact_owner_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contact_
    ADD CONSTRAINT contact_owner_fkey FOREIGN KEY (owner) REFERENCES public.access_(user_id);


--
-- TOC entry 7144 (class 2606 OID 20489)
-- Name: contact_ contact_site_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contact_
    ADD CONSTRAINT contact_site_id_fkey FOREIGN KEY (site_id) REFERENCES public.lookup_site_id(code);


--
-- TOC entry 7145 (class 2606 OID 20494)
-- Name: contact_ contact_source_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contact_
    ADD CONSTRAINT contact_source_fkey FOREIGN KEY (source) REFERENCES public.lookup_contact_source(code);


--
-- TOC entry 7146 (class 2606 OID 20499)
-- Name: contact_ contact_super_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contact_
    ADD CONSTRAINT contact_super_fkey FOREIGN KEY (super) REFERENCES public.contact_(contact_id);


--
-- TOC entry 7147 (class 2606 OID 20504)
-- Name: contact_ contact_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contact_
    ADD CONSTRAINT contact_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.access_(user_id);


--
-- TOC entry 7152 (class 2606 OID 20509)
-- Name: dpat_indicatore_new dpat_indicatore_new_id_piano_attivita_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dpat_indicatore_new
    ADD CONSTRAINT dpat_indicatore_new_id_piano_attivita_fkey FOREIGN KEY (id_piano_attivita) REFERENCES public.dpat_piano_attivita_new(id);


--
-- TOC entry 7153 (class 2606 OID 20514)
-- Name: dpat_piano_attivita_new dpat_piano_attivita_new_id_sezione_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dpat_piano_attivita_new
    ADD CONSTRAINT dpat_piano_attivita_new_id_sezione_fkey FOREIGN KEY (id_sezione) REFERENCES public.dpat_sez_new(id);


--
-- TOC entry 7195 (class 2606 OID 20519)
-- Name: tipocontrolloufficialeimprese haccpfkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tipocontrolloufficialeimprese
    ADD CONSTRAINT haccpfkey FOREIGN KEY (haccp) REFERENCES public.lookup_haccp(code) MATCH FULL;


--
-- TOC entry 7154 (class 2606 OID 20524)
-- Name: dpat id_asl; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.dpat
    ADD CONSTRAINT id_asl FOREIGN KEY (id_asl) REFERENCES public.lookup_site_id(code);


--
-- TOC entry 7158 (class 2606 OID 20529)
-- Name: la_rel_ateco_attivita id_linee_attivita_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.la_rel_ateco_attivita
    ADD CONSTRAINT id_linee_attivita_fkey FOREIGN KEY (id_linee_attivita) REFERENCES public.la_linee_attivita(id);


--
-- TOC entry 7128 (class 2606 OID 20534)
-- Name: opu_stabilimento id_op; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.opu_stabilimento
    ADD CONSTRAINT id_op FOREIGN KEY (id_operatore) REFERENCES public.opu_operatore(id);


--
-- TOC entry 7157 (class 2606 OID 20539)
-- Name: la_imprese_linee_attivita id_rel_ateco_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.la_imprese_linee_attivita
    ADD CONSTRAINT id_rel_ateco_fkey FOREIGN KEY (id_rel_ateco_attivita) REFERENCES public.la_rel_ateco_attivita(id);


--
-- TOC entry 7159 (class 2606 OID 20544)
-- Name: la_rel_ateco_attivita istat_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.la_rel_ateco_attivita
    ADD CONSTRAINT istat_fkey FOREIGN KEY (id_lookup_codistat) REFERENCES public.lookup_codistat(code);


--
-- TOC entry 7160 (class 2606 OID 20549)
-- Name: matrici_campioni matrici_campioni_id_matrice; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.matrici_campioni
    ADD CONSTRAINT matrici_campioni_id_matrice FOREIGN KEY (id_matrice) REFERENCES public.matrici(matrice_id);


--
-- TOC entry 7161 (class 2606 OID 20554)
-- Name: messaggi_interni_link messaggi_interni_link_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.messaggi_interni_link
    ADD CONSTRAINT messaggi_interni_link_id_fkey FOREIGN KEY (id) REFERENCES public.messaggi_interni(id);


--
-- TOC entry 7182 (class 2606 OID 20559)
-- Name: sintesis_operatore modified_by_key; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_operatore
    ADD CONSTRAINT modified_by_key FOREIGN KEY (modifiedby) REFERENCES public.access_(user_id);


--
-- TOC entry 7122 (class 2606 OID 20564)
-- Name: opu_operatore opu_operatore_id_indirizzo_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.opu_operatore
    ADD CONSTRAINT opu_operatore_id_indirizzo_fkey FOREIGN KEY (id_indirizzo) REFERENCES public.opu_indirizzo(id);


--
-- TOC entry 7126 (class 2606 OID 20569)
-- Name: opu_soggetto_fisico opu_soggetto_fisico_indirizzo_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.opu_soggetto_fisico
    ADD CONSTRAINT opu_soggetto_fisico_indirizzo_id_fkey FOREIGN KEY (indirizzo_id) REFERENCES public.opu_indirizzo(id);


--
-- TOC entry 7129 (class 2606 OID 20574)
-- Name: opu_stabilimento opu_stabilimento_tipo_attivita_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.opu_stabilimento
    ADD CONSTRAINT opu_stabilimento_tipo_attivita_fkey FOREIGN KEY (tipo_attivita) REFERENCES public.opu_lookup_tipologia_attivita(code);


--
-- TOC entry 7130 (class 2606 OID 20579)
-- Name: opu_stabilimento opu_stabilimento_tipo_carattere_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.opu_stabilimento
    ADD CONSTRAINT opu_stabilimento_tipo_carattere_fkey FOREIGN KEY (tipo_carattere) REFERENCES public.opu_lookup_tipologia_carattere(code);


--
-- TOC entry 7166 (class 2606 OID 20584)
-- Name: organization_address organization_address_address_type_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.organization_address
    ADD CONSTRAINT organization_address_address_type_fkey FOREIGN KEY (address_type) REFERENCES public.lookup_orgaddress_types(code);


--
-- TOC entry 7167 (class 2606 OID 20589)
-- Name: organization_address organization_address_org_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.organization_address
    ADD CONSTRAINT organization_address_org_id_fkey FOREIGN KEY (org_id) REFERENCES public.organization(org_id);


--
-- TOC entry 7164 (class 2606 OID 20594)
-- Name: organization organization_site_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.organization
    ADD CONSTRAINT organization_site_id_fkey FOREIGN KEY (site_id) REFERENCES public.lookup_site_id(code);


--
-- TOC entry 7165 (class 2606 OID 20599)
-- Name: organization organization_source_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.organization
    ADD CONSTRAINT organization_source_fkey FOREIGN KEY (source) REFERENCES public.lookup_contact_source(code);


--
-- TOC entry 7168 (class 2606 OID 20604)
-- Name: permission permission_category_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.permission
    ADD CONSTRAINT permission_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.permission_category(category_id);


--
-- TOC entry 7123 (class 2606 OID 20609)
-- Name: opu_rel_operatore_soggetto_fisico rel_operatore_soggetto_fisico_id_operatore_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.opu_rel_operatore_soggetto_fisico
    ADD CONSTRAINT rel_operatore_soggetto_fisico_id_operatore_fkey FOREIGN KEY (id_operatore) REFERENCES public.opu_operatore(id);


--
-- TOC entry 7124 (class 2606 OID 20614)
-- Name: opu_rel_operatore_soggetto_fisico rel_operatore_soggetto_fisico_id_soggetto_fisico_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.opu_rel_operatore_soggetto_fisico
    ADD CONSTRAINT rel_operatore_soggetto_fisico_id_soggetto_fisico_fkey FOREIGN KEY (id_soggetto_fisico) REFERENCES public.opu_soggetto_fisico(id);


--
-- TOC entry 7125 (class 2606 OID 20619)
-- Name: opu_rel_operatore_soggetto_fisico rel_operatore_soggetto_fisico_stato_ruolo_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.opu_rel_operatore_soggetto_fisico
    ADD CONSTRAINT rel_operatore_soggetto_fisico_stato_ruolo_fkey FOREIGN KEY (stato_ruolo) REFERENCES public.opu_lookup_stato_ruolo_soggetto(code);


--
-- TOC entry 7162 (class 2606 OID 20624)
-- Name: opu_relazione_stabilimento_linee_produttive relazione_stabilimento_linee_produttive_id_stabilimento_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.opu_relazione_stabilimento_linee_produttive
    ADD CONSTRAINT relazione_stabilimento_linee_produttive_id_stabilimento_fkey FOREIGN KEY (id_stabilimento) REFERENCES public.opu_stabilimento(id);


--
-- TOC entry 7155 (class 2606 OID 20629)
-- Name: role role_enteredby_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.role
    ADD CONSTRAINT role_enteredby_fkey FOREIGN KEY (enteredby) REFERENCES public.access_(user_id);


--
-- TOC entry 7156 (class 2606 OID 20634)
-- Name: role role_modifiedby_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.role
    ADD CONSTRAINT role_modifiedby_fkey FOREIGN KEY (modifiedby) REFERENCES public.access_(user_id);


--
-- TOC entry 7169 (class 2606 OID 20639)
-- Name: role_permission role_permission_permission_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.role_permission
    ADD CONSTRAINT role_permission_permission_id_fkey FOREIGN KEY (permission_id) REFERENCES public.permission(permission_id);


--
-- TOC entry 7170 (class 2606 OID 20644)
-- Name: role_permission role_permission_role_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.role_permission
    ADD CONSTRAINT role_permission_role_id_fkey FOREIGN KEY (role_id) REFERENCES public.role(role_id);


--
-- TOC entry 7171 (class 2606 OID 20649)
-- Name: salvataggio_azioni_adottate salvataggio_azioni_adottate_id_azione_adottata_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.salvataggio_azioni_adottate
    ADD CONSTRAINT salvataggio_azioni_adottate_id_azione_adottata_fkey FOREIGN KEY (id_azione_adottata) REFERENCES public.lookup_azioni_adottate(code);


--
-- TOC entry 7172 (class 2606 OID 20654)
-- Name: salvataggio_azioni_adottate salvataggio_azioni_adottate_id_controllo_ufficiale_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.salvataggio_azioni_adottate
    ADD CONSTRAINT salvataggio_azioni_adottate_id_controllo_ufficiale_fkey FOREIGN KEY (id_controllo_ufficiale) REFERENCES public.ticket(ticketid);


--
-- TOC entry 7173 (class 2606 OID 20659)
-- Name: salvataggio_nc_note salvataggio_nc_note_fk; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.salvataggio_nc_note
    ADD CONSTRAINT salvataggio_nc_note_fk FOREIGN KEY (idticket) REFERENCES public.ticket(ticketid);


--
-- TOC entry 7174 (class 2606 OID 20664)
-- Name: salvataggio_specie_trasportata salvataggio_specie_trasportata_id_controllo_ufficiale_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.salvataggio_specie_trasportata
    ADD CONSTRAINT salvataggio_specie_trasportata_id_controllo_ufficiale_fkey FOREIGN KEY (id_controllo_ufficiale) REFERENCES public.ticket(ticketid);


--
-- TOC entry 7175 (class 2606 OID 20669)
-- Name: scheda_operatore_metadati scheda_operatore_metadati_tipo_operatore_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.scheda_operatore_metadati
    ADD CONSTRAINT scheda_operatore_metadati_tipo_operatore_fkey FOREIGN KEY (tipo_operatore) REFERENCES public.lookup_tipo_scheda_operatore(code);


--
-- TOC entry 7131 (class 2606 OID 20674)
-- Name: opu_stabilimento sede_operativa_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.opu_stabilimento
    ADD CONSTRAINT sede_operativa_fkey FOREIGN KEY (id_indirizzo) REFERENCES public.opu_indirizzo(id);


--
-- TOC entry 7177 (class 2606 OID 20679)
-- Name: sintesis_stabilimento sintesis_asl_key; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_stabilimento
    ADD CONSTRAINT sintesis_asl_key FOREIGN KEY (id_asl) REFERENCES public.lookup_site_id(code);


--
-- TOC entry 7178 (class 2606 OID 20684)
-- Name: sintesis_stabilimento sintesis_id_op; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_stabilimento
    ADD CONSTRAINT sintesis_id_op FOREIGN KEY (id_operatore) REFERENCES public.sintesis_operatore(id);


--
-- TOC entry 7183 (class 2606 OID 20689)
-- Name: sintesis_operatore sintesis_operatore_enteredby_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_operatore
    ADD CONSTRAINT sintesis_operatore_enteredby_fkey FOREIGN KEY (enteredby) REFERENCES public.access_(user_id);


--
-- TOC entry 7184 (class 2606 OID 20694)
-- Name: sintesis_rel_operatore_soggetto_fisico sintesis_rel_operatore_soggetto_fisico_id_operatore_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_rel_operatore_soggetto_fisico
    ADD CONSTRAINT sintesis_rel_operatore_soggetto_fisico_id_operatore_fkey FOREIGN KEY (id_operatore) REFERENCES public.sintesis_operatore(id);


--
-- TOC entry 7176 (class 2606 OID 20699)
-- Name: sintesis_relazione_stabilimento_linee_produttive sintesis_relazione_stabilimento_linee_produttive_id_stabiliment; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_relazione_stabilimento_linee_produttive
    ADD CONSTRAINT sintesis_relazione_stabilimento_linee_produttive_id_stabiliment FOREIGN KEY (id_stabilimento) REFERENCES public.sintesis_stabilimento(id);


--
-- TOC entry 7179 (class 2606 OID 20704)
-- Name: sintesis_stabilimento sintesis_sede_operativa_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_stabilimento
    ADD CONSTRAINT sintesis_sede_operativa_fkey FOREIGN KEY (id_indirizzo) REFERENCES public.sintesis_indirizzo(id);


--
-- TOC entry 7185 (class 2606 OID 20709)
-- Name: sintesis_soggetto_fisico sintesis_soggetto_fisico_indirizzo_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_soggetto_fisico
    ADD CONSTRAINT sintesis_soggetto_fisico_indirizzo_id_fkey FOREIGN KEY (indirizzo_id) REFERENCES public.sintesis_indirizzo(id);


--
-- TOC entry 7180 (class 2606 OID 20714)
-- Name: sintesis_stabilimento sintesis_stabilimento_tipo_attivita_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_stabilimento
    ADD CONSTRAINT sintesis_stabilimento_tipo_attivita_fkey FOREIGN KEY (tipo_attivita) REFERENCES public.opu_lookup_tipologia_attivita(code);


--
-- TOC entry 7181 (class 2606 OID 20719)
-- Name: sintesis_stabilimento sintesis_stabilimento_tipo_carattere_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sintesis_stabilimento
    ADD CONSTRAINT sintesis_stabilimento_tipo_carattere_fkey FOREIGN KEY (tipo_carattere) REFERENCES public.opu_lookup_tipologia_carattere(code);


--
-- TOC entry 7163 (class 2606 OID 20724)
-- Name: opu_relazione_stabilimento_linee_produttive stato_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.opu_relazione_stabilimento_linee_produttive
    ADD CONSTRAINT stato_fkey FOREIGN KEY (stato) REFERENCES public.lookup_stato_lab(code);


--
-- TOC entry 7186 (class 2606 OID 20729)
-- Name: strutture_controllate_autorita_competenti strutture_controllate_autorita_competenti_id_controllo_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.strutture_controllate_autorita_competenti
    ADD CONSTRAINT strutture_controllate_autorita_competenti_id_controllo_fkey FOREIGN KEY (id_controllo) REFERENCES public.ticket(ticketid);


--
-- TOC entry 7187 (class 2606 OID 20734)
-- Name: strutture_controllate_autorita_competenti strutture_controllate_autorita_competenti_id_struttura_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.strutture_controllate_autorita_competenti
    ADD CONSTRAINT strutture_controllate_autorita_competenti_id_struttura_fkey FOREIGN KEY (id_struttura) REFERENCES public.strutture_asl(id);


--
-- TOC entry 7192 (class 2606 OID 20739)
-- Name: suap_ric_scia_operatore suap_ric_scia_operatore_id_indirizzo_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.suap_ric_scia_operatore
    ADD CONSTRAINT suap_ric_scia_operatore_id_indirizzo_fkey FOREIGN KEY (id_indirizzo) REFERENCES public.opu_indirizzo(id);


--
-- TOC entry 7188 (class 2606 OID 20744)
-- Name: suap_ric_scia_relazione_stabilimento_linee_produttive suap_ric_scia_relazione_stabilimento_linee_produttive_id_stabil; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.suap_ric_scia_relazione_stabilimento_linee_produttive
    ADD CONSTRAINT suap_ric_scia_relazione_stabilimento_linee_produttive_id_stabil FOREIGN KEY (id_stabilimento) REFERENCES public.suap_ric_scia_stabilimento(id);


--
-- TOC entry 7190 (class 2606 OID 20749)
-- Name: suap_ric_scia_stabilimento suap_ric_scia_stabilimento_id_operatore_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.suap_ric_scia_stabilimento
    ADD CONSTRAINT suap_ric_scia_stabilimento_id_operatore_fkey FOREIGN KEY (id_operatore) REFERENCES public.suap_ric_scia_operatore(id);


--
-- TOC entry 7189 (class 2606 OID 20754)
-- Name: suap_ric_scia_relazione_stabilimento_linee_produttive suap_ric_scia_stato_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.suap_ric_scia_relazione_stabilimento_linee_produttive
    ADD CONSTRAINT suap_ric_scia_stato_fkey FOREIGN KEY (stato) REFERENCES public.lookup_stato_lab(code);


--
-- TOC entry 7191 (class 2606 OID 20759)
-- Name: suap_ric_scia_stabilimento suap_ric_sciasede_operativa_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.suap_ric_scia_stabilimento
    ADD CONSTRAINT suap_ric_sciasede_operativa_fkey FOREIGN KEY (id_indirizzo) REFERENCES public.opu_indirizzo(id);


--
-- TOC entry 7118 (class 2606 OID 20764)
-- Name: ticket ticket_org_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ticket
    ADD CONSTRAINT ticket_org_id_fkey FOREIGN KEY (org_id) REFERENCES public.organization(org_id);


--
-- TOC entry 7119 (class 2606 OID 20769)
-- Name: ticket ticket_site_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ticket
    ADD CONSTRAINT ticket_site_id_fkey FOREIGN KEY (site_id) REFERENCES public.lookup_site_id(code);


--
-- TOC entry 7196 (class 2606 OID 20774)
-- Name: tipocontrolloufficialeimprese tipoauditfkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tipocontrolloufficialeimprese
    ADD CONSTRAINT tipoauditfkey FOREIGN KEY (tipo_audit) REFERENCES public.lookup_tipo_audit(code) MATCH FULL;


--
-- TOC entry 7197 (class 2606 OID 20779)
-- Name: tipocontrolloufficialeimprese tipocontrolloufficialeimprese_idcontrollo_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tipocontrolloufficialeimprese
    ADD CONSTRAINT tipocontrolloufficialeimprese_idcontrollo_fkey FOREIGN KEY (idcontrollo) REFERENCES public.ticket(ticketid);


--
-- TOC entry 7439 (class 0 OID 0)
-- Dependencies: 242
-- Name: TABLE associazione_preaccettazione_entita; Type: ACL; Schema: preaccettazione; Owner: postgres
--

GRANT ALL ON TABLE preaccettazione.associazione_preaccettazione_entita TO PUBLIC;


--
-- TOC entry 7441 (class 0 OID 0)
-- Dependencies: 244
-- Name: TABLE codici_preaccettazione; Type: ACL; Schema: preaccettazione; Owner: postgres
--

GRANT ALL ON TABLE preaccettazione.codici_preaccettazione TO PUBLIC;


--
-- TOC entry 7443 (class 0 OID 0)
-- Dependencies: 246
-- Name: TABLE lookup_ente; Type: ACL; Schema: preaccettazione; Owner: postgres
--

GRANT ALL ON TABLE preaccettazione.lookup_ente TO PUBLIC;


--
-- TOC entry 7444 (class 0 OID 0)
-- Dependencies: 247
-- Name: TABLE lookup_stati_pa; Type: ACL; Schema: preaccettazione; Owner: postgres
--

GRANT ALL ON TABLE preaccettazione.lookup_stati_pa TO PUBLIC;


--
-- TOC entry 7445 (class 0 OID 0)
-- Dependencies: 248
-- Name: TABLE stati_preaccettazione; Type: ACL; Schema: preaccettazione; Owner: postgres
--

GRANT ALL ON TABLE preaccettazione.stati_preaccettazione TO PUBLIC;


--
-- TOC entry 7447 (class 0 OID 0)
-- Dependencies: 251
-- Name: TABLE vw_ticket_cmp; Type: ACL; Schema: preaccettazione; Owner: postgres
--

GRANT ALL ON TABLE preaccettazione.vw_ticket_cmp TO PUBLIC;


--
-- TOC entry 7448 (class 0 OID 0)
-- Dependencies: 252
-- Name: TABLE vw_ticket_controllo_sorveglianza; Type: ACL; Schema: preaccettazione; Owner: postgres
--

GRANT ALL ON TABLE preaccettazione.vw_ticket_controllo_sorveglianza TO PUBLIC;


--
-- TOC entry 7449 (class 0 OID 0)
-- Dependencies: 253
-- Name: TABLE vw_ticket_cu; Type: ACL; Schema: preaccettazione; Owner: postgres
--

GRANT ALL ON TABLE preaccettazione.vw_ticket_cu TO PUBLIC;


--
-- TOC entry 7450 (class 0 OID 0)
-- Dependencies: 254
-- Name: TABLE vw_ticket_cu_ispezione_semplice; Type: ACL; Schema: preaccettazione; Owner: postgres
--

GRANT ALL ON TABLE preaccettazione.vw_ticket_cu_ispezione_semplice TO PUBLIC;


--
-- TOC entry 7451 (class 0 OID 0)
-- Dependencies: 255
-- Name: TABLE vw_ticket_senza_controllo_sorveglianza; Type: ACL; Schema: preaccettazione; Owner: postgres
--

GRANT ALL ON TABLE preaccettazione.vw_ticket_senza_controllo_sorveglianza TO PUBLIC;


--
-- TOC entry 7452 (class 0 OID 0)
-- Dependencies: 256
-- Name: TABLE vw_ultimo_stato; Type: ACL; Schema: preaccettazione; Owner: postgres
--

GRANT ALL ON TABLE preaccettazione.vw_ultimo_stato TO PUBLIC;


-- Completed on 2023-08-01 08:16:40

--
-- PostgreSQL database dump complete
--

